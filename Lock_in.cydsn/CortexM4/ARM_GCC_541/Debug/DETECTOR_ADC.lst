ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"DETECTOR_ADC.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.DETECTOR_ADC_InitConfig,"ax",%progbits
  21              		.align	2
  22              		.global	DETECTOR_ADC_InitConfig
  23              		.thumb
  24              		.thumb_func
  25              		.type	DETECTOR_ADC_InitConfig, %function
  26              	DETECTOR_ADC_InitConfig:
  27              	.LFB216:
  28              		.file 1 "Generated_Source\\PSoC6\\DETECTOR_ADC.c"
   1:Generated_Source\PSoC6/DETECTOR_ADC.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \file     DETECTOR_ADC.c
   3:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \version  3.10
   4:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
   5:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \brief
   6:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Provides the source code to the API for the DETECTOR_ADC Component.
   7:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
   8:Generated_Source\PSoC6/DETECTOR_ADC.c **** ********************************************************************************
   9:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \copyright
  10:Generated_Source\PSoC6/DETECTOR_ADC.c **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/DETECTOR_ADC.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/DETECTOR_ADC.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/DETECTOR_ADC.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/DETECTOR_ADC.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/DETECTOR_ADC.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/DETECTOR_ADC.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/DETECTOR_ADC.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/DETECTOR_ADC.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/DETECTOR_ADC.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/DETECTOR_ADC.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/DETECTOR_ADC.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/DETECTOR_ADC.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/DETECTOR_ADC.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/DETECTOR_ADC.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/DETECTOR_ADC.c **** * changes to the Software without notice. Cypress does not assume any
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 2


  30:Generated_Source\PSoC6/DETECTOR_ADC.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/DETECTOR_ADC.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/DETECTOR_ADC.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/DETECTOR_ADC.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/DETECTOR_ADC.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/DETECTOR_ADC.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/DETECTOR_ADC.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/DETECTOR_ADC.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/DETECTOR_ADC.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/DETECTOR_ADC.c **** #include "DETECTOR_ADC.h"
  40:Generated_Source\PSoC6/DETECTOR_ADC.c **** #include <sysint/cy_sysint.h>
  41:Generated_Source\PSoC6/DETECTOR_ADC.c **** #include <cyfitter_sysint_cfg.h>
  42:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
  43:Generated_Source\PSoC6/DETECTOR_ADC.c **** uint8_t DETECTOR_ADC_initVar = 0u;
  44:Generated_Source\PSoC6/DETECTOR_ADC.c **** uint8_t DETECTOR_ADC_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  45:Generated_Source\PSoC6/DETECTOR_ADC.c **** uint32_t DETECTOR_ADC_currentConfig = 0u; /* Currently active configuration */
  46:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
  47:Generated_Source\PSoC6/DETECTOR_ADC.c **** /*******************************************************************************
  48:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Function Name: DETECTOR_ADC_Start
  49:Generated_Source\PSoC6/DETECTOR_ADC.c **** ****************************************************************************//**
  50:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
  51:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \brief Performs all required initialization for this component and enables the
  52:Generated_Source\PSoC6/DETECTOR_ADC.c **** *  power. The power will be set to the appropriate power based on the clock
  53:Generated_Source\PSoC6/DETECTOR_ADC.c **** *  frequency.
  54:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
  55:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \param None
  56:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
  57:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \return None
  58:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
  59:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \sideeffect None
  60:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
  61:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \globalvars
  62:Generated_Source\PSoC6/DETECTOR_ADC.c **** *  \ref DETECTOR_ADC_initVar (RW)
  63:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
  64:Generated_Source\PSoC6/DETECTOR_ADC.c **** *******************************************************************************/
  65:Generated_Source\PSoC6/DETECTOR_ADC.c **** void DETECTOR_ADC_Start(void)
  66:Generated_Source\PSoC6/DETECTOR_ADC.c **** {
  67:Generated_Source\PSoC6/DETECTOR_ADC.c ****     if (DETECTOR_ADC_INIT_VAR_INIT_FLAG != (DETECTOR_ADC_INIT_VAR_INIT_FLAG & DETECTOR_ADC_initVar)
  68:Generated_Source\PSoC6/DETECTOR_ADC.c ****     {
  69:Generated_Source\PSoC6/DETECTOR_ADC.c ****         DETECTOR_ADC_Init();
  70:Generated_Source\PSoC6/DETECTOR_ADC.c ****         DETECTOR_ADC_initVar |= DETECTOR_ADC_INIT_VAR_INIT_FLAG;
  71:Generated_Source\PSoC6/DETECTOR_ADC.c ****     }
  72:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
  73:Generated_Source\PSoC6/DETECTOR_ADC.c ****     DETECTOR_ADC_Enable();
  74:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
  75:Generated_Source\PSoC6/DETECTOR_ADC.c ****     return;
  76:Generated_Source\PSoC6/DETECTOR_ADC.c **** }
  77:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
  78:Generated_Source\PSoC6/DETECTOR_ADC.c **** /*******************************************************************************
  79:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Function Name: DETECTOR_ADC_StartEx
  80:Generated_Source\PSoC6/DETECTOR_ADC.c **** ****************************************************************************//**
  81:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
  82:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \brief This function starts the DETECTOR_ADC and sets the Interrupt
  83:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Service Routine to the provided address using the
  84:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Cy_SysInt_Init() function. Refer to the Interrupt component
  85:Generated_Source\PSoC6/DETECTOR_ADC.c **** * datasheet for more information on the Cy_SysInt_Init() function.
  86:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 3


  87:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \param address This is the address of a user defined function for the ISR.
  88:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
  89:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \return None
  90:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
  91:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \sideeffect None
  92:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
  93:Generated_Source\PSoC6/DETECTOR_ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC6/DETECTOR_ADC.c **** void DETECTOR_ADC_StartEx(cy_israddress userIsr)
  95:Generated_Source\PSoC6/DETECTOR_ADC.c **** {
  96:Generated_Source\PSoC6/DETECTOR_ADC.c ****     DETECTOR_ADC_Start();
  97:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
  98:Generated_Source\PSoC6/DETECTOR_ADC.c ****     /* Interrupt core assignment will be up to the user. Initialize and enable the interrupt*/
  99:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #ifdef DETECTOR_ADC_IRQ__INTC_CORTEXM4_ASSIGNED
 100:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #if (CY_CPU_CORTEX_M4)
 101:Generated_Source\PSoC6/DETECTOR_ADC.c ****         (void)Cy_SysInt_Init(&DETECTOR_ADC_IRQ_cfg, userIsr);
 102:Generated_Source\PSoC6/DETECTOR_ADC.c ****         NVIC_EnableIRQ(DETECTOR_ADC_IRQ_cfg.intrSrc);
 103:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #endif
 104:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #endif
 105:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 106:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #ifdef DETECTOR_ADC_IRQ__INTC_CORTEXM0P_ASSIGNED
 107:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #if (CY_CPU_CORTEX_M0P)
 108:Generated_Source\PSoC6/DETECTOR_ADC.c ****         (void)Cy_SysInt_Init(&DETECTOR_ADC_IRQ_cfg, userIsr);
 109:Generated_Source\PSoC6/DETECTOR_ADC.c ****         NVIC_EnableIRQ(DETECTOR_ADC_IRQ_cfg.intrSrc);
 110:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #endif
 111:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #endif
 112:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 113:Generated_Source\PSoC6/DETECTOR_ADC.c **** }
 114:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 115:Generated_Source\PSoC6/DETECTOR_ADC.c **** /* ****************************************************************************
 116:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Function Name: DETECTOR_ADC_InitConfig
 117:Generated_Source\PSoC6/DETECTOR_ADC.c **** ****************************************************************************//*
 118:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 119:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \brief Configures all of the registers for a given configuration for scanning.
 120:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 121:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \param scan Number of scan defined in the DETECTOR_ADC.
 122:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 123:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \return None
 124:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 125:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \sideeffect None
 126:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 127:Generated_Source\PSoC6/DETECTOR_ADC.c **** *******************************************************************************/
 128:Generated_Source\PSoC6/DETECTOR_ADC.c **** void DETECTOR_ADC_InitConfig(const DETECTOR_ADC_CONFIG_STRUCT *config)
 129:Generated_Source\PSoC6/DETECTOR_ADC.c **** {
  29              		.loc 1 129 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  40 0002 0546     		mov	r5, r0
  41              	.LVL1:
 130:Generated_Source\PSoC6/DETECTOR_ADC.c ****     bool deInitRouting = false;
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 4


 131:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 132:Generated_Source\PSoC6/DETECTOR_ADC.c ****     /* If there is an internal SAR clock, set up its divider values. */
 133:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #if (DETECTOR_ADC_CLOCK_INTERNAL)
 134:Generated_Source\PSoC6/DETECTOR_ADC.c ****         DETECTOR_ADC_intSarClock_Disable();
 135:Generated_Source\PSoC6/DETECTOR_ADC.c ****         DETECTOR_ADC_intSarClock_SetDivider(config->clkDivider);
 136:Generated_Source\PSoC6/DETECTOR_ADC.c ****         DETECTOR_ADC_intSarClock_Enable();
 137:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #endif /* DETECTOR_ADC_CLOCK_INTERNAL */
 138:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 139:Generated_Source\PSoC6/DETECTOR_ADC.c ****     /* Init SAR and MUX registers */
 140:Generated_Source\PSoC6/DETECTOR_ADC.c ****     (void)Cy_SAR_DeInit(DETECTOR_ADC_SAR__HW, deInitRouting);
  42              		.loc 1 140 0
  43 0004 044C     		ldr	r4, .L3
  44 0006 0021     		movs	r1, #0
  45 0008 2046     		mov	r0, r4
  46              	.LVL2:
  47 000a FFF7FEFF 		bl	Cy_SAR_DeInit
  48              	.LVL3:
 141:Generated_Source\PSoC6/DETECTOR_ADC.c ****     (void)Cy_SAR_Init(DETECTOR_ADC_SAR__HW, config->hwConfigStc);
  49              		.loc 1 141 0
  50 000e A968     		ldr	r1, [r5, #8]
  51 0010 2046     		mov	r0, r4
  52 0012 FFF7FEFF 		bl	Cy_SAR_Init
  53              	.LVL4:
  54 0016 38BD     		pop	{r3, r4, r5, pc}
  55              	.LVL5:
  56              	.L4:
  57              		.align	2
  58              	.L3:
  59 0018 00001D41 		.word	1092419584
  60              		.cfi_endproc
  61              	.LFE216:
  62              		.size	DETECTOR_ADC_InitConfig, .-DETECTOR_ADC_InitConfig
  63              		.section	.text.DETECTOR_ADC_StartConvert,"ax",%progbits
  64              		.align	2
  65              		.global	DETECTOR_ADC_StartConvert
  66              		.thumb
  67              		.thumb_func
  68              		.type	DETECTOR_ADC_StartConvert, %function
  69              	DETECTOR_ADC_StartConvert:
  70              	.LFB218:
 142:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 143:Generated_Source\PSoC6/DETECTOR_ADC.c ****     /* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured
 144:Generated_Source\PSoC6/DETECTOR_ADC.c ****     if(1uL == DETECTOR_ADC_MUX_SWITCH0_INIT)
 145:Generated_Source\PSoC6/DETECTOR_ADC.c ****     {
 146:Generated_Source\PSoC6/DETECTOR_ADC.c ****         Cy_SAR_SetVssaVminusSwitch(DETECTOR_ADC_SAR__HW, CY_SAR_SWITCH_CLOSE);
 147:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 148:Generated_Source\PSoC6/DETECTOR_ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 149:Generated_Source\PSoC6/DETECTOR_ADC.c ****         if(1uL < config->numChannels)
 150:Generated_Source\PSoC6/DETECTOR_ADC.c ****         {
 151:Generated_Source\PSoC6/DETECTOR_ADC.c ****             Cy_SAR_SetVssaSarSeqCtrl(DETECTOR_ADC_SAR__HW, CY_SAR_SWITCH_SEQ_CTRL_ENABLE);
 152:Generated_Source\PSoC6/DETECTOR_ADC.c ****         }
 153:Generated_Source\PSoC6/DETECTOR_ADC.c ****     }
 154:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 155:Generated_Source\PSoC6/DETECTOR_ADC.c ****     return;
 156:Generated_Source\PSoC6/DETECTOR_ADC.c **** }
 157:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 158:Generated_Source\PSoC6/DETECTOR_ADC.c **** /* ****************************************************************************
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 5


 159:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Function Name: DETECTOR_ADC_SelectConfig
 160:Generated_Source\PSoC6/DETECTOR_ADC.c **** ****************************************************************************//*
 161:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 162:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \brief Selects the predefined configuration for scanning.
 163:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 164:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \param config Number of configuration in the DETECTOR_ADC.
 165:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 166:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \param restart Set to 1u if the DETECTOR_ADC should be  restarted after
 167:Generated_Source\PSoC6/DETECTOR_ADC.c **** * selecting the configuration.
 168:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 169:Generated_Source\PSoC6/DETECTOR_ADC.c **** *******************************************************************************/
 170:Generated_Source\PSoC6/DETECTOR_ADC.c **** void DETECTOR_ADC_SelectConfig(uint32_t config, uint32_t restart)
 171:Generated_Source\PSoC6/DETECTOR_ADC.c **** {
 172:Generated_Source\PSoC6/DETECTOR_ADC.c ****     /* Check whether the configuration number is valid or not */
 173:Generated_Source\PSoC6/DETECTOR_ADC.c ****     if(DETECTOR_ADC_TOTAL_CONFIGS > config)
 174:Generated_Source\PSoC6/DETECTOR_ADC.c ****     {
 175:Generated_Source\PSoC6/DETECTOR_ADC.c ****         /* Stop the ADC before changing configurations */
 176:Generated_Source\PSoC6/DETECTOR_ADC.c ****         DETECTOR_ADC_Stop();
 177:Generated_Source\PSoC6/DETECTOR_ADC.c ****         DETECTOR_ADC_selected = 1u;
 178:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 179:Generated_Source\PSoC6/DETECTOR_ADC.c ****         if(0u == DETECTOR_ADC_initVar)
 180:Generated_Source\PSoC6/DETECTOR_ADC.c ****         {
 181:Generated_Source\PSoC6/DETECTOR_ADC.c ****             DETECTOR_ADC_Init();
 182:Generated_Source\PSoC6/DETECTOR_ADC.c ****             DETECTOR_ADC_initVar |= DETECTOR_ADC_INIT_VAR_INIT_FLAG;
 183:Generated_Source\PSoC6/DETECTOR_ADC.c ****         }
 184:Generated_Source\PSoC6/DETECTOR_ADC.c ****         #if (DETECTOR_ADC_VREF_ROUTED)
 185:Generated_Source\PSoC6/DETECTOR_ADC.c ****             DETECTOR_ADC_vrefAMux_DisconnectAll();
 186:Generated_Source\PSoC6/DETECTOR_ADC.c ****         #endif
 187:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 188:Generated_Source\PSoC6/DETECTOR_ADC.c ****         DETECTOR_ADC_InitConfig(&DETECTOR_ADC_allConfigs[config]);
 189:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 190:Generated_Source\PSoC6/DETECTOR_ADC.c ****         #if (DETECTOR_ADC_VREF_ROUTED)
 191:Generated_Source\PSoC6/DETECTOR_ADC.c ****             DETECTOR_ADC_vrefAMux_Select((uint8)config);
 192:Generated_Source\PSoC6/DETECTOR_ADC.c ****         #endif
 193:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 194:Generated_Source\PSoC6/DETECTOR_ADC.c ****         DETECTOR_ADC_currentConfig = config;
 195:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 196:Generated_Source\PSoC6/DETECTOR_ADC.c ****         if(1u == restart)
 197:Generated_Source\PSoC6/DETECTOR_ADC.c ****         {
 198:Generated_Source\PSoC6/DETECTOR_ADC.c ****             /* Restart the ADC */
 199:Generated_Source\PSoC6/DETECTOR_ADC.c ****             DETECTOR_ADC_Start();
 200:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 201:Generated_Source\PSoC6/DETECTOR_ADC.c ****             /* Restart the scan */
 202:Generated_Source\PSoC6/DETECTOR_ADC.c ****             DETECTOR_ADC_StartConvert();
 203:Generated_Source\PSoC6/DETECTOR_ADC.c ****         }
 204:Generated_Source\PSoC6/DETECTOR_ADC.c ****     }
 205:Generated_Source\PSoC6/DETECTOR_ADC.c ****     return;
 206:Generated_Source\PSoC6/DETECTOR_ADC.c **** }
 207:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 208:Generated_Source\PSoC6/DETECTOR_ADC.c **** /*******************************************************************************
 209:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Function Name: DETECTOR_ADC_StartConvert
 210:Generated_Source\PSoC6/DETECTOR_ADC.c **** ****************************************************************************//**
 211:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 212:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \brief In continuous mode, this API starts the conversion process and it runs
 213:Generated_Source\PSoC6/DETECTOR_ADC.c **** * continuously.
 214:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 215:Generated_Source\PSoC6/DETECTOR_ADC.c **** * In Single Shot mode, the function triggers a single scan and
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 6


 216:Generated_Source\PSoC6/DETECTOR_ADC.c **** * every scan requires a call of this function. The mode is set with the
 217:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Sample Mode parameter in the customizer. The customizer setting can be
 218:Generated_Source\PSoC6/DETECTOR_ADC.c **** * overridden at run time with the DETECTOR_ADC_SetConvertMode() function.
 219:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 220:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \param None
 221:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 222:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \return None
 223:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 224:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \sideeffect None
 225:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 226:Generated_Source\PSoC6/DETECTOR_ADC.c **** *******************************************************************************/
 227:Generated_Source\PSoC6/DETECTOR_ADC.c **** void DETECTOR_ADC_StartConvert(void)
 228:Generated_Source\PSoC6/DETECTOR_ADC.c **** {
  71              		.loc 1 228 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75 0000 08B5     		push	{r3, lr}
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 3, -8
  78              		.cfi_offset 14, -4
 229:Generated_Source\PSoC6/DETECTOR_ADC.c ****     if (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk == (DETECTOR_ADC_SAR__HW->SAMPLE_CTRL & SAR_SAMPLE_CT
  79              		.loc 1 229 0
  80 0002 074B     		ldr	r3, .L9
  81 0004 5B68     		ldr	r3, [r3, #4]
  82 0006 13F4802F 		tst	r3, #262144
  83 000a 04D0     		beq	.L6
 230:Generated_Source\PSoC6/DETECTOR_ADC.c ****     {
 231:Generated_Source\PSoC6/DETECTOR_ADC.c ****         Cy_SAR_StartConvert(DETECTOR_ADC_SAR__HW, CY_SAR_START_CONVERT_CONTINUOUS);
  84              		.loc 1 231 0
  85 000c 0121     		movs	r1, #1
  86 000e 0448     		ldr	r0, .L9
  87 0010 FFF7FEFF 		bl	Cy_SAR_StartConvert
  88              	.LVL6:
  89 0014 08BD     		pop	{r3, pc}
  90              	.L6:
 232:Generated_Source\PSoC6/DETECTOR_ADC.c ****     }
 233:Generated_Source\PSoC6/DETECTOR_ADC.c ****     else
 234:Generated_Source\PSoC6/DETECTOR_ADC.c ****     {
 235:Generated_Source\PSoC6/DETECTOR_ADC.c ****         Cy_SAR_StartConvert(DETECTOR_ADC_SAR__HW, CY_SAR_START_CONVERT_SINGLE_SHOT);
  91              		.loc 1 235 0
  92 0016 0021     		movs	r1, #0
  93 0018 0148     		ldr	r0, .L9
  94 001a FFF7FEFF 		bl	Cy_SAR_StartConvert
  95              	.LVL7:
  96 001e 08BD     		pop	{r3, pc}
  97              	.L10:
  98              		.align	2
  99              	.L9:
 100 0020 00001D41 		.word	1092419584
 101              		.cfi_endproc
 102              	.LFE218:
 103              		.size	DETECTOR_ADC_StartConvert, .-DETECTOR_ADC_StartConvert
 104              		.section	.text.DETECTOR_ADC_SetConvertMode,"ax",%progbits
 105              		.align	2
 106              		.global	DETECTOR_ADC_SetConvertMode
 107              		.thumb
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 7


 108              		.thumb_func
 109              		.type	DETECTOR_ADC_SetConvertMode, %function
 110              	DETECTOR_ADC_SetConvertMode:
 111              	.LFB219:
 236:Generated_Source\PSoC6/DETECTOR_ADC.c ****     }
 237:Generated_Source\PSoC6/DETECTOR_ADC.c **** }
 238:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 239:Generated_Source\PSoC6/DETECTOR_ADC.c **** /*******************************************************************************
 240:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Function Name: DETECTOR_ADC_SetConvertMode
 241:Generated_Source\PSoC6/DETECTOR_ADC.c **** ****************************************************************************//**
 242:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 243:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This
 244:Generated_Source\PSoC6/DETECTOR_ADC.c **** * function overrides the settings applied in the customizer. Changing
 245:Generated_Source\PSoC6/DETECTOR_ADC.c **** * configurations will restore the values set in the customizer.
 246:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 247:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \param mode Sets the conversion mode.
 248:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 249:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \return None
 250:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 251:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \sideeffect None
 252:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 253:Generated_Source\PSoC6/DETECTOR_ADC.c **** *******************************************************************************/
 254:Generated_Source\PSoC6/DETECTOR_ADC.c **** void DETECTOR_ADC_SetConvertMode(cy_en_sar_start_convert_sel_t mode)
 255:Generated_Source\PSoC6/DETECTOR_ADC.c **** {
 112              		.loc 1 255 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.LVL8:
 256:Generated_Source\PSoC6/DETECTOR_ADC.c ****     switch(mode)
 118              		.loc 1 256 0
 119 0000 0128     		cmp	r0, #1
 120 0002 05D1     		bne	.L15
 257:Generated_Source\PSoC6/DETECTOR_ADC.c ****     {
 258:Generated_Source\PSoC6/DETECTOR_ADC.c ****     case CY_SAR_START_CONVERT_CONTINUOUS:
 259:Generated_Source\PSoC6/DETECTOR_ADC.c ****         DETECTOR_ADC_SAR__HW->SAMPLE_CTRL |= SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk;
 121              		.loc 1 259 0
 122 0004 054A     		ldr	r2, .L16
 123 0006 5368     		ldr	r3, [r2, #4]
 124 0008 43F48023 		orr	r3, r3, #262144
 125 000c 5360     		str	r3, [r2, #4]
 260:Generated_Source\PSoC6/DETECTOR_ADC.c ****         break;
 126              		.loc 1 260 0
 127 000e 7047     		bx	lr
 128              	.L15:
 261:Generated_Source\PSoC6/DETECTOR_ADC.c ****     case CY_SAR_START_CONVERT_SINGLE_SHOT:
 262:Generated_Source\PSoC6/DETECTOR_ADC.c ****     default:
 263:Generated_Source\PSoC6/DETECTOR_ADC.c ****         DETECTOR_ADC_SAR__HW->SAMPLE_CTRL &= ~SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk;
 129              		.loc 1 263 0
 130 0010 024A     		ldr	r2, .L16
 131 0012 5368     		ldr	r3, [r2, #4]
 132 0014 23F48023 		bic	r3, r3, #262144
 133 0018 5360     		str	r3, [r2, #4]
 134 001a 7047     		bx	lr
 135              	.L17:
 136              		.align	2
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 8


 137              	.L16:
 138 001c 00001D41 		.word	1092419584
 139              		.cfi_endproc
 140              	.LFE219:
 141              		.size	DETECTOR_ADC_SetConvertMode, .-DETECTOR_ADC_SetConvertMode
 142              		.section	.text.DETECTOR_ADC_IRQ_Enable,"ax",%progbits
 143              		.align	2
 144              		.global	DETECTOR_ADC_IRQ_Enable
 145              		.thumb
 146              		.thumb_func
 147              		.type	DETECTOR_ADC_IRQ_Enable, %function
 148              	DETECTOR_ADC_IRQ_Enable:
 149              	.LFB220:
 264:Generated_Source\PSoC6/DETECTOR_ADC.c ****         break;
 265:Generated_Source\PSoC6/DETECTOR_ADC.c ****     }
 266:Generated_Source\PSoC6/DETECTOR_ADC.c **** }
 267:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 268:Generated_Source\PSoC6/DETECTOR_ADC.c **** /* ****************************************************************************
 269:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Function Name: DETECTOR_ADC_IRQ_Enable
 270:Generated_Source\PSoC6/DETECTOR_ADC.c **** ****************************************************************************//*
 271:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 272:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \brief Enables interrupts to occur at the end of a conversion. Global
 273:Generated_Source\PSoC6/DETECTOR_ADC.c **** * interrupts must also be enabled for the DETECTOR_ADC interrupts to occur.
 274:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 275:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \param None
 276:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 277:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \return None
 278:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 279:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \sideeffect None
 280:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 281:Generated_Source\PSoC6/DETECTOR_ADC.c **** *******************************************************************************/
 282:Generated_Source\PSoC6/DETECTOR_ADC.c **** void DETECTOR_ADC_IRQ_Enable(void){
 150              		.loc 1 282 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 283:Generated_Source\PSoC6/DETECTOR_ADC.c ****     /* Interrupt core assignment will be up to the user. */
 284:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #ifdef DETECTOR_ADC_IRQ__INTC_CORTEXM4_ASSIGNED
 285:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #if (CY_CPU_CORTEX_M4)
 286:Generated_Source\PSoC6/DETECTOR_ADC.c ****         NVIC_EnableIRQ(DETECTOR_ADC_IRQ_cfg.intrSrc);
 155              		.loc 1 286 0
 156 0000 074B     		ldr	r3, .L20
 157 0002 B3F90030 		ldrsh	r3, [r3]
 158              	.LVL9:
 159              	.LBB28:
 160              	.LBB29:
 161              		.file 2 ".\\Core\\Include/core_cm4.h"
   1:.\Core\Include/core_cm4.h **** /**************************************************************************//**
   2:.\Core\Include/core_cm4.h ****  * @file     core_cm4.h
   3:.\Core\Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:.\Core\Include/core_cm4.h ****  * @version  V5.1.1
   5:.\Core\Include/core_cm4.h ****  * @date     27. March 2020
   6:.\Core\Include/core_cm4.h ****  ******************************************************************************/
   7:.\Core\Include/core_cm4.h **** /*
   8:.\Core\Include/core_cm4.h ****  * Copyright (c) 2009-2020 Arm Limited. All rights reserved.
   9:.\Core\Include/core_cm4.h ****  *
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 9


  10:.\Core\Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:.\Core\Include/core_cm4.h ****  *
  12:.\Core\Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:.\Core\Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:.\Core\Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:.\Core\Include/core_cm4.h ****  *
  16:.\Core\Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:.\Core\Include/core_cm4.h ****  *
  18:.\Core\Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:.\Core\Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:.\Core\Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:.\Core\Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:.\Core\Include/core_cm4.h ****  * limitations under the License.
  23:.\Core\Include/core_cm4.h ****  */
  24:.\Core\Include/core_cm4.h **** 
  25:.\Core\Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:.\Core\Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:.\Core\Include/core_cm4.h **** #elif defined (__clang__)
  28:.\Core\Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:.\Core\Include/core_cm4.h **** #endif
  30:.\Core\Include/core_cm4.h **** 
  31:.\Core\Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:.\Core\Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:.\Core\Include/core_cm4.h **** 
  34:.\Core\Include/core_cm4.h **** #include <stdint.h>
  35:.\Core\Include/core_cm4.h **** 
  36:.\Core\Include/core_cm4.h **** #ifdef __cplusplus
  37:.\Core\Include/core_cm4.h ****  extern "C" {
  38:.\Core\Include/core_cm4.h **** #endif
  39:.\Core\Include/core_cm4.h **** 
  40:.\Core\Include/core_cm4.h **** /**
  41:.\Core\Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:.\Core\Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:.\Core\Include/core_cm4.h **** 
  44:.\Core\Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:.\Core\Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:.\Core\Include/core_cm4.h **** 
  47:.\Core\Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:.\Core\Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:.\Core\Include/core_cm4.h **** 
  50:.\Core\Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:.\Core\Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:.\Core\Include/core_cm4.h ****  */
  53:.\Core\Include/core_cm4.h **** 
  54:.\Core\Include/core_cm4.h **** 
  55:.\Core\Include/core_cm4.h **** /*******************************************************************************
  56:.\Core\Include/core_cm4.h ****  *                 CMSIS definitions
  57:.\Core\Include/core_cm4.h ****  ******************************************************************************/
  58:.\Core\Include/core_cm4.h **** /**
  59:.\Core\Include/core_cm4.h ****   \ingroup Cortex_M4
  60:.\Core\Include/core_cm4.h ****   @{
  61:.\Core\Include/core_cm4.h ****  */
  62:.\Core\Include/core_cm4.h **** 
  63:.\Core\Include/core_cm4.h **** #include "cmsis_version.h"
  64:.\Core\Include/core_cm4.h **** 
  65:.\Core\Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:.\Core\Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 10


  67:.\Core\Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:.\Core\Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:.\Core\Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:.\Core\Include/core_cm4.h **** 
  71:.\Core\Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:.\Core\Include/core_cm4.h **** 
  73:.\Core\Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:.\Core\Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:.\Core\Include/core_cm4.h **** */
  76:.\Core\Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:.\Core\Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:.\Core\Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:.\Core\Include/core_cm4.h ****       #define __FPU_USED       1U
  80:.\Core\Include/core_cm4.h ****     #else
  81:.\Core\Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:.\Core\Include/core_cm4.h ****       #define __FPU_USED       0U
  83:.\Core\Include/core_cm4.h ****     #endif
  84:.\Core\Include/core_cm4.h ****   #else
  85:.\Core\Include/core_cm4.h ****     #define __FPU_USED         0U
  86:.\Core\Include/core_cm4.h ****   #endif
  87:.\Core\Include/core_cm4.h **** 
  88:.\Core\Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:.\Core\Include/core_cm4.h ****   #if defined __ARM_FP
  90:.\Core\Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:.\Core\Include/core_cm4.h ****       #define __FPU_USED       1U
  92:.\Core\Include/core_cm4.h ****     #else
  93:.\Core\Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:.\Core\Include/core_cm4.h ****       #define __FPU_USED       0U
  95:.\Core\Include/core_cm4.h ****     #endif
  96:.\Core\Include/core_cm4.h ****   #else
  97:.\Core\Include/core_cm4.h ****     #define __FPU_USED         0U
  98:.\Core\Include/core_cm4.h ****   #endif
  99:.\Core\Include/core_cm4.h **** 
 100:.\Core\Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:.\Core\Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:.\Core\Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:.\Core\Include/core_cm4.h ****       #define __FPU_USED       1U
 104:.\Core\Include/core_cm4.h ****     #else
 105:.\Core\Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:.\Core\Include/core_cm4.h ****       #define __FPU_USED       0U
 107:.\Core\Include/core_cm4.h ****     #endif
 108:.\Core\Include/core_cm4.h ****   #else
 109:.\Core\Include/core_cm4.h ****     #define __FPU_USED         0U
 110:.\Core\Include/core_cm4.h ****   #endif
 111:.\Core\Include/core_cm4.h **** 
 112:.\Core\Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:.\Core\Include/core_cm4.h ****   #if defined __ARMVFP__
 114:.\Core\Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:.\Core\Include/core_cm4.h ****       #define __FPU_USED       1U
 116:.\Core\Include/core_cm4.h ****     #else
 117:.\Core\Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:.\Core\Include/core_cm4.h ****       #define __FPU_USED       0U
 119:.\Core\Include/core_cm4.h ****     #endif
 120:.\Core\Include/core_cm4.h ****   #else
 121:.\Core\Include/core_cm4.h ****     #define __FPU_USED         0U
 122:.\Core\Include/core_cm4.h ****   #endif
 123:.\Core\Include/core_cm4.h **** 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 11


 124:.\Core\Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:.\Core\Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:.\Core\Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:.\Core\Include/core_cm4.h ****       #define __FPU_USED       1U
 128:.\Core\Include/core_cm4.h ****     #else
 129:.\Core\Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:.\Core\Include/core_cm4.h ****       #define __FPU_USED       0U
 131:.\Core\Include/core_cm4.h ****     #endif
 132:.\Core\Include/core_cm4.h ****   #else
 133:.\Core\Include/core_cm4.h ****     #define __FPU_USED         0U
 134:.\Core\Include/core_cm4.h ****   #endif
 135:.\Core\Include/core_cm4.h **** 
 136:.\Core\Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:.\Core\Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:.\Core\Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:.\Core\Include/core_cm4.h ****       #define __FPU_USED       1U
 140:.\Core\Include/core_cm4.h ****     #else
 141:.\Core\Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:.\Core\Include/core_cm4.h ****       #define __FPU_USED       0U
 143:.\Core\Include/core_cm4.h ****     #endif
 144:.\Core\Include/core_cm4.h ****   #else
 145:.\Core\Include/core_cm4.h ****     #define __FPU_USED         0U
 146:.\Core\Include/core_cm4.h ****   #endif
 147:.\Core\Include/core_cm4.h **** 
 148:.\Core\Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:.\Core\Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:.\Core\Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:.\Core\Include/core_cm4.h ****       #define __FPU_USED       1U
 152:.\Core\Include/core_cm4.h ****     #else
 153:.\Core\Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:.\Core\Include/core_cm4.h ****       #define __FPU_USED       0U
 155:.\Core\Include/core_cm4.h ****     #endif
 156:.\Core\Include/core_cm4.h ****   #else
 157:.\Core\Include/core_cm4.h ****     #define __FPU_USED         0U
 158:.\Core\Include/core_cm4.h ****   #endif
 159:.\Core\Include/core_cm4.h **** 
 160:.\Core\Include/core_cm4.h **** #endif
 161:.\Core\Include/core_cm4.h **** 
 162:.\Core\Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:.\Core\Include/core_cm4.h **** 
 164:.\Core\Include/core_cm4.h **** 
 165:.\Core\Include/core_cm4.h **** #ifdef __cplusplus
 166:.\Core\Include/core_cm4.h **** }
 167:.\Core\Include/core_cm4.h **** #endif
 168:.\Core\Include/core_cm4.h **** 
 169:.\Core\Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:.\Core\Include/core_cm4.h **** 
 171:.\Core\Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:.\Core\Include/core_cm4.h **** 
 173:.\Core\Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:.\Core\Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:.\Core\Include/core_cm4.h **** 
 176:.\Core\Include/core_cm4.h **** #ifdef __cplusplus
 177:.\Core\Include/core_cm4.h ****  extern "C" {
 178:.\Core\Include/core_cm4.h **** #endif
 179:.\Core\Include/core_cm4.h **** 
 180:.\Core\Include/core_cm4.h **** /* check device defines and use defaults */
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 12


 181:.\Core\Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:.\Core\Include/core_cm4.h ****   #ifndef __CM4_REV
 183:.\Core\Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:.\Core\Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:.\Core\Include/core_cm4.h ****   #endif
 186:.\Core\Include/core_cm4.h **** 
 187:.\Core\Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:.\Core\Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:.\Core\Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:.\Core\Include/core_cm4.h ****   #endif
 191:.\Core\Include/core_cm4.h **** 
 192:.\Core\Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:.\Core\Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:.\Core\Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:.\Core\Include/core_cm4.h ****   #endif
 196:.\Core\Include/core_cm4.h **** 
 197:.\Core\Include/core_cm4.h ****   #ifndef __VTOR_PRESENT
 198:.\Core\Include/core_cm4.h ****     #define __VTOR_PRESENT             1U
 199:.\Core\Include/core_cm4.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 200:.\Core\Include/core_cm4.h ****   #endif
 201:.\Core\Include/core_cm4.h ****   
 202:.\Core\Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 203:.\Core\Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 204:.\Core\Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 205:.\Core\Include/core_cm4.h ****   #endif
 206:.\Core\Include/core_cm4.h **** 
 207:.\Core\Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 208:.\Core\Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 209:.\Core\Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 210:.\Core\Include/core_cm4.h ****   #endif
 211:.\Core\Include/core_cm4.h **** #endif
 212:.\Core\Include/core_cm4.h **** 
 213:.\Core\Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 214:.\Core\Include/core_cm4.h **** /**
 215:.\Core\Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 216:.\Core\Include/core_cm4.h **** 
 217:.\Core\Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 218:.\Core\Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 219:.\Core\Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 220:.\Core\Include/core_cm4.h **** */
 221:.\Core\Include/core_cm4.h **** #ifdef __cplusplus
 222:.\Core\Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 223:.\Core\Include/core_cm4.h **** #else
 224:.\Core\Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 225:.\Core\Include/core_cm4.h **** #endif
 226:.\Core\Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 227:.\Core\Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 228:.\Core\Include/core_cm4.h **** 
 229:.\Core\Include/core_cm4.h **** /* following defines should be used for structure members */
 230:.\Core\Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 231:.\Core\Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 232:.\Core\Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 233:.\Core\Include/core_cm4.h **** 
 234:.\Core\Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 235:.\Core\Include/core_cm4.h **** 
 236:.\Core\Include/core_cm4.h **** 
 237:.\Core\Include/core_cm4.h **** 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 13


 238:.\Core\Include/core_cm4.h **** /*******************************************************************************
 239:.\Core\Include/core_cm4.h ****  *                 Register Abstraction
 240:.\Core\Include/core_cm4.h ****   Core Register contain:
 241:.\Core\Include/core_cm4.h ****   - Core Register
 242:.\Core\Include/core_cm4.h ****   - Core NVIC Register
 243:.\Core\Include/core_cm4.h ****   - Core SCB Register
 244:.\Core\Include/core_cm4.h ****   - Core SysTick Register
 245:.\Core\Include/core_cm4.h ****   - Core Debug Register
 246:.\Core\Include/core_cm4.h ****   - Core MPU Register
 247:.\Core\Include/core_cm4.h ****   - Core FPU Register
 248:.\Core\Include/core_cm4.h ****  ******************************************************************************/
 249:.\Core\Include/core_cm4.h **** /**
 250:.\Core\Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 251:.\Core\Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 252:.\Core\Include/core_cm4.h **** */
 253:.\Core\Include/core_cm4.h **** 
 254:.\Core\Include/core_cm4.h **** /**
 255:.\Core\Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 256:.\Core\Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 257:.\Core\Include/core_cm4.h ****   \brief      Core Register type definitions.
 258:.\Core\Include/core_cm4.h ****   @{
 259:.\Core\Include/core_cm4.h ****  */
 260:.\Core\Include/core_cm4.h **** 
 261:.\Core\Include/core_cm4.h **** /**
 262:.\Core\Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 263:.\Core\Include/core_cm4.h ****  */
 264:.\Core\Include/core_cm4.h **** typedef union
 265:.\Core\Include/core_cm4.h **** {
 266:.\Core\Include/core_cm4.h ****   struct
 267:.\Core\Include/core_cm4.h ****   {
 268:.\Core\Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 269:.\Core\Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 270:.\Core\Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 271:.\Core\Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 272:.\Core\Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 273:.\Core\Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 274:.\Core\Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 275:.\Core\Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 276:.\Core\Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 277:.\Core\Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 278:.\Core\Include/core_cm4.h **** } APSR_Type;
 279:.\Core\Include/core_cm4.h **** 
 280:.\Core\Include/core_cm4.h **** /* APSR Register Definitions */
 281:.\Core\Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 282:.\Core\Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 283:.\Core\Include/core_cm4.h **** 
 284:.\Core\Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 285:.\Core\Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 286:.\Core\Include/core_cm4.h **** 
 287:.\Core\Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 288:.\Core\Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 289:.\Core\Include/core_cm4.h **** 
 290:.\Core\Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 291:.\Core\Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 292:.\Core\Include/core_cm4.h **** 
 293:.\Core\Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 294:.\Core\Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 14


 295:.\Core\Include/core_cm4.h **** 
 296:.\Core\Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 297:.\Core\Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 298:.\Core\Include/core_cm4.h **** 
 299:.\Core\Include/core_cm4.h **** 
 300:.\Core\Include/core_cm4.h **** /**
 301:.\Core\Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 302:.\Core\Include/core_cm4.h ****  */
 303:.\Core\Include/core_cm4.h **** typedef union
 304:.\Core\Include/core_cm4.h **** {
 305:.\Core\Include/core_cm4.h ****   struct
 306:.\Core\Include/core_cm4.h ****   {
 307:.\Core\Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 308:.\Core\Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 309:.\Core\Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 310:.\Core\Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 311:.\Core\Include/core_cm4.h **** } IPSR_Type;
 312:.\Core\Include/core_cm4.h **** 
 313:.\Core\Include/core_cm4.h **** /* IPSR Register Definitions */
 314:.\Core\Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 315:.\Core\Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 316:.\Core\Include/core_cm4.h **** 
 317:.\Core\Include/core_cm4.h **** 
 318:.\Core\Include/core_cm4.h **** /**
 319:.\Core\Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 320:.\Core\Include/core_cm4.h ****  */
 321:.\Core\Include/core_cm4.h **** typedef union
 322:.\Core\Include/core_cm4.h **** {
 323:.\Core\Include/core_cm4.h ****   struct
 324:.\Core\Include/core_cm4.h ****   {
 325:.\Core\Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 326:.\Core\Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 327:.\Core\Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 328:.\Core\Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 329:.\Core\Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 330:.\Core\Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 331:.\Core\Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 332:.\Core\Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 333:.\Core\Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 334:.\Core\Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 335:.\Core\Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 336:.\Core\Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 337:.\Core\Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 338:.\Core\Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 339:.\Core\Include/core_cm4.h **** } xPSR_Type;
 340:.\Core\Include/core_cm4.h **** 
 341:.\Core\Include/core_cm4.h **** /* xPSR Register Definitions */
 342:.\Core\Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 343:.\Core\Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 344:.\Core\Include/core_cm4.h **** 
 345:.\Core\Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 346:.\Core\Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 347:.\Core\Include/core_cm4.h **** 
 348:.\Core\Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 349:.\Core\Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 350:.\Core\Include/core_cm4.h **** 
 351:.\Core\Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 15


 352:.\Core\Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 353:.\Core\Include/core_cm4.h **** 
 354:.\Core\Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 355:.\Core\Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 356:.\Core\Include/core_cm4.h **** 
 357:.\Core\Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 358:.\Core\Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 359:.\Core\Include/core_cm4.h **** 
 360:.\Core\Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 361:.\Core\Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 362:.\Core\Include/core_cm4.h **** 
 363:.\Core\Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 364:.\Core\Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 365:.\Core\Include/core_cm4.h **** 
 366:.\Core\Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 367:.\Core\Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 368:.\Core\Include/core_cm4.h **** 
 369:.\Core\Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 370:.\Core\Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 371:.\Core\Include/core_cm4.h **** 
 372:.\Core\Include/core_cm4.h **** 
 373:.\Core\Include/core_cm4.h **** /**
 374:.\Core\Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 375:.\Core\Include/core_cm4.h ****  */
 376:.\Core\Include/core_cm4.h **** typedef union
 377:.\Core\Include/core_cm4.h **** {
 378:.\Core\Include/core_cm4.h ****   struct
 379:.\Core\Include/core_cm4.h ****   {
 380:.\Core\Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 381:.\Core\Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 382:.\Core\Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 383:.\Core\Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 384:.\Core\Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 385:.\Core\Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 386:.\Core\Include/core_cm4.h **** } CONTROL_Type;
 387:.\Core\Include/core_cm4.h **** 
 388:.\Core\Include/core_cm4.h **** /* CONTROL Register Definitions */
 389:.\Core\Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 390:.\Core\Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 391:.\Core\Include/core_cm4.h **** 
 392:.\Core\Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 393:.\Core\Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 394:.\Core\Include/core_cm4.h **** 
 395:.\Core\Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 396:.\Core\Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 397:.\Core\Include/core_cm4.h **** 
 398:.\Core\Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 399:.\Core\Include/core_cm4.h **** 
 400:.\Core\Include/core_cm4.h **** 
 401:.\Core\Include/core_cm4.h **** /**
 402:.\Core\Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 403:.\Core\Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 404:.\Core\Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 405:.\Core\Include/core_cm4.h ****   @{
 406:.\Core\Include/core_cm4.h ****  */
 407:.\Core\Include/core_cm4.h **** 
 408:.\Core\Include/core_cm4.h **** /**
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 16


 409:.\Core\Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 410:.\Core\Include/core_cm4.h ****  */
 411:.\Core\Include/core_cm4.h **** typedef struct
 412:.\Core\Include/core_cm4.h **** {
 413:.\Core\Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 414:.\Core\Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 415:.\Core\Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 416:.\Core\Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 417:.\Core\Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 418:.\Core\Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 419:.\Core\Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 420:.\Core\Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 421:.\Core\Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 422:.\Core\Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 423:.\Core\Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 424:.\Core\Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 425:.\Core\Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 426:.\Core\Include/core_cm4.h **** }  NVIC_Type;
 427:.\Core\Include/core_cm4.h **** 
 428:.\Core\Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 429:.\Core\Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 430:.\Core\Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 431:.\Core\Include/core_cm4.h **** 
 432:.\Core\Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 433:.\Core\Include/core_cm4.h **** 
 434:.\Core\Include/core_cm4.h **** 
 435:.\Core\Include/core_cm4.h **** /**
 436:.\Core\Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 437:.\Core\Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 438:.\Core\Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 439:.\Core\Include/core_cm4.h ****   @{
 440:.\Core\Include/core_cm4.h ****  */
 441:.\Core\Include/core_cm4.h **** 
 442:.\Core\Include/core_cm4.h **** /**
 443:.\Core\Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 444:.\Core\Include/core_cm4.h ****  */
 445:.\Core\Include/core_cm4.h **** typedef struct
 446:.\Core\Include/core_cm4.h **** {
 447:.\Core\Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 448:.\Core\Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 449:.\Core\Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 450:.\Core\Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 451:.\Core\Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 452:.\Core\Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 453:.\Core\Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 454:.\Core\Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 455:.\Core\Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 456:.\Core\Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 457:.\Core\Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 458:.\Core\Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 459:.\Core\Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 460:.\Core\Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 461:.\Core\Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 462:.\Core\Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 463:.\Core\Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 464:.\Core\Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 465:.\Core\Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 17


 466:.\Core\Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 467:.\Core\Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 468:.\Core\Include/core_cm4.h **** } SCB_Type;
 469:.\Core\Include/core_cm4.h **** 
 470:.\Core\Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 471:.\Core\Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 472:.\Core\Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 473:.\Core\Include/core_cm4.h **** 
 474:.\Core\Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 475:.\Core\Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 476:.\Core\Include/core_cm4.h **** 
 477:.\Core\Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 478:.\Core\Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 479:.\Core\Include/core_cm4.h **** 
 480:.\Core\Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 481:.\Core\Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 482:.\Core\Include/core_cm4.h **** 
 483:.\Core\Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 484:.\Core\Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 485:.\Core\Include/core_cm4.h **** 
 486:.\Core\Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 487:.\Core\Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 488:.\Core\Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 489:.\Core\Include/core_cm4.h **** 
 490:.\Core\Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 491:.\Core\Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 492:.\Core\Include/core_cm4.h **** 
 493:.\Core\Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 494:.\Core\Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 495:.\Core\Include/core_cm4.h **** 
 496:.\Core\Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 497:.\Core\Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 498:.\Core\Include/core_cm4.h **** 
 499:.\Core\Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 500:.\Core\Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 501:.\Core\Include/core_cm4.h **** 
 502:.\Core\Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 503:.\Core\Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 504:.\Core\Include/core_cm4.h **** 
 505:.\Core\Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 506:.\Core\Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 507:.\Core\Include/core_cm4.h **** 
 508:.\Core\Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 509:.\Core\Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 510:.\Core\Include/core_cm4.h **** 
 511:.\Core\Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 512:.\Core\Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 513:.\Core\Include/core_cm4.h **** 
 514:.\Core\Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 515:.\Core\Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 516:.\Core\Include/core_cm4.h **** 
 517:.\Core\Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 518:.\Core\Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 519:.\Core\Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 520:.\Core\Include/core_cm4.h **** 
 521:.\Core\Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 522:.\Core\Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 18


 523:.\Core\Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 524:.\Core\Include/core_cm4.h **** 
 525:.\Core\Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 526:.\Core\Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 527:.\Core\Include/core_cm4.h **** 
 528:.\Core\Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 529:.\Core\Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 530:.\Core\Include/core_cm4.h **** 
 531:.\Core\Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 532:.\Core\Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 533:.\Core\Include/core_cm4.h **** 
 534:.\Core\Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 535:.\Core\Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 536:.\Core\Include/core_cm4.h **** 
 537:.\Core\Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 538:.\Core\Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 539:.\Core\Include/core_cm4.h **** 
 540:.\Core\Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 541:.\Core\Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 542:.\Core\Include/core_cm4.h **** 
 543:.\Core\Include/core_cm4.h **** /* SCB System Control Register Definitions */
 544:.\Core\Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 545:.\Core\Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 546:.\Core\Include/core_cm4.h **** 
 547:.\Core\Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 548:.\Core\Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 549:.\Core\Include/core_cm4.h **** 
 550:.\Core\Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 551:.\Core\Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 552:.\Core\Include/core_cm4.h **** 
 553:.\Core\Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 554:.\Core\Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 555:.\Core\Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 556:.\Core\Include/core_cm4.h **** 
 557:.\Core\Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 558:.\Core\Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 559:.\Core\Include/core_cm4.h **** 
 560:.\Core\Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 561:.\Core\Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 562:.\Core\Include/core_cm4.h **** 
 563:.\Core\Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 564:.\Core\Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 565:.\Core\Include/core_cm4.h **** 
 566:.\Core\Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 567:.\Core\Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 568:.\Core\Include/core_cm4.h **** 
 569:.\Core\Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 570:.\Core\Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 571:.\Core\Include/core_cm4.h **** 
 572:.\Core\Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 573:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 574:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 575:.\Core\Include/core_cm4.h **** 
 576:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 577:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 578:.\Core\Include/core_cm4.h **** 
 579:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 19


 580:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 581:.\Core\Include/core_cm4.h **** 
 582:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 583:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 584:.\Core\Include/core_cm4.h **** 
 585:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 586:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 587:.\Core\Include/core_cm4.h **** 
 588:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 589:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 590:.\Core\Include/core_cm4.h **** 
 591:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 592:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 593:.\Core\Include/core_cm4.h **** 
 594:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 595:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 596:.\Core\Include/core_cm4.h **** 
 597:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 598:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 599:.\Core\Include/core_cm4.h **** 
 600:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 601:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 602:.\Core\Include/core_cm4.h **** 
 603:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 604:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 605:.\Core\Include/core_cm4.h **** 
 606:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 607:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 608:.\Core\Include/core_cm4.h **** 
 609:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 610:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 611:.\Core\Include/core_cm4.h **** 
 612:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 613:.\Core\Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 614:.\Core\Include/core_cm4.h **** 
 615:.\Core\Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 616:.\Core\Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 617:.\Core\Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 618:.\Core\Include/core_cm4.h **** 
 619:.\Core\Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 620:.\Core\Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 621:.\Core\Include/core_cm4.h **** 
 622:.\Core\Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 623:.\Core\Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 624:.\Core\Include/core_cm4.h **** 
 625:.\Core\Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 626:.\Core\Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 627:.\Core\Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 628:.\Core\Include/core_cm4.h **** 
 629:.\Core\Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 630:.\Core\Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 631:.\Core\Include/core_cm4.h **** 
 632:.\Core\Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 633:.\Core\Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 634:.\Core\Include/core_cm4.h **** 
 635:.\Core\Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 636:.\Core\Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 20


 637:.\Core\Include/core_cm4.h **** 
 638:.\Core\Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 639:.\Core\Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 640:.\Core\Include/core_cm4.h **** 
 641:.\Core\Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 642:.\Core\Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 643:.\Core\Include/core_cm4.h **** 
 644:.\Core\Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 645:.\Core\Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 646:.\Core\Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 647:.\Core\Include/core_cm4.h **** 
 648:.\Core\Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 649:.\Core\Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 650:.\Core\Include/core_cm4.h **** 
 651:.\Core\Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 652:.\Core\Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 653:.\Core\Include/core_cm4.h **** 
 654:.\Core\Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 655:.\Core\Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 656:.\Core\Include/core_cm4.h **** 
 657:.\Core\Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 658:.\Core\Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 659:.\Core\Include/core_cm4.h **** 
 660:.\Core\Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 661:.\Core\Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 662:.\Core\Include/core_cm4.h **** 
 663:.\Core\Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 664:.\Core\Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 665:.\Core\Include/core_cm4.h **** 
 666:.\Core\Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 667:.\Core\Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 668:.\Core\Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 669:.\Core\Include/core_cm4.h **** 
 670:.\Core\Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 671:.\Core\Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 672:.\Core\Include/core_cm4.h **** 
 673:.\Core\Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 674:.\Core\Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 675:.\Core\Include/core_cm4.h **** 
 676:.\Core\Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 677:.\Core\Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 678:.\Core\Include/core_cm4.h **** 
 679:.\Core\Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 680:.\Core\Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 681:.\Core\Include/core_cm4.h **** 
 682:.\Core\Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 683:.\Core\Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 684:.\Core\Include/core_cm4.h **** 
 685:.\Core\Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 686:.\Core\Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 687:.\Core\Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 688:.\Core\Include/core_cm4.h **** 
 689:.\Core\Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 690:.\Core\Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 691:.\Core\Include/core_cm4.h **** 
 692:.\Core\Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 693:.\Core\Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 21


 694:.\Core\Include/core_cm4.h **** 
 695:.\Core\Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 696:.\Core\Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 697:.\Core\Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 698:.\Core\Include/core_cm4.h **** 
 699:.\Core\Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 700:.\Core\Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 701:.\Core\Include/core_cm4.h **** 
 702:.\Core\Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 703:.\Core\Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 704:.\Core\Include/core_cm4.h **** 
 705:.\Core\Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 706:.\Core\Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 707:.\Core\Include/core_cm4.h **** 
 708:.\Core\Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 709:.\Core\Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 710:.\Core\Include/core_cm4.h **** 
 711:.\Core\Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 712:.\Core\Include/core_cm4.h **** 
 713:.\Core\Include/core_cm4.h **** 
 714:.\Core\Include/core_cm4.h **** /**
 715:.\Core\Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 716:.\Core\Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 717:.\Core\Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 718:.\Core\Include/core_cm4.h ****   @{
 719:.\Core\Include/core_cm4.h ****  */
 720:.\Core\Include/core_cm4.h **** 
 721:.\Core\Include/core_cm4.h **** /**
 722:.\Core\Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 723:.\Core\Include/core_cm4.h ****  */
 724:.\Core\Include/core_cm4.h **** typedef struct
 725:.\Core\Include/core_cm4.h **** {
 726:.\Core\Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 727:.\Core\Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 728:.\Core\Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 729:.\Core\Include/core_cm4.h **** } SCnSCB_Type;
 730:.\Core\Include/core_cm4.h **** 
 731:.\Core\Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 732:.\Core\Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 733:.\Core\Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 734:.\Core\Include/core_cm4.h **** 
 735:.\Core\Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 736:.\Core\Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 737:.\Core\Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 738:.\Core\Include/core_cm4.h **** 
 739:.\Core\Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 740:.\Core\Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 741:.\Core\Include/core_cm4.h **** 
 742:.\Core\Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 743:.\Core\Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 744:.\Core\Include/core_cm4.h **** 
 745:.\Core\Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 746:.\Core\Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 747:.\Core\Include/core_cm4.h **** 
 748:.\Core\Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 749:.\Core\Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 750:.\Core\Include/core_cm4.h **** 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 22


 751:.\Core\Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 752:.\Core\Include/core_cm4.h **** 
 753:.\Core\Include/core_cm4.h **** 
 754:.\Core\Include/core_cm4.h **** /**
 755:.\Core\Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 756:.\Core\Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 757:.\Core\Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 758:.\Core\Include/core_cm4.h ****   @{
 759:.\Core\Include/core_cm4.h ****  */
 760:.\Core\Include/core_cm4.h **** 
 761:.\Core\Include/core_cm4.h **** /**
 762:.\Core\Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 763:.\Core\Include/core_cm4.h ****  */
 764:.\Core\Include/core_cm4.h **** typedef struct
 765:.\Core\Include/core_cm4.h **** {
 766:.\Core\Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 767:.\Core\Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 768:.\Core\Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 769:.\Core\Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 770:.\Core\Include/core_cm4.h **** } SysTick_Type;
 771:.\Core\Include/core_cm4.h **** 
 772:.\Core\Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 773:.\Core\Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 774:.\Core\Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 775:.\Core\Include/core_cm4.h **** 
 776:.\Core\Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 777:.\Core\Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 778:.\Core\Include/core_cm4.h **** 
 779:.\Core\Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 780:.\Core\Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 781:.\Core\Include/core_cm4.h **** 
 782:.\Core\Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 783:.\Core\Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 784:.\Core\Include/core_cm4.h **** 
 785:.\Core\Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 786:.\Core\Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 787:.\Core\Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 788:.\Core\Include/core_cm4.h **** 
 789:.\Core\Include/core_cm4.h **** /* SysTick Current Register Definitions */
 790:.\Core\Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 791:.\Core\Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 792:.\Core\Include/core_cm4.h **** 
 793:.\Core\Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 794:.\Core\Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 795:.\Core\Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 796:.\Core\Include/core_cm4.h **** 
 797:.\Core\Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 798:.\Core\Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 799:.\Core\Include/core_cm4.h **** 
 800:.\Core\Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 801:.\Core\Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 802:.\Core\Include/core_cm4.h **** 
 803:.\Core\Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 804:.\Core\Include/core_cm4.h **** 
 805:.\Core\Include/core_cm4.h **** 
 806:.\Core\Include/core_cm4.h **** /**
 807:.\Core\Include/core_cm4.h ****   \ingroup  CMSIS_core_register
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 23


 808:.\Core\Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 809:.\Core\Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 810:.\Core\Include/core_cm4.h ****   @{
 811:.\Core\Include/core_cm4.h ****  */
 812:.\Core\Include/core_cm4.h **** 
 813:.\Core\Include/core_cm4.h **** /**
 814:.\Core\Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 815:.\Core\Include/core_cm4.h ****  */
 816:.\Core\Include/core_cm4.h **** typedef struct
 817:.\Core\Include/core_cm4.h **** {
 818:.\Core\Include/core_cm4.h ****   __OM  union
 819:.\Core\Include/core_cm4.h ****   {
 820:.\Core\Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 821:.\Core\Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 822:.\Core\Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 823:.\Core\Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 824:.\Core\Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 825:.\Core\Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 826:.\Core\Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 827:.\Core\Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 828:.\Core\Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 829:.\Core\Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 830:.\Core\Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 831:.\Core\Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 832:.\Core\Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 833:.\Core\Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 834:.\Core\Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 835:.\Core\Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 836:.\Core\Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 837:.\Core\Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 838:.\Core\Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 839:.\Core\Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 840:.\Core\Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 841:.\Core\Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 842:.\Core\Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 843:.\Core\Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 844:.\Core\Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 845:.\Core\Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 846:.\Core\Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 847:.\Core\Include/core_cm4.h **** } ITM_Type;
 848:.\Core\Include/core_cm4.h **** 
 849:.\Core\Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 850:.\Core\Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 851:.\Core\Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 852:.\Core\Include/core_cm4.h **** 
 853:.\Core\Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 854:.\Core\Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 855:.\Core\Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 856:.\Core\Include/core_cm4.h **** 
 857:.\Core\Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 858:.\Core\Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 859:.\Core\Include/core_cm4.h **** 
 860:.\Core\Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 861:.\Core\Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 862:.\Core\Include/core_cm4.h **** 
 863:.\Core\Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 864:.\Core\Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 24


 865:.\Core\Include/core_cm4.h **** 
 866:.\Core\Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 867:.\Core\Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 868:.\Core\Include/core_cm4.h **** 
 869:.\Core\Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 870:.\Core\Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 871:.\Core\Include/core_cm4.h **** 
 872:.\Core\Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 873:.\Core\Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 874:.\Core\Include/core_cm4.h **** 
 875:.\Core\Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 876:.\Core\Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 877:.\Core\Include/core_cm4.h **** 
 878:.\Core\Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 879:.\Core\Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 880:.\Core\Include/core_cm4.h **** 
 881:.\Core\Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 882:.\Core\Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 883:.\Core\Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 884:.\Core\Include/core_cm4.h **** 
 885:.\Core\Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 886:.\Core\Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 887:.\Core\Include/core_cm4.h **** 
 888:.\Core\Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 889:.\Core\Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 890:.\Core\Include/core_cm4.h **** 
 891:.\Core\Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 892:.\Core\Include/core_cm4.h **** 
 893:.\Core\Include/core_cm4.h **** 
 894:.\Core\Include/core_cm4.h **** /**
 895:.\Core\Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 896:.\Core\Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 897:.\Core\Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 898:.\Core\Include/core_cm4.h ****   @{
 899:.\Core\Include/core_cm4.h ****  */
 900:.\Core\Include/core_cm4.h **** 
 901:.\Core\Include/core_cm4.h **** /**
 902:.\Core\Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 903:.\Core\Include/core_cm4.h ****  */
 904:.\Core\Include/core_cm4.h **** typedef struct
 905:.\Core\Include/core_cm4.h **** {
 906:.\Core\Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 907:.\Core\Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 908:.\Core\Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 909:.\Core\Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 910:.\Core\Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 911:.\Core\Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 912:.\Core\Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 913:.\Core\Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 914:.\Core\Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 915:.\Core\Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 916:.\Core\Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 917:.\Core\Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 918:.\Core\Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 919:.\Core\Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 920:.\Core\Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 921:.\Core\Include/core_cm4.h ****         uint32_t RESERVED1[1U];
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 25


 922:.\Core\Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 923:.\Core\Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 924:.\Core\Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 925:.\Core\Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 926:.\Core\Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 927:.\Core\Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 928:.\Core\Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 929:.\Core\Include/core_cm4.h **** } DWT_Type;
 930:.\Core\Include/core_cm4.h **** 
 931:.\Core\Include/core_cm4.h **** /* DWT Control Register Definitions */
 932:.\Core\Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 933:.\Core\Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 934:.\Core\Include/core_cm4.h **** 
 935:.\Core\Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 936:.\Core\Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 937:.\Core\Include/core_cm4.h **** 
 938:.\Core\Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 939:.\Core\Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 940:.\Core\Include/core_cm4.h **** 
 941:.\Core\Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 942:.\Core\Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 943:.\Core\Include/core_cm4.h **** 
 944:.\Core\Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 945:.\Core\Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 946:.\Core\Include/core_cm4.h **** 
 947:.\Core\Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 948:.\Core\Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 949:.\Core\Include/core_cm4.h **** 
 950:.\Core\Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 951:.\Core\Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 952:.\Core\Include/core_cm4.h **** 
 953:.\Core\Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 954:.\Core\Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 955:.\Core\Include/core_cm4.h **** 
 956:.\Core\Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 957:.\Core\Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 958:.\Core\Include/core_cm4.h **** 
 959:.\Core\Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 960:.\Core\Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 961:.\Core\Include/core_cm4.h **** 
 962:.\Core\Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 963:.\Core\Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 964:.\Core\Include/core_cm4.h **** 
 965:.\Core\Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 966:.\Core\Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 967:.\Core\Include/core_cm4.h **** 
 968:.\Core\Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 969:.\Core\Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 970:.\Core\Include/core_cm4.h **** 
 971:.\Core\Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 972:.\Core\Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 973:.\Core\Include/core_cm4.h **** 
 974:.\Core\Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 975:.\Core\Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 976:.\Core\Include/core_cm4.h **** 
 977:.\Core\Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 978:.\Core\Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 26


 979:.\Core\Include/core_cm4.h **** 
 980:.\Core\Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 981:.\Core\Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 982:.\Core\Include/core_cm4.h **** 
 983:.\Core\Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 984:.\Core\Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 985:.\Core\Include/core_cm4.h **** 
 986:.\Core\Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 987:.\Core\Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 988:.\Core\Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 989:.\Core\Include/core_cm4.h **** 
 990:.\Core\Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 991:.\Core\Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 992:.\Core\Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 993:.\Core\Include/core_cm4.h **** 
 994:.\Core\Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 995:.\Core\Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 996:.\Core\Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 997:.\Core\Include/core_cm4.h **** 
 998:.\Core\Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 999:.\Core\Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1000:.\Core\Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1001:.\Core\Include/core_cm4.h **** 
1002:.\Core\Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1003:.\Core\Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1004:.\Core\Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1005:.\Core\Include/core_cm4.h **** 
1006:.\Core\Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1007:.\Core\Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1008:.\Core\Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1009:.\Core\Include/core_cm4.h **** 
1010:.\Core\Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1011:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1012:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1013:.\Core\Include/core_cm4.h **** 
1014:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1015:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1016:.\Core\Include/core_cm4.h **** 
1017:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1018:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1019:.\Core\Include/core_cm4.h **** 
1020:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1021:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1022:.\Core\Include/core_cm4.h **** 
1023:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1024:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1025:.\Core\Include/core_cm4.h **** 
1026:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1027:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1028:.\Core\Include/core_cm4.h **** 
1029:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1030:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1031:.\Core\Include/core_cm4.h **** 
1032:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1033:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1034:.\Core\Include/core_cm4.h **** 
1035:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 27


1036:.\Core\Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1037:.\Core\Include/core_cm4.h **** 
1038:.\Core\Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1039:.\Core\Include/core_cm4.h **** 
1040:.\Core\Include/core_cm4.h **** 
1041:.\Core\Include/core_cm4.h **** /**
1042:.\Core\Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1043:.\Core\Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1044:.\Core\Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1045:.\Core\Include/core_cm4.h ****   @{
1046:.\Core\Include/core_cm4.h ****  */
1047:.\Core\Include/core_cm4.h **** 
1048:.\Core\Include/core_cm4.h **** /**
1049:.\Core\Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1050:.\Core\Include/core_cm4.h ****  */
1051:.\Core\Include/core_cm4.h **** typedef struct
1052:.\Core\Include/core_cm4.h **** {
1053:.\Core\Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1054:.\Core\Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1055:.\Core\Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1056:.\Core\Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1057:.\Core\Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1058:.\Core\Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1059:.\Core\Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1060:.\Core\Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1061:.\Core\Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1062:.\Core\Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1063:.\Core\Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1064:.\Core\Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1065:.\Core\Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1066:.\Core\Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1067:.\Core\Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1068:.\Core\Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1069:.\Core\Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1070:.\Core\Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1071:.\Core\Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1072:.\Core\Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1073:.\Core\Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1074:.\Core\Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1075:.\Core\Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1076:.\Core\Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1077:.\Core\Include/core_cm4.h **** } TPI_Type;
1078:.\Core\Include/core_cm4.h **** 
1079:.\Core\Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1080:.\Core\Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1081:.\Core\Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1082:.\Core\Include/core_cm4.h **** 
1083:.\Core\Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1084:.\Core\Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1085:.\Core\Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1086:.\Core\Include/core_cm4.h **** 
1087:.\Core\Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1088:.\Core\Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1089:.\Core\Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1090:.\Core\Include/core_cm4.h **** 
1091:.\Core\Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1092:.\Core\Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 28


1093:.\Core\Include/core_cm4.h **** 
1094:.\Core\Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1095:.\Core\Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1096:.\Core\Include/core_cm4.h **** 
1097:.\Core\Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1098:.\Core\Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1099:.\Core\Include/core_cm4.h **** 
1100:.\Core\Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1101:.\Core\Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1102:.\Core\Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1103:.\Core\Include/core_cm4.h **** 
1104:.\Core\Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1105:.\Core\Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1106:.\Core\Include/core_cm4.h **** 
1107:.\Core\Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1108:.\Core\Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1109:.\Core\Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1110:.\Core\Include/core_cm4.h **** 
1111:.\Core\Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1112:.\Core\Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1113:.\Core\Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1114:.\Core\Include/core_cm4.h **** 
1115:.\Core\Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1116:.\Core\Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1117:.\Core\Include/core_cm4.h **** 
1118:.\Core\Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1119:.\Core\Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1120:.\Core\Include/core_cm4.h **** 
1121:.\Core\Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1122:.\Core\Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1123:.\Core\Include/core_cm4.h **** 
1124:.\Core\Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1125:.\Core\Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1126:.\Core\Include/core_cm4.h **** 
1127:.\Core\Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1128:.\Core\Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1129:.\Core\Include/core_cm4.h **** 
1130:.\Core\Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1131:.\Core\Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1132:.\Core\Include/core_cm4.h **** 
1133:.\Core\Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1134:.\Core\Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1135:.\Core\Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1136:.\Core\Include/core_cm4.h **** 
1137:.\Core\Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1138:.\Core\Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1139:.\Core\Include/core_cm4.h **** 
1140:.\Core\Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1141:.\Core\Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1142:.\Core\Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1143:.\Core\Include/core_cm4.h **** 
1144:.\Core\Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1145:.\Core\Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1146:.\Core\Include/core_cm4.h **** 
1147:.\Core\Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1148:.\Core\Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1149:.\Core\Include/core_cm4.h **** 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 29


1150:.\Core\Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1151:.\Core\Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1152:.\Core\Include/core_cm4.h **** 
1153:.\Core\Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1154:.\Core\Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1155:.\Core\Include/core_cm4.h **** 
1156:.\Core\Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1157:.\Core\Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1158:.\Core\Include/core_cm4.h **** 
1159:.\Core\Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1160:.\Core\Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1161:.\Core\Include/core_cm4.h **** 
1162:.\Core\Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1163:.\Core\Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1164:.\Core\Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1165:.\Core\Include/core_cm4.h **** 
1166:.\Core\Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1167:.\Core\Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1168:.\Core\Include/core_cm4.h **** 
1169:.\Core\Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1170:.\Core\Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1171:.\Core\Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1172:.\Core\Include/core_cm4.h **** 
1173:.\Core\Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1174:.\Core\Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1175:.\Core\Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1176:.\Core\Include/core_cm4.h **** 
1177:.\Core\Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1178:.\Core\Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1179:.\Core\Include/core_cm4.h **** 
1180:.\Core\Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1181:.\Core\Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1182:.\Core\Include/core_cm4.h **** 
1183:.\Core\Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1184:.\Core\Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1185:.\Core\Include/core_cm4.h **** 
1186:.\Core\Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1187:.\Core\Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1188:.\Core\Include/core_cm4.h **** 
1189:.\Core\Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1190:.\Core\Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1191:.\Core\Include/core_cm4.h **** 
1192:.\Core\Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1193:.\Core\Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1194:.\Core\Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1195:.\Core\Include/core_cm4.h **** 
1196:.\Core\Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1197:.\Core\Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1198:.\Core\Include/core_cm4.h **** 
1199:.\Core\Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1200:.\Core\Include/core_cm4.h **** 
1201:.\Core\Include/core_cm4.h **** 
1202:.\Core\Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1203:.\Core\Include/core_cm4.h **** /**
1204:.\Core\Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1205:.\Core\Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1206:.\Core\Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 30


1207:.\Core\Include/core_cm4.h ****   @{
1208:.\Core\Include/core_cm4.h ****  */
1209:.\Core\Include/core_cm4.h **** 
1210:.\Core\Include/core_cm4.h **** /**
1211:.\Core\Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1212:.\Core\Include/core_cm4.h ****  */
1213:.\Core\Include/core_cm4.h **** typedef struct
1214:.\Core\Include/core_cm4.h **** {
1215:.\Core\Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1216:.\Core\Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1217:.\Core\Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1218:.\Core\Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1219:.\Core\Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1220:.\Core\Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1221:.\Core\Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1222:.\Core\Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1223:.\Core\Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1224:.\Core\Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1225:.\Core\Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1226:.\Core\Include/core_cm4.h **** } MPU_Type;
1227:.\Core\Include/core_cm4.h **** 
1228:.\Core\Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1229:.\Core\Include/core_cm4.h **** 
1230:.\Core\Include/core_cm4.h **** /* MPU Type Register Definitions */
1231:.\Core\Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1232:.\Core\Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1233:.\Core\Include/core_cm4.h **** 
1234:.\Core\Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1235:.\Core\Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1236:.\Core\Include/core_cm4.h **** 
1237:.\Core\Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1238:.\Core\Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1239:.\Core\Include/core_cm4.h **** 
1240:.\Core\Include/core_cm4.h **** /* MPU Control Register Definitions */
1241:.\Core\Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1242:.\Core\Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1243:.\Core\Include/core_cm4.h **** 
1244:.\Core\Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1245:.\Core\Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1246:.\Core\Include/core_cm4.h **** 
1247:.\Core\Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1248:.\Core\Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1249:.\Core\Include/core_cm4.h **** 
1250:.\Core\Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1251:.\Core\Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1252:.\Core\Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1253:.\Core\Include/core_cm4.h **** 
1254:.\Core\Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1255:.\Core\Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1256:.\Core\Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1257:.\Core\Include/core_cm4.h **** 
1258:.\Core\Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1259:.\Core\Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1260:.\Core\Include/core_cm4.h **** 
1261:.\Core\Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1262:.\Core\Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1263:.\Core\Include/core_cm4.h **** 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 31


1264:.\Core\Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1265:.\Core\Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1266:.\Core\Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1267:.\Core\Include/core_cm4.h **** 
1268:.\Core\Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1269:.\Core\Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1270:.\Core\Include/core_cm4.h **** 
1271:.\Core\Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1272:.\Core\Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1273:.\Core\Include/core_cm4.h **** 
1274:.\Core\Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1275:.\Core\Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1276:.\Core\Include/core_cm4.h **** 
1277:.\Core\Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1278:.\Core\Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1279:.\Core\Include/core_cm4.h **** 
1280:.\Core\Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1281:.\Core\Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1282:.\Core\Include/core_cm4.h **** 
1283:.\Core\Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1284:.\Core\Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1285:.\Core\Include/core_cm4.h **** 
1286:.\Core\Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1287:.\Core\Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1288:.\Core\Include/core_cm4.h **** 
1289:.\Core\Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1290:.\Core\Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1291:.\Core\Include/core_cm4.h **** 
1292:.\Core\Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1293:.\Core\Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1294:.\Core\Include/core_cm4.h **** 
1295:.\Core\Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1296:.\Core\Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1297:.\Core\Include/core_cm4.h **** 
1298:.\Core\Include/core_cm4.h **** 
1299:.\Core\Include/core_cm4.h **** /**
1300:.\Core\Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1301:.\Core\Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1302:.\Core\Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1303:.\Core\Include/core_cm4.h ****   @{
1304:.\Core\Include/core_cm4.h ****  */
1305:.\Core\Include/core_cm4.h **** 
1306:.\Core\Include/core_cm4.h **** /**
1307:.\Core\Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1308:.\Core\Include/core_cm4.h ****  */
1309:.\Core\Include/core_cm4.h **** typedef struct
1310:.\Core\Include/core_cm4.h **** {
1311:.\Core\Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1312:.\Core\Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1313:.\Core\Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1314:.\Core\Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1315:.\Core\Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1316:.\Core\Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1317:.\Core\Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1318:.\Core\Include/core_cm4.h **** } FPU_Type;
1319:.\Core\Include/core_cm4.h **** 
1320:.\Core\Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 32


1321:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1322:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1323:.\Core\Include/core_cm4.h **** 
1324:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1325:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1326:.\Core\Include/core_cm4.h **** 
1327:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1328:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1329:.\Core\Include/core_cm4.h **** 
1330:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1331:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1332:.\Core\Include/core_cm4.h **** 
1333:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1334:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1335:.\Core\Include/core_cm4.h **** 
1336:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1337:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1338:.\Core\Include/core_cm4.h **** 
1339:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1340:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1341:.\Core\Include/core_cm4.h **** 
1342:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1343:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1344:.\Core\Include/core_cm4.h **** 
1345:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1346:.\Core\Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1347:.\Core\Include/core_cm4.h **** 
1348:.\Core\Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1349:.\Core\Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1350:.\Core\Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1351:.\Core\Include/core_cm4.h **** 
1352:.\Core\Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1353:.\Core\Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1354:.\Core\Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1355:.\Core\Include/core_cm4.h **** 
1356:.\Core\Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1357:.\Core\Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1358:.\Core\Include/core_cm4.h **** 
1359:.\Core\Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1360:.\Core\Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1361:.\Core\Include/core_cm4.h **** 
1362:.\Core\Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1363:.\Core\Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1364:.\Core\Include/core_cm4.h **** 
1365:.\Core\Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1366:.\Core\Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1367:.\Core\Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1368:.\Core\Include/core_cm4.h **** 
1369:.\Core\Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1370:.\Core\Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1371:.\Core\Include/core_cm4.h **** 
1372:.\Core\Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1373:.\Core\Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1374:.\Core\Include/core_cm4.h **** 
1375:.\Core\Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1376:.\Core\Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1377:.\Core\Include/core_cm4.h **** 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 33


1378:.\Core\Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1379:.\Core\Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1380:.\Core\Include/core_cm4.h **** 
1381:.\Core\Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1382:.\Core\Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1383:.\Core\Include/core_cm4.h **** 
1384:.\Core\Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1385:.\Core\Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1386:.\Core\Include/core_cm4.h **** 
1387:.\Core\Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1388:.\Core\Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1389:.\Core\Include/core_cm4.h **** 
1390:.\Core\Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1391:.\Core\Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1392:.\Core\Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1393:.\Core\Include/core_cm4.h **** 
1394:.\Core\Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1395:.\Core\Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1396:.\Core\Include/core_cm4.h **** 
1397:.\Core\Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1398:.\Core\Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1399:.\Core\Include/core_cm4.h **** 
1400:.\Core\Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1401:.\Core\Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1402:.\Core\Include/core_cm4.h **** 
1403:.\Core\Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1404:.\Core\Include/core_cm4.h **** 
1405:.\Core\Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1406:.\Core\Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1407:.\Core\Include/core_cm4.h **** 
1408:.\Core\Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1409:.\Core\Include/core_cm4.h **** 
1410:.\Core\Include/core_cm4.h **** 
1411:.\Core\Include/core_cm4.h **** /**
1412:.\Core\Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1413:.\Core\Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1414:.\Core\Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1415:.\Core\Include/core_cm4.h ****   @{
1416:.\Core\Include/core_cm4.h ****  */
1417:.\Core\Include/core_cm4.h **** 
1418:.\Core\Include/core_cm4.h **** /**
1419:.\Core\Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1420:.\Core\Include/core_cm4.h ****  */
1421:.\Core\Include/core_cm4.h **** typedef struct
1422:.\Core\Include/core_cm4.h **** {
1423:.\Core\Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1424:.\Core\Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1425:.\Core\Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1426:.\Core\Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1427:.\Core\Include/core_cm4.h **** } CoreDebug_Type;
1428:.\Core\Include/core_cm4.h **** 
1429:.\Core\Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1430:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1431:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1432:.\Core\Include/core_cm4.h **** 
1433:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1434:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 34


1435:.\Core\Include/core_cm4.h **** 
1436:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1437:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1438:.\Core\Include/core_cm4.h **** 
1439:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1440:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1441:.\Core\Include/core_cm4.h **** 
1442:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1443:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1444:.\Core\Include/core_cm4.h **** 
1445:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1446:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1447:.\Core\Include/core_cm4.h **** 
1448:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1449:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1450:.\Core\Include/core_cm4.h **** 
1451:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1452:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1453:.\Core\Include/core_cm4.h **** 
1454:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1455:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1456:.\Core\Include/core_cm4.h **** 
1457:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1458:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1459:.\Core\Include/core_cm4.h **** 
1460:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1461:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1462:.\Core\Include/core_cm4.h **** 
1463:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1464:.\Core\Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1465:.\Core\Include/core_cm4.h **** 
1466:.\Core\Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1467:.\Core\Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1468:.\Core\Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1469:.\Core\Include/core_cm4.h **** 
1470:.\Core\Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1471:.\Core\Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1472:.\Core\Include/core_cm4.h **** 
1473:.\Core\Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1474:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1475:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1476:.\Core\Include/core_cm4.h **** 
1477:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1478:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1479:.\Core\Include/core_cm4.h **** 
1480:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1481:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1482:.\Core\Include/core_cm4.h **** 
1483:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1484:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1485:.\Core\Include/core_cm4.h **** 
1486:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1487:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1488:.\Core\Include/core_cm4.h **** 
1489:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1490:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1491:.\Core\Include/core_cm4.h **** 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 35


1492:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1493:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1494:.\Core\Include/core_cm4.h **** 
1495:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1496:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1497:.\Core\Include/core_cm4.h **** 
1498:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1499:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1500:.\Core\Include/core_cm4.h **** 
1501:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1502:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1503:.\Core\Include/core_cm4.h **** 
1504:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1505:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1506:.\Core\Include/core_cm4.h **** 
1507:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1508:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1509:.\Core\Include/core_cm4.h **** 
1510:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1511:.\Core\Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1512:.\Core\Include/core_cm4.h **** 
1513:.\Core\Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1514:.\Core\Include/core_cm4.h **** 
1515:.\Core\Include/core_cm4.h **** 
1516:.\Core\Include/core_cm4.h **** /**
1517:.\Core\Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1518:.\Core\Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1519:.\Core\Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1520:.\Core\Include/core_cm4.h ****   @{
1521:.\Core\Include/core_cm4.h ****  */
1522:.\Core\Include/core_cm4.h **** 
1523:.\Core\Include/core_cm4.h **** /**
1524:.\Core\Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1525:.\Core\Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1526:.\Core\Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1527:.\Core\Include/core_cm4.h ****   \return           Masked and shifted value.
1528:.\Core\Include/core_cm4.h **** */
1529:.\Core\Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1530:.\Core\Include/core_cm4.h **** 
1531:.\Core\Include/core_cm4.h **** /**
1532:.\Core\Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1533:.\Core\Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1534:.\Core\Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1535:.\Core\Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1536:.\Core\Include/core_cm4.h **** */
1537:.\Core\Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1538:.\Core\Include/core_cm4.h **** 
1539:.\Core\Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1540:.\Core\Include/core_cm4.h **** 
1541:.\Core\Include/core_cm4.h **** 
1542:.\Core\Include/core_cm4.h **** /**
1543:.\Core\Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1544:.\Core\Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1545:.\Core\Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1546:.\Core\Include/core_cm4.h ****   @{
1547:.\Core\Include/core_cm4.h ****  */
1548:.\Core\Include/core_cm4.h **** 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 36


1549:.\Core\Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1550:.\Core\Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1551:.\Core\Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1552:.\Core\Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1553:.\Core\Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1554:.\Core\Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1555:.\Core\Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1556:.\Core\Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1557:.\Core\Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1558:.\Core\Include/core_cm4.h **** 
1559:.\Core\Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1560:.\Core\Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1561:.\Core\Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1562:.\Core\Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1563:.\Core\Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1564:.\Core\Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1565:.\Core\Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1566:.\Core\Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1567:.\Core\Include/core_cm4.h **** 
1568:.\Core\Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1569:.\Core\Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1570:.\Core\Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1571:.\Core\Include/core_cm4.h **** #endif
1572:.\Core\Include/core_cm4.h **** 
1573:.\Core\Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1574:.\Core\Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1575:.\Core\Include/core_cm4.h **** 
1576:.\Core\Include/core_cm4.h **** /*@} */
1577:.\Core\Include/core_cm4.h **** 
1578:.\Core\Include/core_cm4.h **** 
1579:.\Core\Include/core_cm4.h **** 
1580:.\Core\Include/core_cm4.h **** /*******************************************************************************
1581:.\Core\Include/core_cm4.h ****  *                Hardware Abstraction Layer
1582:.\Core\Include/core_cm4.h ****   Core Function Interface contains:
1583:.\Core\Include/core_cm4.h ****   - Core NVIC Functions
1584:.\Core\Include/core_cm4.h ****   - Core SysTick Functions
1585:.\Core\Include/core_cm4.h ****   - Core Debug Functions
1586:.\Core\Include/core_cm4.h ****   - Core Register Access Functions
1587:.\Core\Include/core_cm4.h ****  ******************************************************************************/
1588:.\Core\Include/core_cm4.h **** /**
1589:.\Core\Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1590:.\Core\Include/core_cm4.h **** */
1591:.\Core\Include/core_cm4.h **** 
1592:.\Core\Include/core_cm4.h **** 
1593:.\Core\Include/core_cm4.h **** 
1594:.\Core\Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1595:.\Core\Include/core_cm4.h **** /**
1596:.\Core\Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1597:.\Core\Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1598:.\Core\Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1599:.\Core\Include/core_cm4.h ****   @{
1600:.\Core\Include/core_cm4.h ****  */
1601:.\Core\Include/core_cm4.h **** 
1602:.\Core\Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1603:.\Core\Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1604:.\Core\Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1605:.\Core\Include/core_cm4.h ****   #endif
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 37


1606:.\Core\Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1607:.\Core\Include/core_cm4.h **** #else
1608:.\Core\Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1609:.\Core\Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1610:.\Core\Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1611:.\Core\Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1612:.\Core\Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1613:.\Core\Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1614:.\Core\Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1615:.\Core\Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1616:.\Core\Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1617:.\Core\Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1618:.\Core\Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1619:.\Core\Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1620:.\Core\Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1621:.\Core\Include/core_cm4.h **** 
1622:.\Core\Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1623:.\Core\Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1624:.\Core\Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1625:.\Core\Include/core_cm4.h ****   #endif
1626:.\Core\Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1627:.\Core\Include/core_cm4.h **** #else
1628:.\Core\Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1629:.\Core\Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1630:.\Core\Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1631:.\Core\Include/core_cm4.h **** 
1632:.\Core\Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1633:.\Core\Include/core_cm4.h **** 
1634:.\Core\Include/core_cm4.h **** 
1635:.\Core\Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1636:.\Core\Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1637:.\Core\Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1638:.\Core\Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1639:.\Core\Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1640:.\Core\Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1641:.\Core\Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1642:.\Core\Include/core_cm4.h **** 
1643:.\Core\Include/core_cm4.h **** 
1644:.\Core\Include/core_cm4.h **** /**
1645:.\Core\Include/core_cm4.h ****   \brief   Set Priority Grouping
1646:.\Core\Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1647:.\Core\Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1648:.\Core\Include/core_cm4.h ****            Only values from 0..7 are used.
1649:.\Core\Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1650:.\Core\Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1651:.\Core\Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1652:.\Core\Include/core_cm4.h ****  */
1653:.\Core\Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1654:.\Core\Include/core_cm4.h **** {
1655:.\Core\Include/core_cm4.h ****   uint32_t reg_value;
1656:.\Core\Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1657:.\Core\Include/core_cm4.h **** 
1658:.\Core\Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1659:.\Core\Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1660:.\Core\Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1661:.\Core\Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1662:.\Core\Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 38


1663:.\Core\Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1664:.\Core\Include/core_cm4.h **** }
1665:.\Core\Include/core_cm4.h **** 
1666:.\Core\Include/core_cm4.h **** 
1667:.\Core\Include/core_cm4.h **** /**
1668:.\Core\Include/core_cm4.h ****   \brief   Get Priority Grouping
1669:.\Core\Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1670:.\Core\Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1671:.\Core\Include/core_cm4.h ****  */
1672:.\Core\Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1673:.\Core\Include/core_cm4.h **** {
1674:.\Core\Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1675:.\Core\Include/core_cm4.h **** }
1676:.\Core\Include/core_cm4.h **** 
1677:.\Core\Include/core_cm4.h **** 
1678:.\Core\Include/core_cm4.h **** /**
1679:.\Core\Include/core_cm4.h ****   \brief   Enable Interrupt
1680:.\Core\Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1681:.\Core\Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1682:.\Core\Include/core_cm4.h ****   \note    IRQn must not be negative.
1683:.\Core\Include/core_cm4.h ****  */
1684:.\Core\Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1685:.\Core\Include/core_cm4.h **** {
1686:.\Core\Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
 162              		.loc 2 1686 0
 163 0006 002B     		cmp	r3, #0
 164 0008 08DB     		blt	.L18
1687:.\Core\Include/core_cm4.h ****   {
1688:.\Core\Include/core_cm4.h ****     __COMPILER_BARRIER();
 165              		.loc 2 1688 0
1689:.\Core\Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 166              		.loc 2 1689 0
 167 000a 5909     		lsrs	r1, r3, #5
 168 000c 03F01F03 		and	r3, r3, #31
 169              	.LVL10:
 170 0010 0122     		movs	r2, #1
 171 0012 02FA03F3 		lsl	r3, r2, r3
 172 0016 034A     		ldr	r2, .L20+4
 173 0018 42F82130 		str	r3, [r2, r1, lsl #2]
1690:.\Core\Include/core_cm4.h ****     __COMPILER_BARRIER();
 174              		.loc 2 1690 0
 175              	.LVL11:
 176              	.L18:
 177 001c 7047     		bx	lr
 178              	.L21:
 179 001e 00BF     		.align	2
 180              	.L20:
 181 0020 00000000 		.word	DETECTOR_ADC_IRQ_cfg
 182 0024 00E100E0 		.word	-536813312
 183              	.LBE29:
 184              	.LBE28:
 185              		.cfi_endproc
 186              	.LFE220:
 187              		.size	DETECTOR_ADC_IRQ_Enable, .-DETECTOR_ADC_IRQ_Enable
 188              		.section	.text.DETECTOR_ADC_IRQ_Disable,"ax",%progbits
 189              		.align	2
 190              		.global	DETECTOR_ADC_IRQ_Disable
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 39


 191              		.thumb
 192              		.thumb_func
 193              		.type	DETECTOR_ADC_IRQ_Disable, %function
 194              	DETECTOR_ADC_IRQ_Disable:
 195              	.LFB221:
 287:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #endif
 288:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #endif
 289:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 290:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #ifdef DETECTOR_ADC_IRQ__INTC_CORTEXM0P_ASSIGNED
 291:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #if (CY_CPU_CORTEX_M0P)
 292:Generated_Source\PSoC6/DETECTOR_ADC.c ****         NVIC_EnableIRQ(DETECTOR_ADC_IRQ_cfg.intrSrc);
 293:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #endif
 294:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #endif
 295:Generated_Source\PSoC6/DETECTOR_ADC.c **** }
 296:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 297:Generated_Source\PSoC6/DETECTOR_ADC.c **** /* ****************************************************************************
 298:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Function Name: DETECTOR_ADC_IRQ_Disable
 299:Generated_Source\PSoC6/DETECTOR_ADC.c **** ****************************************************************************//*
 300:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 301:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \brief Disables end of conversion interrupts.
 302:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 303:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \param None
 304:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 305:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \return None
 306:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 307:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \sideeffect None
 308:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 309:Generated_Source\PSoC6/DETECTOR_ADC.c **** *******************************************************************************/
 310:Generated_Source\PSoC6/DETECTOR_ADC.c **** void DETECTOR_ADC_IRQ_Disable(void){
 196              		.loc 1 310 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 311:Generated_Source\PSoC6/DETECTOR_ADC.c ****     /* Interrupt core assignment will be up to the user. */
 312:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #ifdef DETECTOR_ADC_IRQ__INTC_CORTEXM4_ASSIGNED
 313:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #if (CY_CPU_CORTEX_M4)
 314:Generated_Source\PSoC6/DETECTOR_ADC.c ****         NVIC_DisableIRQ(DETECTOR_ADC_IRQ_cfg.intrSrc);
 201              		.loc 1 314 0
 202 0000 094B     		ldr	r3, .L24
 203 0002 B3F90030 		ldrsh	r3, [r3]
 204              	.LVL12:
 205              	.LBB30:
 206              	.LBB31:
1691:.\Core\Include/core_cm4.h ****   }
1692:.\Core\Include/core_cm4.h **** }
1693:.\Core\Include/core_cm4.h **** 
1694:.\Core\Include/core_cm4.h **** 
1695:.\Core\Include/core_cm4.h **** /**
1696:.\Core\Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1697:.\Core\Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1698:.\Core\Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1699:.\Core\Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1700:.\Core\Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1701:.\Core\Include/core_cm4.h ****   \note    IRQn must not be negative.
1702:.\Core\Include/core_cm4.h ****  */
1703:.\Core\Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 40


1704:.\Core\Include/core_cm4.h **** {
1705:.\Core\Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1706:.\Core\Include/core_cm4.h ****   {
1707:.\Core\Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1708:.\Core\Include/core_cm4.h ****   }
1709:.\Core\Include/core_cm4.h ****   else
1710:.\Core\Include/core_cm4.h ****   {
1711:.\Core\Include/core_cm4.h ****     return(0U);
1712:.\Core\Include/core_cm4.h ****   }
1713:.\Core\Include/core_cm4.h **** }
1714:.\Core\Include/core_cm4.h **** 
1715:.\Core\Include/core_cm4.h **** 
1716:.\Core\Include/core_cm4.h **** /**
1717:.\Core\Include/core_cm4.h ****   \brief   Disable Interrupt
1718:.\Core\Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1719:.\Core\Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1720:.\Core\Include/core_cm4.h ****   \note    IRQn must not be negative.
1721:.\Core\Include/core_cm4.h ****  */
1722:.\Core\Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1723:.\Core\Include/core_cm4.h **** {
1724:.\Core\Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
 207              		.loc 2 1724 0
 208 0006 002B     		cmp	r3, #0
 209 0008 0DDB     		blt	.L22
1725:.\Core\Include/core_cm4.h ****   {
1726:.\Core\Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 210              		.loc 2 1726 0
 211 000a 5A09     		lsrs	r2, r3, #5
 212 000c 03F01F03 		and	r3, r3, #31
 213              	.LVL13:
 214 0010 0121     		movs	r1, #1
 215 0012 01FA03F3 		lsl	r3, r1, r3
 216 0016 2032     		adds	r2, r2, #32
 217 0018 0449     		ldr	r1, .L24+4
 218 001a 41F82230 		str	r3, [r1, r2, lsl #2]
 219              	.LBB32:
 220              	.LBB33:
 221              		.file 3 ".\\Core\\Include/cmsis_gcc.h"
   1:.\Core\Include/cmsis_gcc.h **** /**************************************************************************//**
   2:.\Core\Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:.\Core\Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:.\Core\Include/cmsis_gcc.h ****  * @version  V5.3.0
   5:.\Core\Include/cmsis_gcc.h ****  * @date     26. March 2020
   6:.\Core\Include/cmsis_gcc.h ****  ******************************************************************************/
   7:.\Core\Include/cmsis_gcc.h **** /*
   8:.\Core\Include/cmsis_gcc.h ****  * Copyright (c) 2009-2020 Arm Limited. All rights reserved.
   9:.\Core\Include/cmsis_gcc.h ****  *
  10:.\Core\Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:.\Core\Include/cmsis_gcc.h ****  *
  12:.\Core\Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:.\Core\Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:.\Core\Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:.\Core\Include/cmsis_gcc.h ****  *
  16:.\Core\Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:.\Core\Include/cmsis_gcc.h ****  *
  18:.\Core\Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:.\Core\Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 41


  20:.\Core\Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:.\Core\Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:.\Core\Include/cmsis_gcc.h ****  * limitations under the License.
  23:.\Core\Include/cmsis_gcc.h ****  */
  24:.\Core\Include/cmsis_gcc.h **** 
  25:.\Core\Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:.\Core\Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:.\Core\Include/cmsis_gcc.h **** 
  28:.\Core\Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:.\Core\Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:.\Core\Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:.\Core\Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:.\Core\Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:.\Core\Include/cmsis_gcc.h **** 
  34:.\Core\Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:.\Core\Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:.\Core\Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:.\Core\Include/cmsis_gcc.h **** #endif
  38:.\Core\Include/cmsis_gcc.h **** 
  39:.\Core\Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:.\Core\Include/cmsis_gcc.h **** #ifndef   __ASM
  41:.\Core\Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:.\Core\Include/cmsis_gcc.h **** #endif
  43:.\Core\Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:.\Core\Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:.\Core\Include/cmsis_gcc.h **** #endif
  46:.\Core\Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:.\Core\Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:.\Core\Include/cmsis_gcc.h **** #endif
  49:.\Core\Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:.\Core\Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:.\Core\Include/cmsis_gcc.h **** #endif                                           
  52:.\Core\Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:.\Core\Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:.\Core\Include/cmsis_gcc.h **** #endif
  55:.\Core\Include/cmsis_gcc.h **** #ifndef   __USED
  56:.\Core\Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:.\Core\Include/cmsis_gcc.h **** #endif
  58:.\Core\Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:.\Core\Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:.\Core\Include/cmsis_gcc.h **** #endif
  61:.\Core\Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:.\Core\Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:.\Core\Include/cmsis_gcc.h **** #endif
  64:.\Core\Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:.\Core\Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:.\Core\Include/cmsis_gcc.h **** #endif
  67:.\Core\Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:.\Core\Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:.\Core\Include/cmsis_gcc.h **** #endif
  70:.\Core\Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:.\Core\Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:.\Core\Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 42


  77:.\Core\Include/cmsis_gcc.h **** #endif
  78:.\Core\Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:.\Core\Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:.\Core\Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:.\Core\Include/cmsis_gcc.h **** #endif
  86:.\Core\Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:.\Core\Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:.\Core\Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:.\Core\Include/cmsis_gcc.h **** #endif
  94:.\Core\Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:.\Core\Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:.\Core\Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:.\Core\Include/cmsis_gcc.h **** #endif
 102:.\Core\Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:.\Core\Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:.\Core\Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:.\Core\Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:.\Core\Include/cmsis_gcc.h **** #endif
 110:.\Core\Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:.\Core\Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:.\Core\Include/cmsis_gcc.h **** #endif
 113:.\Core\Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:.\Core\Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:.\Core\Include/cmsis_gcc.h **** #endif
 116:.\Core\Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:.\Core\Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:.\Core\Include/cmsis_gcc.h **** #endif
 119:.\Core\Include/cmsis_gcc.h **** 
 120:.\Core\Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:.\Core\Include/cmsis_gcc.h **** 
 122:.\Core\Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:.\Core\Include/cmsis_gcc.h **** 
 124:.\Core\Include/cmsis_gcc.h **** /**
 125:.\Core\Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:.\Core\Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:.\Core\Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:.\Core\Include/cmsis_gcc.h ****            in the used linker script.
 129:.\Core\Include/cmsis_gcc.h ****   
 130:.\Core\Include/cmsis_gcc.h ****  */
 131:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:.\Core\Include/cmsis_gcc.h **** {
 133:.\Core\Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 43


 134:.\Core\Include/cmsis_gcc.h ****   
 135:.\Core\Include/cmsis_gcc.h ****   typedef struct {
 136:.\Core\Include/cmsis_gcc.h ****     uint32_t const* src;
 137:.\Core\Include/cmsis_gcc.h ****     uint32_t* dest;
 138:.\Core\Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:.\Core\Include/cmsis_gcc.h ****   } __copy_table_t;
 140:.\Core\Include/cmsis_gcc.h ****   
 141:.\Core\Include/cmsis_gcc.h ****   typedef struct {
 142:.\Core\Include/cmsis_gcc.h ****     uint32_t* dest;
 143:.\Core\Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:.\Core\Include/cmsis_gcc.h ****   } __zero_table_t;
 145:.\Core\Include/cmsis_gcc.h ****   
 146:.\Core\Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:.\Core\Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:.\Core\Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:.\Core\Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:.\Core\Include/cmsis_gcc.h **** 
 151:.\Core\Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:.\Core\Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:.\Core\Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:.\Core\Include/cmsis_gcc.h ****     }
 155:.\Core\Include/cmsis_gcc.h ****   }
 156:.\Core\Include/cmsis_gcc.h ****  
 157:.\Core\Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:.\Core\Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:.\Core\Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:.\Core\Include/cmsis_gcc.h ****     }
 161:.\Core\Include/cmsis_gcc.h ****   }
 162:.\Core\Include/cmsis_gcc.h ****  
 163:.\Core\Include/cmsis_gcc.h ****   _start();
 164:.\Core\Include/cmsis_gcc.h **** }
 165:.\Core\Include/cmsis_gcc.h ****   
 166:.\Core\Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:.\Core\Include/cmsis_gcc.h **** #endif
 168:.\Core\Include/cmsis_gcc.h **** 
 169:.\Core\Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:.\Core\Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:.\Core\Include/cmsis_gcc.h **** #endif
 172:.\Core\Include/cmsis_gcc.h **** 
 173:.\Core\Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:.\Core\Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:.\Core\Include/cmsis_gcc.h **** #endif
 176:.\Core\Include/cmsis_gcc.h **** 
 177:.\Core\Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:.\Core\Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:.\Core\Include/cmsis_gcc.h **** #endif
 180:.\Core\Include/cmsis_gcc.h **** 
 181:.\Core\Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:.\Core\Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:.\Core\Include/cmsis_gcc.h **** #endif
 184:.\Core\Include/cmsis_gcc.h **** 
 185:.\Core\Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:.\Core\Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:.\Core\Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:.\Core\Include/cmsis_gcc.h ****   @{
 189:.\Core\Include/cmsis_gcc.h ****  */
 190:.\Core\Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 44


 191:.\Core\Include/cmsis_gcc.h **** /**
 192:.\Core\Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:.\Core\Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:.\Core\Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:.\Core\Include/cmsis_gcc.h ****  */
 196:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:.\Core\Include/cmsis_gcc.h **** {
 198:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:.\Core\Include/cmsis_gcc.h **** }
 200:.\Core\Include/cmsis_gcc.h **** 
 201:.\Core\Include/cmsis_gcc.h **** 
 202:.\Core\Include/cmsis_gcc.h **** /**
 203:.\Core\Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:.\Core\Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:.\Core\Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:.\Core\Include/cmsis_gcc.h ****  */
 207:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:.\Core\Include/cmsis_gcc.h **** {
 209:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:.\Core\Include/cmsis_gcc.h **** }
 211:.\Core\Include/cmsis_gcc.h **** 
 212:.\Core\Include/cmsis_gcc.h **** 
 213:.\Core\Include/cmsis_gcc.h **** /**
 214:.\Core\Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:.\Core\Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:.\Core\Include/cmsis_gcc.h ****   \return               Control Register value
 217:.\Core\Include/cmsis_gcc.h ****  */
 218:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:.\Core\Include/cmsis_gcc.h **** {
 220:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 221:.\Core\Include/cmsis_gcc.h **** 
 222:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:.\Core\Include/cmsis_gcc.h ****   return(result);
 224:.\Core\Include/cmsis_gcc.h **** }
 225:.\Core\Include/cmsis_gcc.h **** 
 226:.\Core\Include/cmsis_gcc.h **** 
 227:.\Core\Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:.\Core\Include/cmsis_gcc.h **** /**
 229:.\Core\Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:.\Core\Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:.\Core\Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:.\Core\Include/cmsis_gcc.h ****  */
 233:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:.\Core\Include/cmsis_gcc.h **** {
 235:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 236:.\Core\Include/cmsis_gcc.h **** 
 237:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:.\Core\Include/cmsis_gcc.h ****   return(result);
 239:.\Core\Include/cmsis_gcc.h **** }
 240:.\Core\Include/cmsis_gcc.h **** #endif
 241:.\Core\Include/cmsis_gcc.h **** 
 242:.\Core\Include/cmsis_gcc.h **** 
 243:.\Core\Include/cmsis_gcc.h **** /**
 244:.\Core\Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:.\Core\Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:.\Core\Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:.\Core\Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 45


 248:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:.\Core\Include/cmsis_gcc.h **** {
 250:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:.\Core\Include/cmsis_gcc.h **** }
 252:.\Core\Include/cmsis_gcc.h **** 
 253:.\Core\Include/cmsis_gcc.h **** 
 254:.\Core\Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:.\Core\Include/cmsis_gcc.h **** /**
 256:.\Core\Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:.\Core\Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:.\Core\Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:.\Core\Include/cmsis_gcc.h ****  */
 260:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:.\Core\Include/cmsis_gcc.h **** {
 262:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:.\Core\Include/cmsis_gcc.h **** }
 264:.\Core\Include/cmsis_gcc.h **** #endif
 265:.\Core\Include/cmsis_gcc.h **** 
 266:.\Core\Include/cmsis_gcc.h **** 
 267:.\Core\Include/cmsis_gcc.h **** /**
 268:.\Core\Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:.\Core\Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:.\Core\Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:.\Core\Include/cmsis_gcc.h ****  */
 272:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:.\Core\Include/cmsis_gcc.h **** {
 274:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 275:.\Core\Include/cmsis_gcc.h **** 
 276:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:.\Core\Include/cmsis_gcc.h ****   return(result);
 278:.\Core\Include/cmsis_gcc.h **** }
 279:.\Core\Include/cmsis_gcc.h **** 
 280:.\Core\Include/cmsis_gcc.h **** 
 281:.\Core\Include/cmsis_gcc.h **** /**
 282:.\Core\Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:.\Core\Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:.\Core\Include/cmsis_gcc.h ****   \return               APSR Register value
 285:.\Core\Include/cmsis_gcc.h ****  */
 286:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:.\Core\Include/cmsis_gcc.h **** {
 288:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 289:.\Core\Include/cmsis_gcc.h **** 
 290:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:.\Core\Include/cmsis_gcc.h ****   return(result);
 292:.\Core\Include/cmsis_gcc.h **** }
 293:.\Core\Include/cmsis_gcc.h **** 
 294:.\Core\Include/cmsis_gcc.h **** 
 295:.\Core\Include/cmsis_gcc.h **** /**
 296:.\Core\Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:.\Core\Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:.\Core\Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:.\Core\Include/cmsis_gcc.h ****  */
 300:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:.\Core\Include/cmsis_gcc.h **** {
 302:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 303:.\Core\Include/cmsis_gcc.h **** 
 304:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 46


 305:.\Core\Include/cmsis_gcc.h ****   return(result);
 306:.\Core\Include/cmsis_gcc.h **** }
 307:.\Core\Include/cmsis_gcc.h **** 
 308:.\Core\Include/cmsis_gcc.h **** 
 309:.\Core\Include/cmsis_gcc.h **** /**
 310:.\Core\Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:.\Core\Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:.\Core\Include/cmsis_gcc.h ****   \return               PSP Register value
 313:.\Core\Include/cmsis_gcc.h ****  */
 314:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:.\Core\Include/cmsis_gcc.h **** {
 316:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 317:.\Core\Include/cmsis_gcc.h **** 
 318:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:.\Core\Include/cmsis_gcc.h ****   return(result);
 320:.\Core\Include/cmsis_gcc.h **** }
 321:.\Core\Include/cmsis_gcc.h **** 
 322:.\Core\Include/cmsis_gcc.h **** 
 323:.\Core\Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:.\Core\Include/cmsis_gcc.h **** /**
 325:.\Core\Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:.\Core\Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:.\Core\Include/cmsis_gcc.h ****   \return               PSP Register value
 328:.\Core\Include/cmsis_gcc.h ****  */
 329:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:.\Core\Include/cmsis_gcc.h **** {
 331:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 332:.\Core\Include/cmsis_gcc.h **** 
 333:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:.\Core\Include/cmsis_gcc.h ****   return(result);
 335:.\Core\Include/cmsis_gcc.h **** }
 336:.\Core\Include/cmsis_gcc.h **** #endif
 337:.\Core\Include/cmsis_gcc.h **** 
 338:.\Core\Include/cmsis_gcc.h **** 
 339:.\Core\Include/cmsis_gcc.h **** /**
 340:.\Core\Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:.\Core\Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:.\Core\Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:.\Core\Include/cmsis_gcc.h ****  */
 344:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:.\Core\Include/cmsis_gcc.h **** {
 346:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:.\Core\Include/cmsis_gcc.h **** }
 348:.\Core\Include/cmsis_gcc.h **** 
 349:.\Core\Include/cmsis_gcc.h **** 
 350:.\Core\Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:.\Core\Include/cmsis_gcc.h **** /**
 352:.\Core\Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:.\Core\Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:.\Core\Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:.\Core\Include/cmsis_gcc.h ****  */
 356:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:.\Core\Include/cmsis_gcc.h **** {
 358:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:.\Core\Include/cmsis_gcc.h **** }
 360:.\Core\Include/cmsis_gcc.h **** #endif
 361:.\Core\Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 47


 362:.\Core\Include/cmsis_gcc.h **** 
 363:.\Core\Include/cmsis_gcc.h **** /**
 364:.\Core\Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:.\Core\Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:.\Core\Include/cmsis_gcc.h ****   \return               MSP Register value
 367:.\Core\Include/cmsis_gcc.h ****  */
 368:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:.\Core\Include/cmsis_gcc.h **** {
 370:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 371:.\Core\Include/cmsis_gcc.h **** 
 372:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:.\Core\Include/cmsis_gcc.h ****   return(result);
 374:.\Core\Include/cmsis_gcc.h **** }
 375:.\Core\Include/cmsis_gcc.h **** 
 376:.\Core\Include/cmsis_gcc.h **** 
 377:.\Core\Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:.\Core\Include/cmsis_gcc.h **** /**
 379:.\Core\Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:.\Core\Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:.\Core\Include/cmsis_gcc.h ****   \return               MSP Register value
 382:.\Core\Include/cmsis_gcc.h ****  */
 383:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:.\Core\Include/cmsis_gcc.h **** {
 385:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 386:.\Core\Include/cmsis_gcc.h **** 
 387:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:.\Core\Include/cmsis_gcc.h ****   return(result);
 389:.\Core\Include/cmsis_gcc.h **** }
 390:.\Core\Include/cmsis_gcc.h **** #endif
 391:.\Core\Include/cmsis_gcc.h **** 
 392:.\Core\Include/cmsis_gcc.h **** 
 393:.\Core\Include/cmsis_gcc.h **** /**
 394:.\Core\Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:.\Core\Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:.\Core\Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:.\Core\Include/cmsis_gcc.h ****  */
 398:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:.\Core\Include/cmsis_gcc.h **** {
 400:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:.\Core\Include/cmsis_gcc.h **** }
 402:.\Core\Include/cmsis_gcc.h **** 
 403:.\Core\Include/cmsis_gcc.h **** 
 404:.\Core\Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:.\Core\Include/cmsis_gcc.h **** /**
 406:.\Core\Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:.\Core\Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:.\Core\Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:.\Core\Include/cmsis_gcc.h ****  */
 410:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:.\Core\Include/cmsis_gcc.h **** {
 412:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:.\Core\Include/cmsis_gcc.h **** }
 414:.\Core\Include/cmsis_gcc.h **** #endif
 415:.\Core\Include/cmsis_gcc.h **** 
 416:.\Core\Include/cmsis_gcc.h **** 
 417:.\Core\Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:.\Core\Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 48


 419:.\Core\Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:.\Core\Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:.\Core\Include/cmsis_gcc.h ****   \return               SP Register value
 422:.\Core\Include/cmsis_gcc.h ****  */
 423:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:.\Core\Include/cmsis_gcc.h **** {
 425:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 426:.\Core\Include/cmsis_gcc.h **** 
 427:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:.\Core\Include/cmsis_gcc.h ****   return(result);
 429:.\Core\Include/cmsis_gcc.h **** }
 430:.\Core\Include/cmsis_gcc.h **** 
 431:.\Core\Include/cmsis_gcc.h **** 
 432:.\Core\Include/cmsis_gcc.h **** /**
 433:.\Core\Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:.\Core\Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:.\Core\Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:.\Core\Include/cmsis_gcc.h ****  */
 437:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:.\Core\Include/cmsis_gcc.h **** {
 439:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:.\Core\Include/cmsis_gcc.h **** }
 441:.\Core\Include/cmsis_gcc.h **** #endif
 442:.\Core\Include/cmsis_gcc.h **** 
 443:.\Core\Include/cmsis_gcc.h **** 
 444:.\Core\Include/cmsis_gcc.h **** /**
 445:.\Core\Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:.\Core\Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:.\Core\Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:.\Core\Include/cmsis_gcc.h ****  */
 449:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:.\Core\Include/cmsis_gcc.h **** {
 451:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 452:.\Core\Include/cmsis_gcc.h **** 
 453:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 454:.\Core\Include/cmsis_gcc.h ****   return(result);
 455:.\Core\Include/cmsis_gcc.h **** }
 456:.\Core\Include/cmsis_gcc.h **** 
 457:.\Core\Include/cmsis_gcc.h **** 
 458:.\Core\Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:.\Core\Include/cmsis_gcc.h **** /**
 460:.\Core\Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:.\Core\Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:.\Core\Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:.\Core\Include/cmsis_gcc.h ****  */
 464:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:.\Core\Include/cmsis_gcc.h **** {
 466:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 467:.\Core\Include/cmsis_gcc.h **** 
 468:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 469:.\Core\Include/cmsis_gcc.h ****   return(result);
 470:.\Core\Include/cmsis_gcc.h **** }
 471:.\Core\Include/cmsis_gcc.h **** #endif
 472:.\Core\Include/cmsis_gcc.h **** 
 473:.\Core\Include/cmsis_gcc.h **** 
 474:.\Core\Include/cmsis_gcc.h **** /**
 475:.\Core\Include/cmsis_gcc.h ****   \brief   Set Priority Mask
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 49


 476:.\Core\Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:.\Core\Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:.\Core\Include/cmsis_gcc.h ****  */
 479:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:.\Core\Include/cmsis_gcc.h **** {
 481:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:.\Core\Include/cmsis_gcc.h **** }
 483:.\Core\Include/cmsis_gcc.h **** 
 484:.\Core\Include/cmsis_gcc.h **** 
 485:.\Core\Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:.\Core\Include/cmsis_gcc.h **** /**
 487:.\Core\Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:.\Core\Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:.\Core\Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:.\Core\Include/cmsis_gcc.h ****  */
 491:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:.\Core\Include/cmsis_gcc.h **** {
 493:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:.\Core\Include/cmsis_gcc.h **** }
 495:.\Core\Include/cmsis_gcc.h **** #endif
 496:.\Core\Include/cmsis_gcc.h **** 
 497:.\Core\Include/cmsis_gcc.h **** 
 498:.\Core\Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:.\Core\Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:.\Core\Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:.\Core\Include/cmsis_gcc.h **** /**
 502:.\Core\Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:.\Core\Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:.\Core\Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:.\Core\Include/cmsis_gcc.h ****  */
 506:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:.\Core\Include/cmsis_gcc.h **** {
 508:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:.\Core\Include/cmsis_gcc.h **** }
 510:.\Core\Include/cmsis_gcc.h **** 
 511:.\Core\Include/cmsis_gcc.h **** 
 512:.\Core\Include/cmsis_gcc.h **** /**
 513:.\Core\Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:.\Core\Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:.\Core\Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:.\Core\Include/cmsis_gcc.h ****  */
 517:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:.\Core\Include/cmsis_gcc.h **** {
 519:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:.\Core\Include/cmsis_gcc.h **** }
 521:.\Core\Include/cmsis_gcc.h **** 
 522:.\Core\Include/cmsis_gcc.h **** 
 523:.\Core\Include/cmsis_gcc.h **** /**
 524:.\Core\Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:.\Core\Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:.\Core\Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:.\Core\Include/cmsis_gcc.h ****  */
 528:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:.\Core\Include/cmsis_gcc.h **** {
 530:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 531:.\Core\Include/cmsis_gcc.h **** 
 532:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 50


 533:.\Core\Include/cmsis_gcc.h ****   return(result);
 534:.\Core\Include/cmsis_gcc.h **** }
 535:.\Core\Include/cmsis_gcc.h **** 
 536:.\Core\Include/cmsis_gcc.h **** 
 537:.\Core\Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:.\Core\Include/cmsis_gcc.h **** /**
 539:.\Core\Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:.\Core\Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:.\Core\Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:.\Core\Include/cmsis_gcc.h ****  */
 543:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:.\Core\Include/cmsis_gcc.h **** {
 545:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 546:.\Core\Include/cmsis_gcc.h **** 
 547:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:.\Core\Include/cmsis_gcc.h ****   return(result);
 549:.\Core\Include/cmsis_gcc.h **** }
 550:.\Core\Include/cmsis_gcc.h **** #endif
 551:.\Core\Include/cmsis_gcc.h **** 
 552:.\Core\Include/cmsis_gcc.h **** 
 553:.\Core\Include/cmsis_gcc.h **** /**
 554:.\Core\Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:.\Core\Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:.\Core\Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:.\Core\Include/cmsis_gcc.h ****  */
 558:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:.\Core\Include/cmsis_gcc.h **** {
 560:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:.\Core\Include/cmsis_gcc.h **** }
 562:.\Core\Include/cmsis_gcc.h **** 
 563:.\Core\Include/cmsis_gcc.h **** 
 564:.\Core\Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:.\Core\Include/cmsis_gcc.h **** /**
 566:.\Core\Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:.\Core\Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:.\Core\Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:.\Core\Include/cmsis_gcc.h ****  */
 570:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:.\Core\Include/cmsis_gcc.h **** {
 572:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:.\Core\Include/cmsis_gcc.h **** }
 574:.\Core\Include/cmsis_gcc.h **** #endif
 575:.\Core\Include/cmsis_gcc.h **** 
 576:.\Core\Include/cmsis_gcc.h **** 
 577:.\Core\Include/cmsis_gcc.h **** /**
 578:.\Core\Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:.\Core\Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:.\Core\Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:.\Core\Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:.\Core\Include/cmsis_gcc.h ****  */
 583:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:.\Core\Include/cmsis_gcc.h **** {
 585:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:.\Core\Include/cmsis_gcc.h **** }
 587:.\Core\Include/cmsis_gcc.h **** 
 588:.\Core\Include/cmsis_gcc.h **** 
 589:.\Core\Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 51


 590:.\Core\Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:.\Core\Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:.\Core\Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:.\Core\Include/cmsis_gcc.h ****  */
 594:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:.\Core\Include/cmsis_gcc.h **** {
 596:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 597:.\Core\Include/cmsis_gcc.h **** 
 598:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:.\Core\Include/cmsis_gcc.h ****   return(result);
 600:.\Core\Include/cmsis_gcc.h **** }
 601:.\Core\Include/cmsis_gcc.h **** 
 602:.\Core\Include/cmsis_gcc.h **** 
 603:.\Core\Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:.\Core\Include/cmsis_gcc.h **** /**
 605:.\Core\Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:.\Core\Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:.\Core\Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:.\Core\Include/cmsis_gcc.h ****  */
 609:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:.\Core\Include/cmsis_gcc.h **** {
 611:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 612:.\Core\Include/cmsis_gcc.h **** 
 613:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:.\Core\Include/cmsis_gcc.h ****   return(result);
 615:.\Core\Include/cmsis_gcc.h **** }
 616:.\Core\Include/cmsis_gcc.h **** #endif
 617:.\Core\Include/cmsis_gcc.h **** 
 618:.\Core\Include/cmsis_gcc.h **** 
 619:.\Core\Include/cmsis_gcc.h **** /**
 620:.\Core\Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:.\Core\Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:.\Core\Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:.\Core\Include/cmsis_gcc.h ****  */
 624:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:.\Core\Include/cmsis_gcc.h **** {
 626:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:.\Core\Include/cmsis_gcc.h **** }
 628:.\Core\Include/cmsis_gcc.h **** 
 629:.\Core\Include/cmsis_gcc.h **** 
 630:.\Core\Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:.\Core\Include/cmsis_gcc.h **** /**
 632:.\Core\Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:.\Core\Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:.\Core\Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:.\Core\Include/cmsis_gcc.h ****  */
 636:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:.\Core\Include/cmsis_gcc.h **** {
 638:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:.\Core\Include/cmsis_gcc.h **** }
 640:.\Core\Include/cmsis_gcc.h **** #endif
 641:.\Core\Include/cmsis_gcc.h **** 
 642:.\Core\Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:.\Core\Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:.\Core\Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:.\Core\Include/cmsis_gcc.h **** 
 646:.\Core\Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 52


 647:.\Core\Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:.\Core\Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:.\Core\Include/cmsis_gcc.h **** 
 650:.\Core\Include/cmsis_gcc.h **** /**
 651:.\Core\Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:.\Core\Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:.\Core\Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:.\Core\Include/cmsis_gcc.h ****   mode.
 655:.\Core\Include/cmsis_gcc.h ****   
 656:.\Core\Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:.\Core\Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:.\Core\Include/cmsis_gcc.h ****  */
 659:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:.\Core\Include/cmsis_gcc.h **** {
 661:.\Core\Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:.\Core\Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:.\Core\Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:.\Core\Include/cmsis_gcc.h ****   return 0U;
 665:.\Core\Include/cmsis_gcc.h **** #else
 666:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 667:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:.\Core\Include/cmsis_gcc.h ****   return result;
 669:.\Core\Include/cmsis_gcc.h **** #endif
 670:.\Core\Include/cmsis_gcc.h **** }
 671:.\Core\Include/cmsis_gcc.h **** 
 672:.\Core\Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:.\Core\Include/cmsis_gcc.h **** /**
 674:.\Core\Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:.\Core\Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:.\Core\Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:.\Core\Include/cmsis_gcc.h **** 
 678:.\Core\Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:.\Core\Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:.\Core\Include/cmsis_gcc.h ****  */
 681:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:.\Core\Include/cmsis_gcc.h **** {
 683:.\Core\Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:.\Core\Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:.\Core\Include/cmsis_gcc.h ****   return 0U;
 686:.\Core\Include/cmsis_gcc.h **** #else
 687:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 688:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:.\Core\Include/cmsis_gcc.h ****   return result;
 690:.\Core\Include/cmsis_gcc.h **** #endif
 691:.\Core\Include/cmsis_gcc.h **** }
 692:.\Core\Include/cmsis_gcc.h **** #endif
 693:.\Core\Include/cmsis_gcc.h **** 
 694:.\Core\Include/cmsis_gcc.h **** 
 695:.\Core\Include/cmsis_gcc.h **** /**
 696:.\Core\Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:.\Core\Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:.\Core\Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:.\Core\Include/cmsis_gcc.h ****   mode.
 700:.\Core\Include/cmsis_gcc.h ****   
 701:.\Core\Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:.\Core\Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:.\Core\Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 53


 704:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:.\Core\Include/cmsis_gcc.h **** {
 706:.\Core\Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:.\Core\Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:.\Core\Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:.\Core\Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:.\Core\Include/cmsis_gcc.h **** #else
 711:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:.\Core\Include/cmsis_gcc.h **** #endif
 713:.\Core\Include/cmsis_gcc.h **** }
 714:.\Core\Include/cmsis_gcc.h **** 
 715:.\Core\Include/cmsis_gcc.h **** 
 716:.\Core\Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:.\Core\Include/cmsis_gcc.h **** /**
 718:.\Core\Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:.\Core\Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:.\Core\Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:.\Core\Include/cmsis_gcc.h **** 
 722:.\Core\Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:.\Core\Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:.\Core\Include/cmsis_gcc.h ****  */
 725:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:.\Core\Include/cmsis_gcc.h **** {
 727:.\Core\Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:.\Core\Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:.\Core\Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:.\Core\Include/cmsis_gcc.h **** #else
 731:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:.\Core\Include/cmsis_gcc.h **** #endif
 733:.\Core\Include/cmsis_gcc.h **** }
 734:.\Core\Include/cmsis_gcc.h **** #endif
 735:.\Core\Include/cmsis_gcc.h **** 
 736:.\Core\Include/cmsis_gcc.h **** 
 737:.\Core\Include/cmsis_gcc.h **** /**
 738:.\Core\Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:.\Core\Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:.\Core\Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:.\Core\Include/cmsis_gcc.h ****   mode.
 742:.\Core\Include/cmsis_gcc.h **** 
 743:.\Core\Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:.\Core\Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:.\Core\Include/cmsis_gcc.h ****  */
 746:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:.\Core\Include/cmsis_gcc.h **** {
 748:.\Core\Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:.\Core\Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:.\Core\Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:.\Core\Include/cmsis_gcc.h ****   return 0U;
 752:.\Core\Include/cmsis_gcc.h **** #else
 753:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 754:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:.\Core\Include/cmsis_gcc.h ****   return result;
 756:.\Core\Include/cmsis_gcc.h **** #endif
 757:.\Core\Include/cmsis_gcc.h **** }
 758:.\Core\Include/cmsis_gcc.h **** 
 759:.\Core\Include/cmsis_gcc.h **** 
 760:.\Core\Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 54


 761:.\Core\Include/cmsis_gcc.h **** /**
 762:.\Core\Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:.\Core\Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:.\Core\Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:.\Core\Include/cmsis_gcc.h **** 
 766:.\Core\Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:.\Core\Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:.\Core\Include/cmsis_gcc.h ****  */
 769:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:.\Core\Include/cmsis_gcc.h **** {
 771:.\Core\Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:.\Core\Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:.\Core\Include/cmsis_gcc.h ****   return 0U;
 774:.\Core\Include/cmsis_gcc.h **** #else
 775:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 776:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:.\Core\Include/cmsis_gcc.h ****   return result;
 778:.\Core\Include/cmsis_gcc.h **** #endif
 779:.\Core\Include/cmsis_gcc.h **** }
 780:.\Core\Include/cmsis_gcc.h **** #endif
 781:.\Core\Include/cmsis_gcc.h **** 
 782:.\Core\Include/cmsis_gcc.h **** 
 783:.\Core\Include/cmsis_gcc.h **** /**
 784:.\Core\Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:.\Core\Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:.\Core\Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:.\Core\Include/cmsis_gcc.h ****   mode.
 788:.\Core\Include/cmsis_gcc.h **** 
 789:.\Core\Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:.\Core\Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:.\Core\Include/cmsis_gcc.h ****  */
 792:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:.\Core\Include/cmsis_gcc.h **** {
 794:.\Core\Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:.\Core\Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:.\Core\Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:.\Core\Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:.\Core\Include/cmsis_gcc.h **** #else
 799:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:.\Core\Include/cmsis_gcc.h **** #endif
 801:.\Core\Include/cmsis_gcc.h **** }
 802:.\Core\Include/cmsis_gcc.h **** 
 803:.\Core\Include/cmsis_gcc.h **** 
 804:.\Core\Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:.\Core\Include/cmsis_gcc.h **** /**
 806:.\Core\Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:.\Core\Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:.\Core\Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:.\Core\Include/cmsis_gcc.h **** 
 810:.\Core\Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:.\Core\Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:.\Core\Include/cmsis_gcc.h ****  */
 813:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:.\Core\Include/cmsis_gcc.h **** {
 815:.\Core\Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:.\Core\Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:.\Core\Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 55


 818:.\Core\Include/cmsis_gcc.h **** #else
 819:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:.\Core\Include/cmsis_gcc.h **** #endif
 821:.\Core\Include/cmsis_gcc.h **** }
 822:.\Core\Include/cmsis_gcc.h **** #endif
 823:.\Core\Include/cmsis_gcc.h **** 
 824:.\Core\Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:.\Core\Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:.\Core\Include/cmsis_gcc.h **** 
 827:.\Core\Include/cmsis_gcc.h **** 
 828:.\Core\Include/cmsis_gcc.h **** /**
 829:.\Core\Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:.\Core\Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:.\Core\Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:.\Core\Include/cmsis_gcc.h ****  */
 833:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:.\Core\Include/cmsis_gcc.h **** {
 835:.\Core\Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:.\Core\Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:.\Core\Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:.\Core\Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:.\Core\Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:.\Core\Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:.\Core\Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:.\Core\Include/cmsis_gcc.h **** #else
 843:.\Core\Include/cmsis_gcc.h ****   uint32_t result;
 844:.\Core\Include/cmsis_gcc.h **** 
 845:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:.\Core\Include/cmsis_gcc.h ****   return(result);
 847:.\Core\Include/cmsis_gcc.h **** #endif
 848:.\Core\Include/cmsis_gcc.h **** #else
 849:.\Core\Include/cmsis_gcc.h ****   return(0U);
 850:.\Core\Include/cmsis_gcc.h **** #endif
 851:.\Core\Include/cmsis_gcc.h **** }
 852:.\Core\Include/cmsis_gcc.h **** 
 853:.\Core\Include/cmsis_gcc.h **** 
 854:.\Core\Include/cmsis_gcc.h **** /**
 855:.\Core\Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:.\Core\Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:.\Core\Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:.\Core\Include/cmsis_gcc.h ****  */
 859:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:.\Core\Include/cmsis_gcc.h **** {
 861:.\Core\Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:.\Core\Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:.\Core\Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:.\Core\Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:.\Core\Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:.\Core\Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:.\Core\Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:.\Core\Include/cmsis_gcc.h **** #else
 869:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:.\Core\Include/cmsis_gcc.h **** #endif
 871:.\Core\Include/cmsis_gcc.h **** #else
 872:.\Core\Include/cmsis_gcc.h ****   (void)fpscr;
 873:.\Core\Include/cmsis_gcc.h **** #endif
 874:.\Core\Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 56


 875:.\Core\Include/cmsis_gcc.h **** 
 876:.\Core\Include/cmsis_gcc.h **** 
 877:.\Core\Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:.\Core\Include/cmsis_gcc.h **** 
 879:.\Core\Include/cmsis_gcc.h **** 
 880:.\Core\Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:.\Core\Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:.\Core\Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:.\Core\Include/cmsis_gcc.h ****   @{
 884:.\Core\Include/cmsis_gcc.h **** */
 885:.\Core\Include/cmsis_gcc.h **** 
 886:.\Core\Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:.\Core\Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:.\Core\Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:.\Core\Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:.\Core\Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:.\Core\Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:.\Core\Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:.\Core\Include/cmsis_gcc.h **** #else
 894:.\Core\Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:.\Core\Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:.\Core\Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:.\Core\Include/cmsis_gcc.h **** #endif
 898:.\Core\Include/cmsis_gcc.h **** 
 899:.\Core\Include/cmsis_gcc.h **** /**
 900:.\Core\Include/cmsis_gcc.h ****   \brief   No Operation
 901:.\Core\Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:.\Core\Include/cmsis_gcc.h ****  */
 903:.\Core\Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:.\Core\Include/cmsis_gcc.h **** 
 905:.\Core\Include/cmsis_gcc.h **** /**
 906:.\Core\Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:.\Core\Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:.\Core\Include/cmsis_gcc.h ****  */
 909:.\Core\Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 910:.\Core\Include/cmsis_gcc.h **** 
 911:.\Core\Include/cmsis_gcc.h **** 
 912:.\Core\Include/cmsis_gcc.h **** /**
 913:.\Core\Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:.\Core\Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:.\Core\Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:.\Core\Include/cmsis_gcc.h ****  */
 917:.\Core\Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 918:.\Core\Include/cmsis_gcc.h **** 
 919:.\Core\Include/cmsis_gcc.h **** 
 920:.\Core\Include/cmsis_gcc.h **** /**
 921:.\Core\Include/cmsis_gcc.h ****   \brief   Send Event
 922:.\Core\Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:.\Core\Include/cmsis_gcc.h ****  */
 924:.\Core\Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:.\Core\Include/cmsis_gcc.h **** 
 926:.\Core\Include/cmsis_gcc.h **** 
 927:.\Core\Include/cmsis_gcc.h **** /**
 928:.\Core\Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:.\Core\Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:.\Core\Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:.\Core\Include/cmsis_gcc.h ****            after the instruction has been completed.
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 57


 932:.\Core\Include/cmsis_gcc.h ****  */
 933:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:.\Core\Include/cmsis_gcc.h **** {
 935:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:.\Core\Include/cmsis_gcc.h **** }
 937:.\Core\Include/cmsis_gcc.h **** 
 938:.\Core\Include/cmsis_gcc.h **** 
 939:.\Core\Include/cmsis_gcc.h **** /**
 940:.\Core\Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:.\Core\Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:.\Core\Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:.\Core\Include/cmsis_gcc.h ****  */
 944:.\Core\Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:.\Core\Include/cmsis_gcc.h **** {
 946:.\Core\Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 222              		.loc 3 946 0
 223              		.syntax unified
 224              	@ 946 ".\Core\Include/cmsis_gcc.h" 1
 225 001e BFF34F8F 		dsb 0xF
 226              	@ 0 "" 2
 227              		.thumb
 228              		.syntax unified
 229              	.LBE33:
 230              	.LBE32:
 231              	.LBB34:
 232              	.LBB35:
 935:.\Core\Include/cmsis_gcc.h **** }
 233              		.loc 3 935 0
 234              		.syntax unified
 235              	@ 935 ".\Core\Include/cmsis_gcc.h" 1
 236 0022 BFF36F8F 		isb 0xF
 237              	@ 0 "" 2
 238              	.LVL14:
 239              		.thumb
 240              		.syntax unified
 241              	.L22:
 242 0026 7047     		bx	lr
 243              	.L25:
 244              		.align	2
 245              	.L24:
 246 0028 00000000 		.word	DETECTOR_ADC_IRQ_cfg
 247 002c 00E100E0 		.word	-536813312
 248              	.LBE35:
 249              	.LBE34:
 250              	.LBE31:
 251              	.LBE30:
 252              		.cfi_endproc
 253              	.LFE221:
 254              		.size	DETECTOR_ADC_IRQ_Disable, .-DETECTOR_ADC_IRQ_Disable
 255              		.section	.text.DETECTOR_ADC_SetEosMask,"ax",%progbits
 256              		.align	2
 257              		.global	DETECTOR_ADC_SetEosMask
 258              		.thumb
 259              		.thumb_func
 260              		.type	DETECTOR_ADC_SetEosMask, %function
 261              	DETECTOR_ADC_SetEosMask:
 262              	.LFB222:
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 58


 315:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #endif
 316:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #endif
 317:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 318:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #ifdef DETECTOR_ADC_IRQ__INTC_CORTEXM0P_ASSIGNED
 319:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #if (CY_CPU_CORTEX_M0P)
 320:Generated_Source\PSoC6/DETECTOR_ADC.c ****         NVIC_DisableIRQ(DETECTOR_ADC_IRQ_cfg.intrSrc);
 321:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #endif
 322:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #endif
 323:Generated_Source\PSoC6/DETECTOR_ADC.c **** }
 324:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 325:Generated_Source\PSoC6/DETECTOR_ADC.c **** /*******************************************************************************
 326:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Function Name: DETECTOR_ADC_SetEosMask
 327:Generated_Source\PSoC6/DETECTOR_ADC.c **** ****************************************************************************//**
 328:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 329:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \brief Sets or clears the End of Scan (EOS) interrupt mask.
 330:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 331:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 332:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 333:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \return None
 334:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 335:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 336:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 337:Generated_Source\PSoC6/DETECTOR_ADC.c **** *******************************************************************************/
 338:Generated_Source\PSoC6/DETECTOR_ADC.c **** void DETECTOR_ADC_SetEosMask(uint32_t mask)
 339:Generated_Source\PSoC6/DETECTOR_ADC.c **** {
 263              		.loc 1 339 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              	.LVL15:
 268 0000 00B5     		push	{lr}
 269              		.cfi_def_cfa_offset 4
 270              		.cfi_offset 14, -4
 340:Generated_Source\PSoC6/DETECTOR_ADC.c ****     uint32_t intrMaskReg;
 341:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 342:Generated_Source\PSoC6/DETECTOR_ADC.c ****     intrMaskReg = (0uL == mask) ? CY_SAR_DEINIT : SAR_INTR_MASK_EOS_MASK_Msk;
 271              		.loc 1 342 0
 272 0002 0030     		adds	r0, r0, #0
 273 0004 18BF     		it	ne
 274 0006 0120     		movne	r0, #1
 275              	.LVL16:
 276              	.LBB36:
 277              	.LBB37:
 278              		.file 4 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 59


  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 60


  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 61


 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 62


 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 63


 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 64


 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 65


 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 66


 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 67


 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 68


 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 69


 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 70


 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 71


 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 72


 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 73


 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 74


 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 75


 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 76


 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 77


1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 78


1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 79


1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 80


1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 81


1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 82


1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 83


1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 84


1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 85


1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 86


1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR(base);
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) SAR_INTR(base);
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterrupt
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Trigger an interrupt with software.
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to set.
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 87


1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask)
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR_SET(base) = intrMask;
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterruptMask
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable which interrupts can trigger the CPU interrupt controller.
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts. Select one or more values from \ref cy_en_sar_intr_mask_t
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and "OR" them together.
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_MASK_NONE : Disable EOS, overflow, and firmware collision interrupts.
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_INTERRUPT_MASK
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask)
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR_MASK(base) = intrMask;
 279              		.loc 4 1649 0
 280 0008 024B     		ldr	r3, .L29
 281 000a C3F81802 		str	r0, [r3, #536]
 282              	.LVL17:
 283 000e 5DF804FB 		ldr	pc, [sp], #4
 284              	.L30:
 285 0012 00BF     		.align	2
 286              	.L29:
 287 0014 00001D41 		.word	1092419584
 288              	.LBE37:
 289              	.LBE36:
 290              		.cfi_endproc
 291              	.LFE222:
 292              		.size	DETECTOR_ADC_SetEosMask, .-DETECTOR_ADC_SetEosMask
 293              		.section	.text.DETECTOR_ADC_SetChanMask,"ax",%progbits
 294              		.align	2
 295              		.global	DETECTOR_ADC_SetChanMask
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 88


 296              		.thumb
 297              		.thumb_func
 298              		.type	DETECTOR_ADC_SetChanMask, %function
 299              	DETECTOR_ADC_SetChanMask:
 300              	.LFB223:
 343:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 344:Generated_Source\PSoC6/DETECTOR_ADC.c ****     Cy_SAR_SetInterruptMask(DETECTOR_ADC_SAR__HW, intrMaskReg);
 345:Generated_Source\PSoC6/DETECTOR_ADC.c **** }
 346:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 347:Generated_Source\PSoC6/DETECTOR_ADC.c **** /******************************************************************************
 348:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Function Name: DETECTOR_ADC_SetChanMask
 349:Generated_Source\PSoC6/DETECTOR_ADC.c **** ****************************************************************************//*
 350:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 351:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 352:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 353:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 354:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \param enableMask
 355:Generated_Source\PSoC6/DETECTOR_ADC.c **** *  Channel enable/disable mask.
 356:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 357:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \sideeffect
 358:Generated_Source\PSoC6/DETECTOR_ADC.c **** *  None.
 359:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 360:Generated_Source\PSoC6/DETECTOR_ADC.c **** *******************************************************************************/
 361:Generated_Source\PSoC6/DETECTOR_ADC.c **** void DETECTOR_ADC_SetChanMask(uint32_t enableMask)
 362:Generated_Source\PSoC6/DETECTOR_ADC.c **** {
 301              		.loc 1 362 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              	.LVL18:
 306 0000 10B5     		push	{r4, lr}
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 4, -8
 309              		.cfi_offset 14, -4
 363:Generated_Source\PSoC6/DETECTOR_ADC.c ****     uint32 chanCount = DETECTOR_ADC_allConfigs[DETECTOR_ADC_currentConfig].numChannels;
 310              		.loc 1 363 0
 311 0002 0B4B     		ldr	r3, .L34
 312 0004 1A68     		ldr	r2, [r3]
 313 0006 0B4B     		ldr	r3, .L34+4
 314 0008 03EB0213 		add	r3, r3, r2, lsl #4
 315 000c 5C68     		ldr	r4, [r3, #4]
 316              	.LVL19:
 364:Generated_Source\PSoC6/DETECTOR_ADC.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 317              		.loc 1 364 0
 318 000e 0123     		movs	r3, #1
 319 0010 03FA04F4 		lsl	r4, r3, r4
 320              	.LVL20:
 321 0014 013C     		subs	r4, r4, #1
 322 0016 0440     		ands	r4, r4, r0
 323              	.LVL21:
 324              	.LBB38:
 325              	.LBB39:
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 326              		.loc 4 1501 0
 327 0018 B4F5803F 		cmp	r4, #65536
 328 001c 04D3     		bcc	.L32
 329 001e 40F2DD51 		movw	r1, #1501
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 89


 330 0022 0548     		ldr	r0, .L34+8
 331 0024 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 332              	.LVL22:
 333              	.L32:
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 334              		.loc 4 1503 0
 335 0028 044B     		ldr	r3, .L34+12
 336 002a 1C62     		str	r4, [r3, #32]
 337              	.LVL23:
 338 002c 10BD     		pop	{r4, pc}
 339              	.LVL24:
 340              	.L35:
 341 002e 00BF     		.align	2
 342              	.L34:
 343 0030 00000000 		.word	.LANCHOR0
 344 0034 00000000 		.word	DETECTOR_ADC_allConfigs
 345 0038 00000000 		.word	.LC0
 346 003c 00001D41 		.word	1092419584
 347              	.LBE39:
 348              	.LBE38:
 349              		.cfi_endproc
 350              	.LFE223:
 351              		.size	DETECTOR_ADC_SetChanMask, .-DETECTOR_ADC_SetChanMask
 352              		.section	.text.DETECTOR_ADC_IsEndConversion,"ax",%progbits
 353              		.align	2
 354              		.global	DETECTOR_ADC_IsEndConversion
 355              		.thumb
 356              		.thumb_func
 357              		.type	DETECTOR_ADC_IsEndConversion, %function
 358              	DETECTOR_ADC_IsEndConversion:
 359              	.LFB224:
 365:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 366:Generated_Source\PSoC6/DETECTOR_ADC.c ****     Cy_SAR_SetChanMask(DETECTOR_ADC_SAR__HW, enableMask);
 367:Generated_Source\PSoC6/DETECTOR_ADC.c **** }
 368:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 369:Generated_Source\PSoC6/DETECTOR_ADC.c **** /*******************************************************************************
 370:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Function Name: DETECTOR_ADC_IsEndConversion
 371:Generated_Source\PSoC6/DETECTOR_ADC.c **** ****************************************************************************//**
 372:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 373:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \brief Immediately returns the status of the conversion or does not return
 374:Generated_Source\PSoC6/DETECTOR_ADC.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
 375:Generated_Source\PSoC6/DETECTOR_ADC.c **** * In blocking mode, there is a time out of about 10 seconds for a CPU speed of
 376:Generated_Source\PSoC6/DETECTOR_ADC.c **** * 100 Mhz.
 377:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 378:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \param retMode Check conversion return mode.
 379:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 380:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \return uint32_t: If a nonzero value is returned, the last conversion is complete.
 381:Generated_Source\PSoC6/DETECTOR_ADC.c **** * If the returned value is zero, the DETECTOR_ADC is still calculating the last result.
 382:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 383:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
 384:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 385:Generated_Source\PSoC6/DETECTOR_ADC.c **** *******************************************************************************/
 386:Generated_Source\PSoC6/DETECTOR_ADC.c **** uint32_t DETECTOR_ADC_IsEndConversion(cy_en_sar_return_mode_t retMode)
 387:Generated_Source\PSoC6/DETECTOR_ADC.c **** {
 360              		.loc 1 387 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 90


 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364              	.LVL25:
 365 0000 08B5     		push	{r3, lr}
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 3, -8
 368              		.cfi_offset 14, -4
 369              	.LVL26:
 388:Generated_Source\PSoC6/DETECTOR_ADC.c ****     uint32 endOfConversion = 0u;
 389:Generated_Source\PSoC6/DETECTOR_ADC.c ****     cy_en_sar_status_t result;
 390:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 391:Generated_Source\PSoC6/DETECTOR_ADC.c ****     result = Cy_SAR_IsEndConversion(DETECTOR_ADC_SAR__HW, retMode);
 370              		.loc 1 391 0
 371 0002 0146     		mov	r1, r0
 372 0004 0348     		ldr	r0, .L40
 373              	.LVL27:
 374 0006 FFF7FEFF 		bl	Cy_SAR_IsEndConversion
 375              	.LVL28:
 392:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 393:Generated_Source\PSoC6/DETECTOR_ADC.c ****     if (result == CY_SAR_SUCCESS)
 376              		.loc 1 393 0
 377 000a 08B1     		cbz	r0, .L38
 388:Generated_Source\PSoC6/DETECTOR_ADC.c ****     uint32 endOfConversion = 0u;
 378              		.loc 1 388 0
 379 000c 0020     		movs	r0, #0
 380              	.LVL29:
 381 000e 08BD     		pop	{r3, pc}
 382              	.LVL30:
 383              	.L38:
 394:Generated_Source\PSoC6/DETECTOR_ADC.c ****     {
 395:Generated_Source\PSoC6/DETECTOR_ADC.c ****         endOfConversion = 1u;
 384              		.loc 1 395 0
 385 0010 0120     		movs	r0, #1
 386              	.LVL31:
 396:Generated_Source\PSoC6/DETECTOR_ADC.c ****     }
 397:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 398:Generated_Source\PSoC6/DETECTOR_ADC.c ****     return endOfConversion;
 399:Generated_Source\PSoC6/DETECTOR_ADC.c **** }
 387              		.loc 1 399 0
 388 0012 08BD     		pop	{r3, pc}
 389              	.L41:
 390              		.align	2
 391              	.L40:
 392 0014 00001D41 		.word	1092419584
 393              		.cfi_endproc
 394              	.LFE224:
 395              		.size	DETECTOR_ADC_IsEndConversion, .-DETECTOR_ADC_IsEndConversion
 396              		.section	.text.DETECTOR_ADC_Init,"ax",%progbits
 397              		.align	2
 398              		.global	DETECTOR_ADC_Init
 399              		.thumb
 400              		.thumb_func
 401              		.type	DETECTOR_ADC_Init, %function
 402              	DETECTOR_ADC_Init:
 403              	.LFB225:
 400:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 401:Generated_Source\PSoC6/DETECTOR_ADC.c **** /* ****************************************************************************
 402:Generated_Source\PSoC6/DETECTOR_ADC.c **** * Function Name: DETECTOR_ADC_Init
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 91


 403:Generated_Source\PSoC6/DETECTOR_ADC.c **** ****************************************************************************//*
 404:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 405:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \brief Initialize the component according to parameters defined in the
 406:Generated_Source\PSoC6/DETECTOR_ADC.c **** * customizer.
 407:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 408:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \param None
 409:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 410:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \return None
 411:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 412:Generated_Source\PSoC6/DETECTOR_ADC.c **** * \sideeffect None
 413:Generated_Source\PSoC6/DETECTOR_ADC.c **** *
 414:Generated_Source\PSoC6/DETECTOR_ADC.c **** *******************************************************************************/
 415:Generated_Source\PSoC6/DETECTOR_ADC.c **** void DETECTOR_ADC_Init(void)
 416:Generated_Source\PSoC6/DETECTOR_ADC.c **** {
 404              		.loc 1 416 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408 0000 08B5     		push	{r3, lr}
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 3, -8
 411              		.cfi_offset 14, -4
 412              	.LVL32:
 417:Generated_Source\PSoC6/DETECTOR_ADC.c ****     uint32_t configNum = 0u;
 418:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 419:Generated_Source\PSoC6/DETECTOR_ADC.c ****     if(0u == DETECTOR_ADC_initVar)
 413              		.loc 1 419 0
 414 0002 084B     		ldr	r3, .L45
 415 0004 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 416 0006 63B9     		cbnz	r3, .L42
 420:Generated_Source\PSoC6/DETECTOR_ADC.c ****     {
 421:Generated_Source\PSoC6/DETECTOR_ADC.c ****         /* Interrupt core assignment will be up to the user. Initialize but do not enable the inter
 422:Generated_Source\PSoC6/DETECTOR_ADC.c ****         #ifdef DETECTOR_ADC_IRQ__INTC_CORTEXM4_ASSIGNED
 423:Generated_Source\PSoC6/DETECTOR_ADC.c ****         #if (CY_CPU_CORTEX_M4)
 424:Generated_Source\PSoC6/DETECTOR_ADC.c ****             (void)Cy_SysInt_Init(&DETECTOR_ADC_IRQ_cfg, &DETECTOR_ADC_ISR);
 417              		.loc 1 424 0
 418 0008 0749     		ldr	r1, .L45+4
 419 000a 0848     		ldr	r0, .L45+8
 420 000c FFF7FEFF 		bl	Cy_SysInt_Init
 421              	.LVL33:
 425:Generated_Source\PSoC6/DETECTOR_ADC.c ****         #endif
 426:Generated_Source\PSoC6/DETECTOR_ADC.c ****         #endif
 427:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 428:Generated_Source\PSoC6/DETECTOR_ADC.c ****         #ifdef DETECTOR_ADC_IRQ__INTC_CORTEXM0P_ASSIGNED
 429:Generated_Source\PSoC6/DETECTOR_ADC.c ****         #if (CY_CPU_CORTEX_M0P)
 430:Generated_Source\PSoC6/DETECTOR_ADC.c ****             (void)Cy_SysInt_Init(&DETECTOR_ADC_IRQ_cfg, &DETECTOR_ADC_ISR);
 431:Generated_Source\PSoC6/DETECTOR_ADC.c ****         #endif
 432:Generated_Source\PSoC6/DETECTOR_ADC.c ****         #endif
 433:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 434:Generated_Source\PSoC6/DETECTOR_ADC.c ****         /* Initialize configuration zero if SelectConfig has not been called */
 435:Generated_Source\PSoC6/DETECTOR_ADC.c ****         if(0u == DETECTOR_ADC_selected)
 422              		.loc 1 435 0
 423 0010 044B     		ldr	r3, .L45
 424 0012 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 425 0014 2BB9     		cbnz	r3, .L42
 436:Generated_Source\PSoC6/DETECTOR_ADC.c ****         {
 437:Generated_Source\PSoC6/DETECTOR_ADC.c ****             DETECTOR_ADC_selected = 1u;
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 92


 426              		.loc 1 437 0
 427 0016 0122     		movs	r2, #1
 428 0018 024B     		ldr	r3, .L45
 429 001a 5A71     		strb	r2, [r3, #5]
 438:Generated_Source\PSoC6/DETECTOR_ADC.c ****             configNum = 0uL;
 439:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 440:Generated_Source\PSoC6/DETECTOR_ADC.c ****             /* Change Vref selection if is was routed by Creator. Break. */
 441:Generated_Source\PSoC6/DETECTOR_ADC.c ****             #if (DETECTOR_ADC_VREF_ROUTED)
 442:Generated_Source\PSoC6/DETECTOR_ADC.c ****                 DETECTOR_ADC_vrefAMux_DisconnectAll();
 443:Generated_Source\PSoC6/DETECTOR_ADC.c ****             #endif
 444:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 445:Generated_Source\PSoC6/DETECTOR_ADC.c ****             DETECTOR_ADC_InitConfig(&DETECTOR_ADC_allConfigs[configNum]);
 430              		.loc 1 445 0
 431 001c 0448     		ldr	r0, .L45+12
 432 001e FFF7FEFF 		bl	DETECTOR_ADC_InitConfig
 433              	.LVL34:
 434              	.L42:
 435 0022 08BD     		pop	{r3, pc}
 436              	.L46:
 437              		.align	2
 438              	.L45:
 439 0024 00000000 		.word	.LANCHOR0
 440 0028 00000000 		.word	DETECTOR_ADC_ISR
 441 002c 00000000 		.word	DETECTOR_ADC_IRQ_cfg
 442 0030 00000000 		.word	DETECTOR_ADC_allConfigs
 443              		.cfi_endproc
 444              	.LFE225:
 445              		.size	DETECTOR_ADC_Init, .-DETECTOR_ADC_Init
 446              		.section	.text.DETECTOR_ADC_Start,"ax",%progbits
 447              		.align	2
 448              		.global	DETECTOR_ADC_Start
 449              		.thumb
 450              		.thumb_func
 451              		.type	DETECTOR_ADC_Start, %function
 452              	DETECTOR_ADC_Start:
 453              	.LFB214:
  66:Generated_Source\PSoC6/DETECTOR_ADC.c ****     if (DETECTOR_ADC_INIT_VAR_INIT_FLAG != (DETECTOR_ADC_INIT_VAR_INIT_FLAG & DETECTOR_ADC_initVar)
 454              		.loc 1 66 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458 0000 08B5     		push	{r3, lr}
 459              		.cfi_def_cfa_offset 8
 460              		.cfi_offset 3, -8
 461              		.cfi_offset 14, -4
  67:Generated_Source\PSoC6/DETECTOR_ADC.c ****     {
 462              		.loc 1 67 0
 463 0002 084B     		ldr	r3, .L50
 464 0004 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 465 0006 13F0010F 		tst	r3, #1
 466 000a 06D1     		bne	.L48
  69:Generated_Source\PSoC6/DETECTOR_ADC.c ****         DETECTOR_ADC_initVar |= DETECTOR_ADC_INIT_VAR_INIT_FLAG;
 467              		.loc 1 69 0
 468 000c FFF7FEFF 		bl	DETECTOR_ADC_Init
 469              	.LVL35:
  70:Generated_Source\PSoC6/DETECTOR_ADC.c ****     }
 470              		.loc 1 70 0
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 93


 471 0010 044A     		ldr	r2, .L50
 472 0012 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 473 0014 43F00103 		orr	r3, r3, #1
 474 0018 1371     		strb	r3, [r2, #4]
 475              	.L48:
 476              	.LBB40:
 477              	.LBB41:
 478              		.file 5 "Generated_Source\\PSoC6\\DETECTOR_ADC.h"
   1:Generated_Source\PSoC6/DETECTOR_ADC.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6/DETECTOR_ADC.h **** * \file     DETECTOR_ADC.h
   3:Generated_Source\PSoC6/DETECTOR_ADC.h **** * \version  3.10
   4:Generated_Source\PSoC6/DETECTOR_ADC.h **** *
   5:Generated_Source\PSoC6/DETECTOR_ADC.h **** * \brief
   6:Generated_Source\PSoC6/DETECTOR_ADC.h **** * Provides the source code to the API for the DETECTOR_ADC Component.
   7:Generated_Source\PSoC6/DETECTOR_ADC.h **** *
   8:Generated_Source\PSoC6/DETECTOR_ADC.h **** ********************************************************************************
   9:Generated_Source\PSoC6/DETECTOR_ADC.h **** * \copyright
  10:Generated_Source\PSoC6/DETECTOR_ADC.h **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/DETECTOR_ADC.h **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/DETECTOR_ADC.h **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/DETECTOR_ADC.h **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/DETECTOR_ADC.h **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/DETECTOR_ADC.h **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/DETECTOR_ADC.h **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/DETECTOR_ADC.h **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/DETECTOR_ADC.h **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/DETECTOR_ADC.h **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/DETECTOR_ADC.h **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/DETECTOR_ADC.h **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/DETECTOR_ADC.h **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/DETECTOR_ADC.h **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/DETECTOR_ADC.h **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/DETECTOR_ADC.h **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/DETECTOR_ADC.h **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/DETECTOR_ADC.h **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/DETECTOR_ADC.h **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/DETECTOR_ADC.h **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/DETECTOR_ADC.h **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/DETECTOR_ADC.h **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/DETECTOR_ADC.h **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/DETECTOR_ADC.h **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/DETECTOR_ADC.h **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/DETECTOR_ADC.h **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/DETECTOR_ADC.h **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/DETECTOR_ADC.h **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/DETECTOR_ADC.h **** *******************************************************************************/
  39:Generated_Source\PSoC6/DETECTOR_ADC.h **** #if !defined(CY_DETECTOR_ADC_H)
  40:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define CY_DETECTOR_ADC_H
  41:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
  42:Generated_Source\PSoC6/DETECTOR_ADC.h **** #include <cy_device_headers.h>
  43:Generated_Source\PSoC6/DETECTOR_ADC.h **** #include <sar/cy_sar.h>
  44:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
  45:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_VREF_ROUTED                  ((0) == 1u)
  46:Generated_Source\PSoC6/DETECTOR_ADC.h **** #if (DETECTOR_ADC_VREF_ROUTED)
  47:Generated_Source\PSoC6/DETECTOR_ADC.h **** #include "DETECTOR_ADC_vrefAMux.h"
  48:Generated_Source\PSoC6/DETECTOR_ADC.h **** #endif
  49:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 94


  50:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CLOCK_INTERNAL               ((0) == 1u)
  51:Generated_Source\PSoC6/DETECTOR_ADC.h **** #if (DETECTOR_ADC_CLOCK_INTERNAL)
  52:Generated_Source\PSoC6/DETECTOR_ADC.h **** #include "DETECTOR_ADC_intSarClock.h"
  53:Generated_Source\PSoC6/DETECTOR_ADC.h **** #endif /* DETECTOR_ADC_CLOCK_INTERNAL */
  54:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
  55:Generated_Source\PSoC6/DETECTOR_ADC.h **** /**
  56:Generated_Source\PSoC6/DETECTOR_ADC.h **** * \addtogroup group_structures
  57:Generated_Source\PSoC6/DETECTOR_ADC.h **** *
  58:Generated_Source\PSoC6/DETECTOR_ADC.h **** */
  59:Generated_Source\PSoC6/DETECTOR_ADC.h **** typedef struct
  60:Generated_Source\PSoC6/DETECTOR_ADC.h **** {
  61:Generated_Source\PSoC6/DETECTOR_ADC.h ****     uint32_t channelBase;                   /* Start of channels for the configuration */
  62:Generated_Source\PSoC6/DETECTOR_ADC.h ****     uint32_t numChannels;                   /* Number of channels in the configuration */
  63:Generated_Source\PSoC6/DETECTOR_ADC.h ****     const cy_stc_sar_config_t *hwConfigStc; /* PDL structure */
  64:Generated_Source\PSoC6/DETECTOR_ADC.h ****     uint32_t miscConfig;                    /* Miscellaneous configuration bits broken down as foll
  65:Generated_Source\PSoC6/DETECTOR_ADC.h ****                                             [0] - Freerunning: Set if the sample mode is freerunnin
  66:Generated_Source\PSoC6/DETECTOR_ADC.h ****                                             [2] - Mux Switch 0: Set when VSSA is used for the neg i
  67:Generated_Source\PSoC6/DETECTOR_ADC.h ****                                             */
  68:Generated_Source\PSoC6/DETECTOR_ADC.h **** #if (DETECTOR_ADC_CLOCK_INTERNAL)
  69:Generated_Source\PSoC6/DETECTOR_ADC.h ****     uint32_t clkDivider;                    /* Clock divider */
  70:Generated_Source\PSoC6/DETECTOR_ADC.h **** #endif /* DETECTOR_ADC_CLOCK_INTERNAL */
  71:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
  72:Generated_Source\PSoC6/DETECTOR_ADC.h **** } DETECTOR_ADC_CONFIG_STRUCT;
  73:Generated_Source\PSoC6/DETECTOR_ADC.h **** /** @} structures */
  74:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
  75:Generated_Source\PSoC6/DETECTOR_ADC.h **** /*******************************************************************************
  76:Generated_Source\PSoC6/DETECTOR_ADC.h **** * Function Prototypes
  77:Generated_Source\PSoC6/DETECTOR_ADC.h **** *******************************************************************************/
  78:Generated_Source\PSoC6/DETECTOR_ADC.h **** void DETECTOR_ADC_SelectConfig(uint32_t config, uint32_t restart);
  79:Generated_Source\PSoC6/DETECTOR_ADC.h **** void DETECTOR_ADC_InitConfig(const DETECTOR_ADC_CONFIG_STRUCT *config);
  80:Generated_Source\PSoC6/DETECTOR_ADC.h **** void DETECTOR_ADC_Init(void);
  81:Generated_Source\PSoC6/DETECTOR_ADC.h **** __STATIC_INLINE void DETECTOR_ADC_Enable(void);
  82:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
  83:Generated_Source\PSoC6/DETECTOR_ADC.h **** /**
  84:Generated_Source\PSoC6/DETECTOR_ADC.h **** * \addtogroup group_general
  85:Generated_Source\PSoC6/DETECTOR_ADC.h **** * @{
  86:Generated_Source\PSoC6/DETECTOR_ADC.h **** */
  87:Generated_Source\PSoC6/DETECTOR_ADC.h **** void DETECTOR_ADC_Start(void);
  88:Generated_Source\PSoC6/DETECTOR_ADC.h **** void DETECTOR_ADC_StartEx(cy_israddress userIsr);
  89:Generated_Source\PSoC6/DETECTOR_ADC.h **** __STATIC_INLINE void DETECTOR_ADC_Stop(void);
  90:Generated_Source\PSoC6/DETECTOR_ADC.h **** void DETECTOR_ADC_StartConvert(void);
  91:Generated_Source\PSoC6/DETECTOR_ADC.h **** __STATIC_INLINE void DETECTOR_ADC_StopConvert(void);
  92:Generated_Source\PSoC6/DETECTOR_ADC.h **** void DETECTOR_ADC_SetConvertMode(cy_en_sar_start_convert_sel_t mode);
  93:Generated_Source\PSoC6/DETECTOR_ADC.h **** void DETECTOR_ADC_SetEosMask(uint32_t mask);
  94:Generated_Source\PSoC6/DETECTOR_ADC.h **** uint32_t DETECTOR_ADC_IsEndConversion(cy_en_sar_return_mode_t retMode);
  95:Generated_Source\PSoC6/DETECTOR_ADC.h **** __STATIC_INLINE int16_t DETECTOR_ADC_GetResult16(uint32_t chan);
  96:Generated_Source\PSoC6/DETECTOR_ADC.h **** __STATIC_INLINE int32_t DETECTOR_ADC_GetResult32(uint32_t chan);
  97:Generated_Source\PSoC6/DETECTOR_ADC.h **** __STATIC_INLINE void DETECTOR_ADC_SetLowLimit(uint32_t lowLimit);
  98:Generated_Source\PSoC6/DETECTOR_ADC.h **** __STATIC_INLINE void DETECTOR_ADC_SetHighLimit(uint32_t highLimit);
  99:Generated_Source\PSoC6/DETECTOR_ADC.h **** __STATIC_INLINE void DETECTOR_ADC_SetLimitMask(uint32_t limitMask);
 100:Generated_Source\PSoC6/DETECTOR_ADC.h **** __STATIC_INLINE void DETECTOR_ADC_SetSatMask(uint32_t satMask);
 101:Generated_Source\PSoC6/DETECTOR_ADC.h **** __STATIC_INLINE cy_en_sar_status_t DETECTOR_ADC_SetOffset(uint32_t chan, int16_t offset);
 102:Generated_Source\PSoC6/DETECTOR_ADC.h **** __STATIC_INLINE cy_en_sar_status_t DETECTOR_ADC_SetGain(uint32_t chan, int32_t adcGain);
 103:Generated_Source\PSoC6/DETECTOR_ADC.h **** __STATIC_INLINE float32_t DETECTOR_ADC_CountsTo_Volts(uint32_t chan, int16_t adcCounts);
 104:Generated_Source\PSoC6/DETECTOR_ADC.h **** __STATIC_INLINE int16_t DETECTOR_ADC_CountsTo_mVolts(uint32_t chan, int16_t adcCounts);
 105:Generated_Source\PSoC6/DETECTOR_ADC.h **** __STATIC_INLINE int32_t DETECTOR_ADC_CountsTo_uVolts(uint32_t chan, int16_t adcCounts);
 106:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 95


 107:Generated_Source\PSoC6/DETECTOR_ADC.h **** /** @} general */
 108:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 109:Generated_Source\PSoC6/DETECTOR_ADC.h **** void DETECTOR_ADC_SetChanMask(uint32_t enableMask);
 110:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 111:Generated_Source\PSoC6/DETECTOR_ADC.h **** /**
 112:Generated_Source\PSoC6/DETECTOR_ADC.h **** * \addtogroup group_power
 113:Generated_Source\PSoC6/DETECTOR_ADC.h **** * @{
 114:Generated_Source\PSoC6/DETECTOR_ADC.h **** */
 115:Generated_Source\PSoC6/DETECTOR_ADC.h **** __STATIC_INLINE void DETECTOR_ADC_Sleep(void);
 116:Generated_Source\PSoC6/DETECTOR_ADC.h **** __STATIC_INLINE void DETECTOR_ADC_Wakeup(void);
 117:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 118:Generated_Source\PSoC6/DETECTOR_ADC.h **** /** @} power */
 119:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 120:Generated_Source\PSoC6/DETECTOR_ADC.h **** /**
 121:Generated_Source\PSoC6/DETECTOR_ADC.h **** * \addtogroup group_interrupt
 122:Generated_Source\PSoC6/DETECTOR_ADC.h **** * @{
 123:Generated_Source\PSoC6/DETECTOR_ADC.h **** */
 124:Generated_Source\PSoC6/DETECTOR_ADC.h **** void DETECTOR_ADC_ISR(void);
 125:Generated_Source\PSoC6/DETECTOR_ADC.h **** void DETECTOR_ADC_IRQ_Enable(void);
 126:Generated_Source\PSoC6/DETECTOR_ADC.h **** void DETECTOR_ADC_IRQ_Disable(void);
 127:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 128:Generated_Source\PSoC6/DETECTOR_ADC.h **** /** @} interrupt */
 129:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 130:Generated_Source\PSoC6/DETECTOR_ADC.h **** /*******************************************************************************
 131:Generated_Source\PSoC6/DETECTOR_ADC.h ****                                   Parameters
 132:Generated_Source\PSoC6/DETECTOR_ADC.h **** The parameters that are set in the customizer are redefined as constants here.
 133:Generated_Source\PSoC6/DETECTOR_ADC.h **** *******************************************************************************/
 134:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 135:Generated_Source\PSoC6/DETECTOR_ADC.h **** /*  Sample Mode setting constants */
 136:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_TOTAL_CONFIGS                (1ul)
 137:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 138:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 139:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* Begin configuration 0 customizer defines                                   */
 140:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 141:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 142:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_SAMPLE_RATE             (2000)
 143:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_CHANNEL_BASE            (0u)
 144:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_CHANNEL_COUNT           (3u)
 145:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_VREF_SEL_MASK           (0x70u)
 146:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_NOMINAL_CLOCK_FREQ      (10000000u)
 147:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_CHANNEL_EN              (0x7u)
 148:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 149:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* Sample Control Register */
 150:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_SINGLE_ENDED_FORMAT     (0uL)
 151:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_DIFFERENTIAL_FORMAT     (1uL)
 152:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_SAMPLES_AVERAGED        (1uL)
 153:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_RANGE_INTR_MASK         (0x0u)
 154:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_SATURATE_INTR_MASK      (0x0u)
 155:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_VNEG_INPUT_SEL          (7)
 156:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_SINGLE_PRESENT          (1)
 157:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_VREF_MV_VALUE           (3300)
 158:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_APERTURE_TIME0          (3uL)
 159:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_APERTURE_TIME1          (2uL)
 160:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_APERTURE_TIME2          (2uL)
 161:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_APERTURE_TIME3          (2uL)
 162:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_FREERUNNING             (0u)
 163:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_AVGERAGING_MODE         (1uL)
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 96


 164:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_LOW_LIMIT               (512u)
 165:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_HIGH_LIMIT              (3584u)
 166:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_RANGE_COND              (0uL)
 167:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_USE_SOC                 (1uL)
 168:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_VREF_PWR                (2uL)
 169:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_COMP_PWR                (3uL)
 170:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_COMP_DLY                (3uL)
 171:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 172:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* Clock parameters*/
 173:Generated_Source\PSoC6/DETECTOR_ADC.h **** #if (DETECTOR_ADC_CLOCK_INTERNAL)
 174:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG0_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (DETECTOR_ADC_CFG0_NO
 175:Generated_Source\PSoC6/DETECTOR_ADC.h **** #endif /* (DETECTOR_ADC_CLOCK_INTERNAL) */
 176:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 177:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 178:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* End configuration 0 customizer defines                                     */
 179:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 180:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 181:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 182:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* Begin configuration 1 customizer defines                                   */
 183:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 184:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 185:Generated_Source\PSoC6/DETECTOR_ADC.h **** #if(DETECTOR_ADC_TOTAL_CONFIGS > 1)
 186:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_SAMPLE_RATE             ()
 187:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_CHANNEL_BASE            (u)
 188:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_CHANNEL_COUNT           (u)
 189:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_VREF_SEL_MASK           (u)
 190:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_NOMINAL_CLOCK_FREQ      (u)
 191:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_CHANNEL_EN              (u)
 192:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 193:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Sample Control Register */
 194:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_SINGLE_ENDED_FORMAT     (uL)
 195:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_DIFFERENTIAL_FORMAT     (uL)
 196:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_SAMPLES_AVERAGED        (uL)
 197:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_RANGE_INTR_MASK         (u)
 198:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_SATURATE_INTR_MASK      (u)
 199:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_VNEG_INPUT_SEL          ()
 200:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_SINGLE_PRESENT          ()
 201:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_VREF_MV_VALUE           ()
 202:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_APERTURE_TIME0          (uL)
 203:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_APERTURE_TIME1          (uL)
 204:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_APERTURE_TIME2          (uL)
 205:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_APERTURE_TIME3          (uL)
 206:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_FREERUNNING             (u)
 207:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_AVGERAGING_MODE         (uL)
 208:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_LOW_LIMIT               (u)
 209:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_HIGH_LIMIT              (u)
 210:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_RANGE_COND              (uL)
 211:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_USE_SOC                 (1uL)
 212:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_VREF_PWR                (uL)
 213:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_COMP_PWR                (uL)
 214:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_COMP_DLY                (uL)
 215:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 216:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Clock parameters*/
 217:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #if (DETECTOR_ADC_CLOCK_INTERNAL)
 218:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG1_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (DETECTOR_ADC_CFG
 219:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #endif /* (DETECTOR_ADC_CLOCK_INTERNAL) */
 220:Generated_Source\PSoC6/DETECTOR_ADC.h **** #endif /* #if(DETECTOR_ADC_TOTAL_CONFIGS > 1) */
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 97


 221:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 222:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 223:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* End configuration 1 customizer defines                                     */
 224:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 225:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 226:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 227:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* Begin configuration 2 customizer defines                                         */
 228:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 229:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 230:Generated_Source\PSoC6/DETECTOR_ADC.h **** #if(DETECTOR_ADC_TOTAL_CONFIGS > 2)
 231:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_SAMPLE_RATE             ()
 232:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_CHANNEL_BASE            (u)
 233:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_CHANNEL_COUNT           (u)
 234:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_VREF_SEL_MASK           (u)
 235:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_NOMINAL_CLOCK_FREQ      (u)
 236:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_CHANNEL_EN              (u)
 237:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 238:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Sample Control Register */
 239:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_SINGLE_ENDED_FORMAT     (uL)
 240:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_DIFFERENTIAL_FORMAT     (uL)
 241:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_SAMPLES_AVERAGED        (uL)
 242:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_RANGE_INTR_MASK         (u)
 243:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_SATURATE_INTR_MASK      (u)
 244:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_VNEG_INPUT_SEL          ()
 245:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_SINGLE_PRESENT          ()
 246:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_VREF_MV_VALUE           ()
 247:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_APERTURE_TIME0          (uL)
 248:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_APERTURE_TIME1          (uL)
 249:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_APERTURE_TIME2          (uL)
 250:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_APERTURE_TIME3          (uL)
 251:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_FREERUNNING             (u)
 252:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_AVGERAGING_MODE         (uL)
 253:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_LOW_LIMIT               (u)
 254:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_HIGH_LIMIT              (u)
 255:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_RANGE_COND              (uL)
 256:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_USE_SOC                 (1uL)
 257:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_VREF_PWR                (uL)
 258:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_COMP_PWR                (uL)
 259:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_COMP_DLY                (uL)
 260:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 261:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Clock parameters*/
 262:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #if (DETECTOR_ADC_CLOCK_INTERNAL)
 263:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG2_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (DETECTOR_ADC_CFG
 264:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #endif /* (DETECTOR_ADC_CLOCK_INTERNAL) */
 265:Generated_Source\PSoC6/DETECTOR_ADC.h **** #endif /* (DETECTOR_ADC_TOTAL_CONFIGS > 2) */
 266:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 267:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 268:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 269:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* End configuration 2 customizer defines                                     */
 270:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 271:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 272:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 273:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* Begin configuration 3 customizer defines                                   */
 274:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 275:Generated_Source\PSoC6/DETECTOR_ADC.h **** #if(DETECTOR_ADC_TOTAL_CONFIGS > 3)
 276:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_SAMPLE_RATE             ()
 277:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_CHANNEL_BASE            (u)
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 98


 278:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_CHANNEL_COUNT           (u)
 279:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_VREF_SEL_MASK           (u)
 280:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_NOMINAL_CLOCK_FREQ      (u)
 281:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_CHANNEL_EN              (u)
 282:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 283:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Sample Control Register */
 284:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_SINGLE_ENDED_FORMAT     (uL)
 285:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_DIFFERENTIAL_FORMAT     (uL)
 286:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_SAMPLES_AVERAGED        (uL)
 287:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_RANGE_INTR_MASK         (u)
 288:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_SATURATE_INTR_MASK      (u)
 289:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_VNEG_INPUT_SEL          ()
 290:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_SINGLE_PRESENT          ()
 291:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_VREF_MV_VALUE           ()
 292:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_APERTURE_TIME0          (uL)
 293:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_APERTURE_TIME1          (uL)
 294:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_APERTURE_TIME2          (uL)
 295:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_APERTURE_TIME3          (uL)
 296:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_FREERUNNING             (u)
 297:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_AVGERAGING_MODE         (uL)
 298:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_LOW_LIMIT               (u)
 299:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_HIGH_LIMIT              (u)
 300:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_RANGE_COND              (uL)
 301:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_USE_SOC                 (1uL)
 302:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_VREF_PWR                (uL)
 303:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_COMP_PWR                (uL)
 304:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_COMP_DLY                (uL)
 305:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 306:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Clock parameters*/
 307:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #if (DETECTOR_ADC_CLOCK_INTERNAL)
 308:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG3_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (DETECTOR_ADC_CFG
 309:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #endif /* (DETECTOR_ADC_CLOCK_INTERNAL) */
 310:Generated_Source\PSoC6/DETECTOR_ADC.h **** #endif /* (DETECTOR_ADC_TOTAL_CONFIGS > 3) */
 311:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 312:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 313:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* End configuration 3 customizer defines                                     */
 314:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 315:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 316:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_DEFAULT_SAMPLE_MODE_SEL      (0u)
 317:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_FREERUNNING                  (1u)
 318:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_HARDWARESOC                  (1u)
 319:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_NEG_SEL_VSSA_KELVIN          (0x0uL)
 320:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_NEG_SEL_VREF                 (0x7uL)
 321:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_PWR_CTRL_VREF_NORMAL_PWR     (0x0uL)
 322:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 323:Generated_Source\PSoC6/DETECTOR_ADC.h **** /** DETECTOR_ADC_TOTAL_CHANNELS_NUM
 324:Generated_Source\PSoC6/DETECTOR_ADC.h **** * This constant represents the number of input channels available for scanning.
 325:Generated_Source\PSoC6/DETECTOR_ADC.h **** */
 326:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_TOTAL_CHANNELS_NUM           (3u)
 327:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 328:Generated_Source\PSoC6/DETECTOR_ADC.h **** /*******************************************************************************
 329:Generated_Source\PSoC6/DETECTOR_ADC.h **** *    Variables with External Linkage
 330:Generated_Source\PSoC6/DETECTOR_ADC.h **** *******************************************************************************/
 331:Generated_Source\PSoC6/DETECTOR_ADC.h **** /**
 332:Generated_Source\PSoC6/DETECTOR_ADC.h **** * \addtogroup group_globals
 333:Generated_Source\PSoC6/DETECTOR_ADC.h **** * Globals are noted in the descriptions of the functions that use globals.
 334:Generated_Source\PSoC6/DETECTOR_ADC.h **** * They are marked with (R), (W), or (RW) noting whether the variable is read,
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 99


 335:Generated_Source\PSoC6/DETECTOR_ADC.h **** * write, or read/write.
 336:Generated_Source\PSoC6/DETECTOR_ADC.h **** * @{
 337:Generated_Source\PSoC6/DETECTOR_ADC.h **** */
 338:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 339:Generated_Source\PSoC6/DETECTOR_ADC.h **** /** DETECTOR_ADC_initVar
 340:Generated_Source\PSoC6/DETECTOR_ADC.h **** * The DETECTOR_ADC_initVar variable is used to indicate
 341:Generated_Source\PSoC6/DETECTOR_ADC.h **** * initial configuration of this component. The variable is initialized to zero and
 342:Generated_Source\PSoC6/DETECTOR_ADC.h **** * set to 1 the first time DETECTOR_ADC_Start() is called. This allows for
 343:Generated_Source\PSoC6/DETECTOR_ADC.h **** * component initialization without reinitialization in all subsequent calls to the
 344:Generated_Source\PSoC6/DETECTOR_ADC.h **** * DETECTOR_ADC_Start() routine.
 345:Generated_Source\PSoC6/DETECTOR_ADC.h **** *
 346:Generated_Source\PSoC6/DETECTOR_ADC.h **** * If reinitialization of the component is required, then the DETECTOR_ADC_Init() function
 347:Generated_Source\PSoC6/DETECTOR_ADC.h **** * can be called before the DETECTOR_ADC_Start() or DETECTOR_ADC_Enable()
 348:Generated_Source\PSoC6/DETECTOR_ADC.h **** * functions.
 349:Generated_Source\PSoC6/DETECTOR_ADC.h **** */
 350:Generated_Source\PSoC6/DETECTOR_ADC.h **** extern uint8_t DETECTOR_ADC_initVar;
 351:Generated_Source\PSoC6/DETECTOR_ADC.h **** extern uint8_t DETECTOR_ADC_selected;
 352:Generated_Source\PSoC6/DETECTOR_ADC.h **** extern uint32_t DETECTOR_ADC_currentConfig;
 353:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 354:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_INIT_VAR_INIT_FLAG     (0x01u)
 355:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 356:Generated_Source\PSoC6/DETECTOR_ADC.h **** extern const DETECTOR_ADC_CONFIG_STRUCT DETECTOR_ADC_allConfigs[DETECTOR_ADC_TOTAL_CONFIGS];
 357:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 358:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* SysPm callback structure for deep sleep entry and exit.
 359:Generated_Source\PSoC6/DETECTOR_ADC.h ****  * Call the Cy_SysPm_RegisterCallback function with this
 360:Generated_Source\PSoC6/DETECTOR_ADC.h ****  * structure before calling Cy_SysPm_DeepSleep.
 361:Generated_Source\PSoC6/DETECTOR_ADC.h **** */
 362:Generated_Source\PSoC6/DETECTOR_ADC.h **** extern cy_stc_syspm_callback_t DETECTOR_ADC_DeepSleepCallbackStruct;
 363:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 364:Generated_Source\PSoC6/DETECTOR_ADC.h **** /** @} globals */
 365:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 366:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 367:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* *******************Global MUX_SWITCH0 Definitions ************************ */
 368:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 369:Generated_Source\PSoC6/DETECTOR_ADC.h **** #if(DETECTOR_ADC_CFG0_VNEG_INPUT_SEL == DETECTOR_ADC_NEG_SEL_VSSA_KELVIN)
 370:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Do not connect VSSA to VMINUS when one channel in differential mode used */
 371:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #if((DETECTOR_ADC_TOTAL_CHANNELS_NUM == 1u) && (DETECTOR_ADC_CFG0_SINGLE_PRESENT == 0u))
 372:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_MUX_SWITCH0_INIT      0u
 373:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #else    /* multiple channels or one single ended channel */
 374:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_MUX_SWITCH0_INIT      1u
 375:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #endif /* ((DETECTOR_ADC_TOTAL_CHANNELS_NUM == 1u) && (DETECTOR_ADC_CFG0_SINGLE_PRESENT == 0u))
 376:Generated_Source\PSoC6/DETECTOR_ADC.h **** #else
 377:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_MUX_SWITCH0_INIT          0u
 378:Generated_Source\PSoC6/DETECTOR_ADC.h **** #endif /* DETECTOR_ADC_CFG0_VNEG_INPUT_SEL == DETECTOR_ADC_NEG_SEL_VSSA_KELVIN */
 379:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 380:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 381:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* Begin configuration 0 calculated defines                                   */
 382:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 383:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_SAMPLE_TIME01_INIT \
 384:Generated_Source\PSoC6/DETECTOR_ADC.h ****         ((DETECTOR_ADC_CFG0_APERTURE_TIME0 \
 385:Generated_Source\PSoC6/DETECTOR_ADC.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 386:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | (DETECTOR_ADC_CFG0_APERTURE_TIME1 \
 387:Generated_Source\PSoC6/DETECTOR_ADC.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 388:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 389:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_SAMPLE_TIME23_INIT \
 390:Generated_Source\PSoC6/DETECTOR_ADC.h ****         ((DETECTOR_ADC_CFG0_APERTURE_TIME2 \
 391:Generated_Source\PSoC6/DETECTOR_ADC.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 100


 392:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | (DETECTOR_ADC_CFG0_APERTURE_TIME3 \
 393:Generated_Source\PSoC6/DETECTOR_ADC.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 394:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 395:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* Enable soc pin if used */
 396:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_DSI_TRIGGER_EN_INIT \
 397:Generated_Source\PSoC6/DETECTOR_ADC.h ****         (DETECTOR_ADC_CFG0_USE_SOC \
 398:Generated_Source\PSoC6/DETECTOR_ADC.h ****         << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 399:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 400:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* Set soc operation to edge or level based on sample mode */
 401:Generated_Source\PSoC6/DETECTOR_ADC.h **** #if(DETECTOR_ADC_CFG0_FREERUNNING == DETECTOR_ADC_FREERUNNING)
 402:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG0_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 403:Generated_Source\PSoC6/DETECTOR_ADC.h **** #else /* Edge trigger */
 404:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG0_DSI_TRIGGER_LEVEL_INIT    (0u)
 405:Generated_Source\PSoC6/DETECTOR_ADC.h **** #endif /* End DETECTOR_ADC_CFG0_FREERUNNING == DETECTOR_ADC_FREERUNNING */
 406:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 407:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* Set SE_NEG_INPUT */
 408:Generated_Source\PSoC6/DETECTOR_ADC.h **** #if(DETECTOR_ADC_CFG0_VNEG_INPUT_SEL == DETECTOR_ADC_NEG_SEL_VSSA_KELVIN)
 409:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG0_SE_NEG_INPUT_INIT \
 410:Generated_Source\PSoC6/DETECTOR_ADC.h ****             ((uint32)(DETECTOR_ADC_NEG_SEL_VSSA_KELVIN \
 411:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 412:Generated_Source\PSoC6/DETECTOR_ADC.h **** #elif(DETECTOR_ADC_CFG0_VNEG_INPUT_SEL == DETECTOR_ADC_NEG_SEL_VREF)
 413:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 414:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Do not connect VNEG to VREF when one channel in differential mode used */
 415:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Only needed for config 0 since 2+ configs == 2+ channels */
 416:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #if((DETECTOR_ADC_CFG0_CHANNEL_COUNT == 1u) && (DETECTOR_ADC_CFG0_SINGLE_PRESENT == 0u))
 417:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG0_SE_NEG_INPUT_INIT     0u
 418:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #else    /* multiple channels or one single channel */
 419:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG0_SE_NEG_INPUT_INIT     (DETECTOR_ADC_NEG_SEL_VREF \
 420:Generated_Source\PSoC6/DETECTOR_ADC.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 421:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #endif /* (DETECTOR_ADC_CFG0_CHANNEL_COUNT == 1u) && (DETECTOR_ADC_CFG0_CHANNELS_MODE != 0u) */
 422:Generated_Source\PSoC6/DETECTOR_ADC.h **** #elif (DETECTOR_ADC_CFG0_SINGLE_PRESENT != 0u)
 423:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG0_SE_NEG_INPUT_INIT         DETECTOR_ADC_CFG0_NEG_OTHER
 424:Generated_Source\PSoC6/DETECTOR_ADC.h **** #else
 425:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG0_SE_NEG_INPUT_INIT         0u
 426:Generated_Source\PSoC6/DETECTOR_ADC.h **** #endif /* DETECTOR_ADC_CFG0_VNEG_INPUT_SEL == DETECTOR_ADC_NEG_SEL_VSSA_KELVIN */
 427:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 428:Generated_Source\PSoC6/DETECTOR_ADC.h **** #if(DETECTOR_ADC_TOTAL_CHANNELS_NUM > 1u)
 429:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG0_NEG_OTHER                 (uint16)((uint16)DETECTOR_ADC_SARMUX__VNEG0
 430:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG0_SWITCH_CONF_INIT          0u
 431:Generated_Source\PSoC6/DETECTOR_ADC.h **** #else /* Disable SAR sequencer from enabling routing switches in single channel mode */
 432:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG0_SWITCH_CONF_INIT          SAR_CTRL_SWITCH_DISABLE_Msk
 433:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG0_NEG_OTHER                 0u
 434:Generated_Source\PSoC6/DETECTOR_ADC.h **** #endif /* DETECTOR_ADC_CFG0_CHANNEL_COUNT > 1u */
 435:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 436:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 437:Generated_Source\PSoC6/DETECTOR_ADC.h **** #if(DETECTOR_ADC_TOTAL_CHANNELS_NUM == 1u)
 438:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG0_HW_CTRL_NEGVREF_INIT      0u
 439:Generated_Source\PSoC6/DETECTOR_ADC.h **** #else
 440:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG0_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 441:Generated_Source\PSoC6/DETECTOR_ADC.h **** #endif /* DETECTOR_ADC_CFG0_CHANNEL_COUNT == 1u */
 442:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 443:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_POWER_INIT  (DETECTOR_ADC_PWR_CTRL_VREF_NORMAL_PWR)
 444:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 445:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* SAMPLE_CTRL initial values */
 446:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_SE_RESULT_FORMAT_INIT \
 447:Generated_Source\PSoC6/DETECTOR_ADC.h ****         (DETECTOR_ADC_CFG0_SINGLE_ENDED_FORMAT \
 448:Generated_Source\PSoC6/DETECTOR_ADC.h ****         << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 101


 449:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 450:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_DIFF_RESULT_FORMAT_INIT \
 451:Generated_Source\PSoC6/DETECTOR_ADC.h ****         (DETECTOR_ADC_CFG0_DIFFERENTIAL_FORMAT \
 452:Generated_Source\PSoC6/DETECTOR_ADC.h ****         << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 453:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 454:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_AVG_SAMPLES_NUM_INIT \
 455:Generated_Source\PSoC6/DETECTOR_ADC.h ****         (DETECTOR_ADC_CFG0_SAMPLES_AVERAGED \
 456:Generated_Source\PSoC6/DETECTOR_ADC.h ****         << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 457:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 458:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* Combination of Average Mode and Average Shift */
 459:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_AVG_MODE_INIT \
 460:Generated_Source\PSoC6/DETECTOR_ADC.h ****         (DETECTOR_ADC_CFG0_AVGERAGING_MODE \
 461:Generated_Source\PSoC6/DETECTOR_ADC.h ****         << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 462:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 463:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_TRIGGER_OUT_INIT      (0u)
 464:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_UAB_SCAN_MODE_INIT    (0u)
 465:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 466:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_VREF_POWER_INIT  \
 467:Generated_Source\PSoC6/DETECTOR_ADC.h ****         (DETECTOR_ADC_CFG0_VREF_PWR \
 468:Generated_Source\PSoC6/DETECTOR_ADC.h ****         << SAR_CTRL_PWR_CTRL_VREF_Pos)
 469:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 470:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_COMP_PWR_INIT  \
 471:Generated_Source\PSoC6/DETECTOR_ADC.h ****         (DETECTOR_ADC_CFG0_COMP_PWR \
 472:Generated_Source\PSoC6/DETECTOR_ADC.h ****         << SAR_CTRL_COMP_PWR_Pos)
 473:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 474:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_COMP_DLY_INIT  \
 475:Generated_Source\PSoC6/DETECTOR_ADC.h ****         (DETECTOR_ADC_CFG0_COMP_DLY \
 476:Generated_Source\PSoC6/DETECTOR_ADC.h ****         << SAR_CTRL_COMP_DLY_Pos)
 477:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 478:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_CTRL_INIT  \
 479:Generated_Source\PSoC6/DETECTOR_ADC.h ****         (DETECTOR_ADC_CFG0_VREF_POWER_INIT \
 480:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | DETECTOR_ADC_CFG0_VREF_SEL_MASK \
 481:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | DETECTOR_ADC_CFG0_SE_NEG_INPUT_INIT \
 482:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | DETECTOR_ADC_CFG0_HW_CTRL_NEGVREF_INIT \
 483:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | DETECTOR_ADC_CFG0_COMP_DLY_INIT \
 484:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | SAR_CTRL_REFBUF_EN_Msk \
 485:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | DETECTOR_ADC_CFG0_COMP_PWR_INIT \
 486:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 487:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | DETECTOR_ADC_CFG0_SWITCH_CONF_INIT )
 488:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 489:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_SAMPLE_CTRL_INIT \
 490:Generated_Source\PSoC6/DETECTOR_ADC.h ****         (DETECTOR_ADC_CFG0_SE_RESULT_FORMAT_INIT \
 491:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | DETECTOR_ADC_CFG0_DIFF_RESULT_FORMAT_INIT \
 492:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | DETECTOR_ADC_CFG0_AVG_SAMPLES_NUM_INIT \
 493:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | DETECTOR_ADC_CFG0_AVG_MODE_INIT \
 494:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | DETECTOR_ADC_CFG0_DSI_TRIGGER_LEVEL_INIT \
 495:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | DETECTOR_ADC_CFG0_DSI_TRIGGER_EN_INIT \
 496:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | DETECTOR_ADC_CFG0_UAB_SCAN_MODE_INIT \
 497:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 498:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | DETECTOR_ADC_CFG0_TRIGGER_OUT_INIT \
 499:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 500:Generated_Source\PSoC6/DETECTOR_ADC.h **** )
 501:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 502:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_RANGE_THRES_INIT \
 503:Generated_Source\PSoC6/DETECTOR_ADC.h ****         (DETECTOR_ADC_CFG0_LOW_LIMIT \
 504:Generated_Source\PSoC6/DETECTOR_ADC.h ****         | (uint32)((uint32)DETECTOR_ADC_CFG0_HIGH_LIMIT \
 505:Generated_Source\PSoC6/DETECTOR_ADC.h ****         << SAR_RANGE_THRES_RANGE_HIGH_Pos))
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 102


 506:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 507:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)DETECTOR_ADC_CFG0_R
 508:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 509:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* Misc Config
 510:Generated_Source\PSoC6/DETECTOR_ADC.h ****     [0] - Freerunning: Set if the sample mode is freerunning
 511:Generated_Source\PSoC6/DETECTOR_ADC.h **** */
 512:Generated_Source\PSoC6/DETECTOR_ADC.h **** #define DETECTOR_ADC_CFG0_MISC_CONFIG_INIT \
 513:Generated_Source\PSoC6/DETECTOR_ADC.h ****         (DETECTOR_ADC_CFG0_FREERUNNING)
 514:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 515:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 516:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* End configuration 0 calculated defines                                     */
 517:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 518:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 519:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 520:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* Begin configuration 1 calculated defines                                   */
 521:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 522:Generated_Source\PSoC6/DETECTOR_ADC.h **** #if(DETECTOR_ADC_TOTAL_CONFIGS > 1)
 523:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_SAMPLE_TIME01_INIT \
 524:Generated_Source\PSoC6/DETECTOR_ADC.h ****             ((DETECTOR_ADC_CFG1_APERTURE_TIME0 \
 525:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 526:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | (DETECTOR_ADC_CFG1_APERTURE_TIME1 \
 527:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 528:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 529:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_SAMPLE_TIME23_INIT \
 530:Generated_Source\PSoC6/DETECTOR_ADC.h ****             ((DETECTOR_ADC_CFG1_APERTURE_TIME2 \
 531:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 532:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | (DETECTOR_ADC_CFG1_APERTURE_TIME3 \
 533:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 534:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 535:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Enable soc pin if used */
 536:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_DSI_TRIGGER_EN_INIT \
 537:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG1_USE_SOC \
 538:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 539:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 540:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 541:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #if(DETECTOR_ADC_CFG1_FREERUNNING == DETECTOR_ADC_FREERUNNING)
 542:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG1_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 543:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #else /* Edge trigger */
 544:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG1_DSI_TRIGGER_LEVEL_INIT    (0u)
 545:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #endif /* End DETECTOR_ADC_CFG1_FREERUNNING == DETECTOR_ADC_FREERUNNING */
 546:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 547:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Set SE_NEG_INPUT */
 548:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #if(DETECTOR_ADC_CFG1_VNEG_INPUT_SEL == DETECTOR_ADC_NEG_SEL_VSSA_KELVIN)
 549:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG1_SE_NEG_INPUT_INIT \
 550:Generated_Source\PSoC6/DETECTOR_ADC.h ****             ((uint32)(DETECTOR_ADC_NEG_SEL_VSSA_KELVIN \
 551:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 552:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #elif(DETECTOR_ADC_CFG1_VNEG_INPUT_SEL == DETECTOR_ADC_NEG_SEL_VREF)
 553:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG1_SE_NEG_INPUT_INIT     (DETECTOR_ADC_NEG_SEL_VREF \
 554:Generated_Source\PSoC6/DETECTOR_ADC.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 555:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #elif (DETECTOR_ADC_CFG1_SINGLE_PRESENT != 0u)
 556:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG1_SE_NEG_INPUT_INIT         DETECTOR_ADC_CFG1_NEG_OTHER
 557:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #else
 558:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG1_SE_NEG_INPUT_INIT         0u
 559:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #endif /* DETECTOR_ADC_CFG1_VNEG_INPUT_SEL == DETECTOR_ADC_NEG_SEL_VSSA_KELVIN */
 560:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 561:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_NEG_OTHER                 (uint16)((uint16)DETECTOR_ADC_SARMUX__VNEG1
 562:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_SWITCH_CONF_INIT          0u
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 103


 563:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 564:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 565:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 566:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 567:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_POWER_INIT  (DETECTOR_ADC_PWR_CTRL_VREF_NORMAL_PWR)
 568:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 569:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* SAMPLE_CTRL initial values */
 570:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_SE_RESULT_FORMAT_INIT \
 571:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG1_SINGLE_ENDED_FORMAT \
 572:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 573:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 574:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_DIFF_RESULT_FORMAT_INIT \
 575:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG1_DIFFERENTIAL_FORMAT \
 576:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 577:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 578:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_AVG_SAMPLES_NUM_INIT \
 579:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG1_SAMPLES_AVERAGED \
 580:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 581:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 582:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Combination of Average Mode and Average Shift */
 583:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_AVG_MODE_INIT \
 584:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG1_AVGERAGING_MODE \
 585:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 586:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 587:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_TRIGGER_OUT_INIT      (0u)
 588:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_UAB_SCAN_MODE_INIT    (0u)
 589:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 590:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_VREF_POWER_INIT  \
 591:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG1_VREF_PWR \
 592:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 593:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 594:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_COMP_PWR_INIT  \
 595:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG1_COMP_PWR \
 596:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 597:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 598:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_COMP_DLY_INIT  \
 599:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG1_COMP_DLY \
 600:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 601:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 602:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_CTRL_INIT  \
 603:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG1_VREF_POWER_INIT \
 604:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG1_VREF_SEL_MASK \
 605:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG1_SE_NEG_INPUT_INIT \
 606:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG1_HW_CTRL_NEGVREF_INIT \
 607:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG1_COMP_DLY_INIT \
 608:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 609:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG1_COMP_PWR_INIT \
 610:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 611:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG1_SWITCH_CONF_INIT )
 612:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 613:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_SAMPLE_CTRL_INIT \
 614:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG1_SE_RESULT_FORMAT_INIT \
 615:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG1_DIFF_RESULT_FORMAT_INIT \
 616:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG1_AVG_SAMPLES_NUM_INIT \
 617:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG1_AVG_MODE_INIT \
 618:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG1_DSI_TRIGGER_LEVEL_INIT \
 619:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG1_DSI_TRIGGER_EN_INIT \
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 104


 620:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG1_UAB_SCAN_MODE_INIT \
 621:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 622:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG1_TRIGGER_OUT_INIT \
 623:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 624:Generated_Source\PSoC6/DETECTOR_ADC.h ****     )
 625:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 626:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_RANGE_THRES_INIT \
 627:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG1_LOW_LIMIT \
 628:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | (uint32)((uint32)DETECTOR_ADC_CFG1_HIGH_LIMIT \
 629:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 630:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 631:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)DETECTOR_ADC_CF
 632:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 633:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Misc Config
 634:Generated_Source\PSoC6/DETECTOR_ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 635:Generated_Source\PSoC6/DETECTOR_ADC.h ****     */
 636:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG1_MISC_CONFIG_INIT \
 637:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG1_FREERUNNING)
 638:Generated_Source\PSoC6/DETECTOR_ADC.h **** #endif /* DETECTOR_ADC_TOTAL_CONFIGS > 1 */
 639:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 640:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 641:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* End configuration 1 calculated defines                                     */
 642:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 643:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 644:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 645:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* Begin configuration 2 calculated defines                                   */
 646:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 647:Generated_Source\PSoC6/DETECTOR_ADC.h **** #if(DETECTOR_ADC_TOTAL_CONFIGS > 2)
 648:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_SAMPLE_TIME01_INIT \
 649:Generated_Source\PSoC6/DETECTOR_ADC.h ****             ((DETECTOR_ADC_CFG2_APERTURE_TIME0 \
 650:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 651:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | (DETECTOR_ADC_CFG2_APERTURE_TIME1 \
 652:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 653:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 654:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_SAMPLE_TIME23_INIT \
 655:Generated_Source\PSoC6/DETECTOR_ADC.h ****             ((DETECTOR_ADC_CFG2_APERTURE_TIME2 \
 656:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 657:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | (DETECTOR_ADC_CFG2_APERTURE_TIME3 \
 658:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 659:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 660:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Enable soc pin if used */
 661:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_DSI_TRIGGER_EN_INIT \
 662:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG2_USE_SOC \
 663:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 664:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 665:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 666:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #if(DETECTOR_ADC_CFG2_FREERUNNING == DETECTOR_ADC_FREERUNNING)
 667:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG2_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 668:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #else /* Edge trigger */
 669:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG2_DSI_TRIGGER_LEVEL_INIT    (0u)
 670:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #endif /* End DETECTOR_ADC_CFG2_FREERUNNING == DETECTOR_ADC_FREERUNNING */
 671:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 672:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Set SE_NEG_INPUT */
 673:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #if(DETECTOR_ADC_CFG2_VNEG_INPUT_SEL == DETECTOR_ADC_NEG_SEL_VSSA_KELVIN)
 674:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG2_SE_NEG_INPUT_INIT \
 675:Generated_Source\PSoC6/DETECTOR_ADC.h ****             ((uint32)(DETECTOR_ADC_NEG_SEL_VSSA_KELVIN \
 676:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 105


 677:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #elif(DETECTOR_ADC_CFG2_VNEG_INPUT_SEL == DETECTOR_ADC_NEG_SEL_VREF)
 678:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG2_SE_NEG_INPUT_INIT     (DETECTOR_ADC_NEG_SEL_VREF \
 679:Generated_Source\PSoC6/DETECTOR_ADC.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 680:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #elif (DETECTOR_ADC_CFG2_SINGLE_PRESENT != 0u)
 681:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG2_SE_NEG_INPUT_INIT         DETECTOR_ADC_CFG2_NEG_OTHER
 682:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #else
 683:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG2_SE_NEG_INPUT_INIT         0u
 684:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #endif /* DETECTOR_ADC_CFG2_VNEG_INPUT_SEL == DETECTOR_ADC_NEG_SEL_VSSA_KELVIN */
 685:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 686:Generated_Source\PSoC6/DETECTOR_ADC.h ****    #define DETECTOR_ADC_CFG2_NEG_OTHER                 (uint16)((uint16)DETECTOR_ADC_SARMUX__VNEG2 
 687:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 688:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_SWITCH_CONF_INIT          0u
 689:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 690:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 691:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 692:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 693:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_POWER_INIT  (DETECTOR_ADC_PWR_CTRL_VREF_NORMAL_PWR)
 694:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 695:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* SAMPLE_CTRL initial values */
 696:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_SE_RESULT_FORMAT_INIT \
 697:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG2_SINGLE_ENDED_FORMAT \
 698:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 699:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 700:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_DIFF_RESULT_FORMAT_INIT \
 701:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG2_DIFFERENTIAL_FORMAT \
 702:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 703:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 704:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_AVG_SAMPLES_NUM_INIT \
 705:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG2_SAMPLES_AVERAGED \
 706:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 707:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 708:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Combination of Average Mode and Average Shift */
 709:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_AVG_MODE_INIT \
 710:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG2_AVGERAGING_MODE \
 711:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 712:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 713:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_TRIGGER_OUT_INIT      (0u)
 714:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_UAB_SCAN_MODE_INIT    (0u)
 715:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 716:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 717:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_VREF_POWER_INIT  \
 718:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG2_VREF_PWR \
 719:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 720:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 721:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_COMP_PWR_INIT  \
 722:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG2_COMP_PWR \
 723:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 724:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 725:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_COMP_DLY_INIT  \
 726:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG2_COMP_DLY \
 727:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 728:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 729:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_CTRL_INIT  \
 730:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG2_VREF_POWER_INIT \
 731:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG2_VREF_SEL_MASK \
 732:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG2_SE_NEG_INPUT_INIT \
 733:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG2_HW_CTRL_NEGVREF_INIT \
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 106


 734:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG2_COMP_DLY_INIT \
 735:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 736:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG2_COMP_PWR_INIT \
 737:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 738:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG2_SWITCH_CONF_INIT )
 739:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 740:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 741:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_SAMPLE_CTRL_INIT \
 742:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG2_SE_RESULT_FORMAT_INIT \
 743:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG2_DIFF_RESULT_FORMAT_INIT \
 744:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG2_AVG_SAMPLES_NUM_INIT \
 745:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG2_AVG_MODE_INIT \
 746:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG2_DSI_TRIGGER_LEVEL_INIT \
 747:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG2_DSI_TRIGGER_EN_INIT \
 748:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG2_UAB_SCAN_MODE_INIT \
 749:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 750:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG2_TRIGGER_OUT_INIT \
 751:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 752:Generated_Source\PSoC6/DETECTOR_ADC.h ****     )
 753:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 754:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_RANGE_THRES_INIT \
 755:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG2_LOW_LIMIT \
 756:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | (uint32)((uint32)DETECTOR_ADC_CFG2_HIGH_LIMIT \
 757:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 758:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 759:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)DETECTOR_ADC_CF
 760:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 761:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Misc Config
 762:Generated_Source\PSoC6/DETECTOR_ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 763:Generated_Source\PSoC6/DETECTOR_ADC.h ****     */
 764:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG2_MISC_CONFIG_INIT \
 765:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG2_FREERUNNING)
 766:Generated_Source\PSoC6/DETECTOR_ADC.h **** #endif /* DETECTOR_ADC_TOTAL_CONFIGS > 2 */
 767:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 768:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 769:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* End configuration 2 calculated defines                                     */
 770:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 771:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 772:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 773:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* Begin configuration 3 calculated defines                                   */
 774:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 775:Generated_Source\PSoC6/DETECTOR_ADC.h **** #if(DETECTOR_ADC_TOTAL_CONFIGS > 3)
 776:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_SAMPLE_TIME01_INIT \
 777:Generated_Source\PSoC6/DETECTOR_ADC.h ****             ((DETECTOR_ADC_CFG3_APERTURE_TIME0 \
 778:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 779:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | (DETECTOR_ADC_CFG3_APERTURE_TIME1 \
 780:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 781:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 782:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_SAMPLE_TIME23_INIT \
 783:Generated_Source\PSoC6/DETECTOR_ADC.h ****             ((DETECTOR_ADC_CFG3_APERTURE_TIME2 \
 784:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 785:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | (DETECTOR_ADC_CFG3_APERTURE_TIME3 \
 786:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 787:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 788:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Enable soc pin if used */
 789:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_DSI_TRIGGER_EN_INIT \
 790:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG3_USE_SOC \
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 107


 791:Generated_Source\PSoC6/DETECTOR_ADC.h ****              << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 792:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 793:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 794:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #if(DETECTOR_ADC_CFG3_FREERUNNING == DETECTOR_ADC_FREERUNNING)
 795:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG3_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 796:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #else /* Edge trigger */
 797:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG3_DSI_TRIGGER_LEVEL_INIT    (0u)
 798:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #endif /* End DETECTOR_ADC_CFG3_FREERUNNING == DETECTOR_ADC_FREERUNNING */
 799:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 800:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Set SE_NEG_INPUT  */
 801:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #if(DETECTOR_ADC_CFG3_VNEG_INPUT_SEL == DETECTOR_ADC_NEG_SEL_VSSA_KELVIN)
 802:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG3_SE_NEG_INPUT_INIT \
 803:Generated_Source\PSoC6/DETECTOR_ADC.h ****             ((uint32)(DETECTOR_ADC_NEG_SEL_VSSA_KELVIN \
 804:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 805:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #elif(DETECTOR_ADC_CFG3_VNEG_INPUT_SEL == DETECTOR_ADC_NEG_SEL_VREF)
 806:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG3_SE_NEG_INPUT_INIT     (DETECTOR_ADC_NEG_SEL_VREF \
 807:Generated_Source\PSoC6/DETECTOR_ADC.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 808:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #elif (DETECTOR_ADC_CFG3_SINGLE_PRESENT != 0u)
 809:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG3_SE_NEG_INPUT_INIT         DETECTOR_ADC_CFG3_NEG_OTHER
 810:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #else
 811:Generated_Source\PSoC6/DETECTOR_ADC.h ****         #define DETECTOR_ADC_CFG3_SE_NEG_INPUT_INIT         0u
 812:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #endif /* DETECTOR_ADC_CFG3_VNEG_INPUT_SEL == DETECTOR_ADC_NEG_SEL_VSSA_KELVIN */
 813:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 814:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_NEG_OTHER                 (uint16)((uint16)DETECTOR_ADC_SARMUX__VNEG3
 815:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 816:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_SWITCH_CONF_INIT          0u
 817:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 818:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 819:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 820:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 821:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_POWER_INIT  (DETECTOR_ADC_PWR_CTRL_VREF_NORMAL_PWR)
 822:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 823:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* SAMPLE_CTRL initial values */
 824:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_SE_RESULT_FORMAT_INIT \
 825:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG3_SINGLE_ENDED_FORMAT \
 826:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 827:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 828:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_DIFF_RESULT_FORMAT_INIT \
 829:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG3_DIFFERENTIAL_FORMAT \
 830:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 831:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 832:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_AVG_SAMPLES_NUM_INIT \
 833:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG3_SAMPLES_AVERAGED \
 834:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 835:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 836:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Combination of Average Mode and Average Shift */
 837:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_AVG_MODE_INIT \
 838:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG3_AVGERAGING_MODE \
 839:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 840:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 841:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_TRIGGER_OUT_INIT      (0u)
 842:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_UAB_SCAN_MODE_INIT    (0u)
 843:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 844:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_VREF_POWER_INIT  \
 845:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG3_VREF_PWR \
 846:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 847:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 108


 848:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_COMP_PWR_INIT  \
 849:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG3_COMP_PWR \
 850:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 851:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 852:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_COMP_DLY_INIT  \
 853:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG3_COMP_DLY \
 854:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 855:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 856:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_CTRL_INIT  \
 857:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG3_VREF_POWER_INIT \
 858:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG3_VREF_SEL_MASK \
 859:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG3_SE_NEG_INPUT_INIT \
 860:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG3_HW_CTRL_NEGVREF_INIT \
 861:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG3_COMP_DLY_INIT \
 862:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 863:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG3_COMP_PWR_INIT \
 864:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 865:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG3_SWITCH_CONF_INIT )
 866:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 867:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 868:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_SAMPLE_CTRL_INIT \
 869:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG3_SE_RESULT_FORMAT_INIT \
 870:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG3_DIFF_RESULT_FORMAT_INIT \
 871:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG3_AVG_SAMPLES_NUM_INIT \
 872:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG3_AVG_MODE_INIT \
 873:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG3_DSI_TRIGGER_LEVEL_INIT \
 874:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG3_DSI_TRIGGER_EN_INIT \
 875:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG3_UAB_SCAN_MODE_INIT \
 876:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 877:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | DETECTOR_ADC_CFG3_TRIGGER_OUT_INIT \
 878:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 879:Generated_Source\PSoC6/DETECTOR_ADC.h ****     )
 880:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 881:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_RANGE_THRES_INIT \
 882:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG3_LOW_LIMIT \
 883:Generated_Source\PSoC6/DETECTOR_ADC.h ****             | (uint32)((uint32)DETECTOR_ADC_CFG3_HIGH_LIMIT \
 884:Generated_Source\PSoC6/DETECTOR_ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 885:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 886:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)DETECTOR_ADC_CF
 887:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 888:Generated_Source\PSoC6/DETECTOR_ADC.h ****     /* Misc Config
 889:Generated_Source\PSoC6/DETECTOR_ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 890:Generated_Source\PSoC6/DETECTOR_ADC.h ****     */
 891:Generated_Source\PSoC6/DETECTOR_ADC.h ****     #define DETECTOR_ADC_CFG3_MISC_CONFIG_INIT \
 892:Generated_Source\PSoC6/DETECTOR_ADC.h ****             (DETECTOR_ADC_CFG3_FREERUNNING )
 893:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 894:Generated_Source\PSoC6/DETECTOR_ADC.h **** #endif /* DETECTOR_ADC_TOTAL_CONFIGS > 3 */
 895:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 896:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 897:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* End configuration 3 calculated defines                                     */
 898:Generated_Source\PSoC6/DETECTOR_ADC.h **** /* ************************************************************************** */
 899:Generated_Source\PSoC6/DETECTOR_ADC.h **** 
 900:Generated_Source\PSoC6/DETECTOR_ADC.h **** /******************************************************************************
 901:Generated_Source\PSoC6/DETECTOR_ADC.h **** * Function Name: DETECTOR_ADC_Enable
 902:Generated_Source\PSoC6/DETECTOR_ADC.h **** ****************************************************************************//*
 903:Generated_Source\PSoC6/DETECTOR_ADC.h **** *
 904:Generated_Source\PSoC6/DETECTOR_ADC.h **** * \brief Enables the component.
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 109


 905:Generated_Source\PSoC6/DETECTOR_ADC.h **** *
 906:Generated_Source\PSoC6/DETECTOR_ADC.h **** * \param None
 907:Generated_Source\PSoC6/DETECTOR_ADC.h **** *
 908:Generated_Source\PSoC6/DETECTOR_ADC.h **** * \return None
 909:Generated_Source\PSoC6/DETECTOR_ADC.h **** *
 910:Generated_Source\PSoC6/DETECTOR_ADC.h **** * \sideeffect
 911:Generated_Source\PSoC6/DETECTOR_ADC.h **** *  None
 912:Generated_Source\PSoC6/DETECTOR_ADC.h **** *
 913:Generated_Source\PSoC6/DETECTOR_ADC.h **** *******************************************************************************/
 914:Generated_Source\PSoC6/DETECTOR_ADC.h **** __STATIC_INLINE void DETECTOR_ADC_Enable(void)
 915:Generated_Source\PSoC6/DETECTOR_ADC.h **** {
 916:Generated_Source\PSoC6/DETECTOR_ADC.h ****     Cy_SAR_Enable(DETECTOR_ADC_SAR__HW);
 479              		.loc 5 916 0
 480 001a 0348     		ldr	r0, .L50+4
 481 001c FFF7FEFF 		bl	Cy_SAR_Enable
 482              	.LVL36:
 483 0020 08BD     		pop	{r3, pc}
 484              	.L51:
 485 0022 00BF     		.align	2
 486              	.L50:
 487 0024 00000000 		.word	.LANCHOR0
 488 0028 00001D41 		.word	1092419584
 489              	.LBE41:
 490              	.LBE40:
 491              		.cfi_endproc
 492              	.LFE214:
 493              		.size	DETECTOR_ADC_Start, .-DETECTOR_ADC_Start
 494              		.section	.text.DETECTOR_ADC_StartEx,"ax",%progbits
 495              		.align	2
 496              		.global	DETECTOR_ADC_StartEx
 497              		.thumb
 498              		.thumb_func
 499              		.type	DETECTOR_ADC_StartEx, %function
 500              	DETECTOR_ADC_StartEx:
 501              	.LFB215:
  95:Generated_Source\PSoC6/DETECTOR_ADC.c ****     DETECTOR_ADC_Start();
 502              		.loc 1 95 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506              	.LVL37:
 507 0000 38B5     		push	{r3, r4, r5, lr}
 508              		.cfi_def_cfa_offset 16
 509              		.cfi_offset 3, -16
 510              		.cfi_offset 4, -12
 511              		.cfi_offset 5, -8
 512              		.cfi_offset 14, -4
 513 0002 0546     		mov	r5, r0
  96:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 514              		.loc 1 96 0
 515 0004 FFF7FEFF 		bl	DETECTOR_ADC_Start
 516              	.LVL38:
 101:Generated_Source\PSoC6/DETECTOR_ADC.c ****         NVIC_EnableIRQ(DETECTOR_ADC_IRQ_cfg.intrSrc);
 517              		.loc 1 101 0
 518 0008 094C     		ldr	r4, .L55
 519 000a 2946     		mov	r1, r5
 520 000c 2046     		mov	r0, r4
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 110


 521 000e FFF7FEFF 		bl	Cy_SysInt_Init
 522              	.LVL39:
 102:Generated_Source\PSoC6/DETECTOR_ADC.c ****     #endif
 523              		.loc 1 102 0
 524 0012 B4F90030 		ldrsh	r3, [r4]
 525              	.LVL40:
 526              	.LBB42:
 527              	.LBB43:
1686:.\Core\Include/core_cm4.h ****   {
 528              		.loc 2 1686 0
 529 0016 002B     		cmp	r3, #0
 530 0018 08DB     		blt	.L52
1688:.\Core\Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 531              		.loc 2 1688 0
1689:.\Core\Include/core_cm4.h ****     __COMPILER_BARRIER();
 532              		.loc 2 1689 0
 533 001a 5909     		lsrs	r1, r3, #5
 534 001c 03F01F03 		and	r3, r3, #31
 535              	.LVL41:
 536 0020 0122     		movs	r2, #1
 537 0022 02FA03F3 		lsl	r3, r2, r3
 538 0026 034A     		ldr	r2, .L55+4
 539 0028 42F82130 		str	r3, [r2, r1, lsl #2]
1690:.\Core\Include/core_cm4.h ****   }
 540              		.loc 2 1690 0
 541              	.LVL42:
 542              	.L52:
 543 002c 38BD     		pop	{r3, r4, r5, pc}
 544              	.LVL43:
 545              	.L56:
 546 002e 00BF     		.align	2
 547              	.L55:
 548 0030 00000000 		.word	DETECTOR_ADC_IRQ_cfg
 549 0034 00E100E0 		.word	-536813312
 550              	.LBE43:
 551              	.LBE42:
 552              		.cfi_endproc
 553              	.LFE215:
 554              		.size	DETECTOR_ADC_StartEx, .-DETECTOR_ADC_StartEx
 555              		.section	.text.DETECTOR_ADC_SelectConfig,"ax",%progbits
 556              		.align	2
 557              		.global	DETECTOR_ADC_SelectConfig
 558              		.thumb
 559              		.thumb_func
 560              		.type	DETECTOR_ADC_SelectConfig, %function
 561              	DETECTOR_ADC_SelectConfig:
 562              	.LFB217:
 171:Generated_Source\PSoC6/DETECTOR_ADC.c ****     /* Check whether the configuration number is valid or not */
 563              		.loc 1 171 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567              	.LVL44:
 173:Generated_Source\PSoC6/DETECTOR_ADC.c ****     {
 568              		.loc 1 173 0
 569 0000 08BB     		cbnz	r0, .L61
 171:Generated_Source\PSoC6/DETECTOR_ADC.c ****     /* Check whether the configuration number is valid or not */
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 111


 570              		.loc 1 171 0
 571 0002 38B5     		push	{r3, r4, r5, lr}
 572              		.cfi_def_cfa_offset 16
 573              		.cfi_offset 3, -16
 574              		.cfi_offset 4, -12
 575              		.cfi_offset 5, -8
 576              		.cfi_offset 14, -4
 577 0004 0446     		mov	r4, r0
 578 0006 0D46     		mov	r5, r1
 579              	.LVL45:
 580              	.LBB44:
 581              	.LBB45:
 582              	.LBB46:
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 583              		.loc 4 1440 0
 584 0008 0F4A     		ldr	r2, .L62
 585 000a 1368     		ldr	r3, [r2]
 586 000c 23F00043 		bic	r3, r3, #-2147483648
 587 0010 1360     		str	r3, [r2]
 588              	.LVL46:
 589              	.LBE46:
 590              	.LBE45:
 591              	.LBE44:
 177:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 592              		.loc 1 177 0
 593 0012 0E4B     		ldr	r3, .L62+4
 594 0014 0122     		movs	r2, #1
 595 0016 5A71     		strb	r2, [r3, #5]
 179:Generated_Source\PSoC6/DETECTOR_ADC.c ****         {
 596              		.loc 1 179 0
 597 0018 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 598 001a 33B9     		cbnz	r3, .L59
 181:Generated_Source\PSoC6/DETECTOR_ADC.c ****             DETECTOR_ADC_initVar |= DETECTOR_ADC_INIT_VAR_INIT_FLAG;
 599              		.loc 1 181 0
 600 001c FFF7FEFF 		bl	DETECTOR_ADC_Init
 601              	.LVL47:
 182:Generated_Source\PSoC6/DETECTOR_ADC.c ****         }
 602              		.loc 1 182 0
 603 0020 0A4A     		ldr	r2, .L62+4
 604 0022 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 605 0024 43F00103 		orr	r3, r3, #1
 606 0028 1371     		strb	r3, [r2, #4]
 607              	.L59:
 188:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 608              		.loc 1 188 0
 609 002a 0948     		ldr	r0, .L62+8
 610 002c 00EB0410 		add	r0, r0, r4, lsl #4
 611 0030 FFF7FEFF 		bl	DETECTOR_ADC_InitConfig
 612              	.LVL48:
 194:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 613              		.loc 1 194 0
 614 0034 054B     		ldr	r3, .L62+4
 615 0036 1C60     		str	r4, [r3]
 196:Generated_Source\PSoC6/DETECTOR_ADC.c ****         {
 616              		.loc 1 196 0
 617 0038 012D     		cmp	r5, #1
 618 003a 03D1     		bne	.L57
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 112


 199:Generated_Source\PSoC6/DETECTOR_ADC.c **** 
 619              		.loc 1 199 0
 620 003c FFF7FEFF 		bl	DETECTOR_ADC_Start
 621              	.LVL49:
 202:Generated_Source\PSoC6/DETECTOR_ADC.c ****         }
 622              		.loc 1 202 0
 623 0040 FFF7FEFF 		bl	DETECTOR_ADC_StartConvert
 624              	.LVL50:
 625              	.L57:
 626 0044 38BD     		pop	{r3, r4, r5, pc}
 627              	.LVL51:
 628              	.L61:
 629              		.cfi_def_cfa_offset 0
 630              		.cfi_restore 3
 631              		.cfi_restore 4
 632              		.cfi_restore 5
 633              		.cfi_restore 14
 634 0046 7047     		bx	lr
 635              	.L63:
 636              		.align	2
 637              	.L62:
 638 0048 00001D41 		.word	1092419584
 639 004c 00000000 		.word	.LANCHOR0
 640 0050 00000000 		.word	DETECTOR_ADC_allConfigs
 641              		.cfi_endproc
 642              	.LFE217:
 643              		.size	DETECTOR_ADC_SelectConfig, .-DETECTOR_ADC_SelectConfig
 644              		.global	DETECTOR_ADC_currentConfig
 645              		.global	DETECTOR_ADC_selected
 646              		.global	DETECTOR_ADC_initVar
 647              		.section	.rodata.str1.4,"aMS",%progbits,1
 648              		.align	2
 649              	.LC0:
 650 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sa"
 650      72617465 
 650      645F536F 
 650      75726365 
 650      5C50536F 
 651 0030 722F6379 		.ascii	"r/cy_sar.h\000"
 651      5F736172 
 651      2E6800
 652              		.bss
 653              		.align	2
 654              		.set	.LANCHOR0,. + 0
 655              		.type	DETECTOR_ADC_currentConfig, %object
 656              		.size	DETECTOR_ADC_currentConfig, 4
 657              	DETECTOR_ADC_currentConfig:
 658 0000 00000000 		.space	4
 659              		.type	DETECTOR_ADC_initVar, %object
 660              		.size	DETECTOR_ADC_initVar, 1
 661              	DETECTOR_ADC_initVar:
 662 0004 00       		.space	1
 663              		.type	DETECTOR_ADC_selected, %object
 664              		.size	DETECTOR_ADC_selected, 1
 665              	DETECTOR_ADC_selected:
 666 0005 00       		.space	1
 667              		.text
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 113


 668              	.Letext0:
 669              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/cy8c6247bzi_d54.h"
 670              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 671              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 672              		.file 9 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
 673              		.file 10 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 674              		.file 11 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 675              		.file 12 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 676              		.file 13 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sysint/cy_sysint.h"
 677              		.file 14 "Generated_Source\\PSoC6/cyfitter_sysint_cfg.h"
 678              		.section	.debug_info,"",%progbits
 679              	.Ldebug_info0:
 680 0000 AA160000 		.4byte	0x16aa
 681 0004 0400     		.2byte	0x4
 682 0006 00000000 		.4byte	.Ldebug_abbrev0
 683 000a 04       		.byte	0x4
 684 000b 01       		.uleb128 0x1
 685 000c 17050000 		.4byte	.LASF439
 686 0010 0C       		.byte	0xc
 687 0011 9C160000 		.4byte	.LASF440
 688 0015 DD090000 		.4byte	.LASF441
 689 0019 00000000 		.4byte	.Ldebug_ranges0+0
 690 001d 00000000 		.4byte	0
 691 0021 00000000 		.4byte	.Ldebug_line0
 692 0025 02       		.uleb128 0x2
 693 0026 02       		.byte	0x2
 694 0027 E6030000 		.4byte	0x3e6
 695 002b 06       		.byte	0x6
 696 002c 24       		.byte	0x24
 697 002d E6030000 		.4byte	0x3e6
 698 0031 03       		.uleb128 0x3
 699 0032 AE1D0000 		.4byte	.LASF0
 700 0036 71       		.sleb128 -15
 701 0037 03       		.uleb128 0x3
 702 0038 7D170000 		.4byte	.LASF1
 703 003c 72       		.sleb128 -14
 704 003d 03       		.uleb128 0x3
 705 003e 041E0000 		.4byte	.LASF2
 706 0042 73       		.sleb128 -13
 707 0043 03       		.uleb128 0x3
 708 0044 7B060000 		.4byte	.LASF3
 709 0048 74       		.sleb128 -12
 710 0049 03       		.uleb128 0x3
 711 004a 94120000 		.4byte	.LASF4
 712 004e 75       		.sleb128 -11
 713 004f 03       		.uleb128 0x3
 714 0050 C21B0000 		.4byte	.LASF5
 715 0054 76       		.sleb128 -10
 716 0055 03       		.uleb128 0x3
 717 0056 64090000 		.4byte	.LASF6
 718 005a 7B       		.sleb128 -5
 719 005b 03       		.uleb128 0x3
 720 005c B01B0000 		.4byte	.LASF7
 721 0060 7C       		.sleb128 -4
 722 0061 03       		.uleb128 0x3
 723 0062 0B050000 		.4byte	.LASF8
 724 0066 7E       		.sleb128 -2
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 114


 725 0067 03       		.uleb128 0x3
 726 0068 421A0000 		.4byte	.LASF9
 727 006c 7F       		.sleb128 -1
 728 006d 04       		.uleb128 0x4
 729 006e 4B1F0000 		.4byte	.LASF10
 730 0072 00       		.byte	0
 731 0073 04       		.uleb128 0x4
 732 0074 09140000 		.4byte	.LASF11
 733 0078 01       		.byte	0x1
 734 0079 04       		.uleb128 0x4
 735 007a 76030000 		.4byte	.LASF12
 736 007e 02       		.byte	0x2
 737 007f 04       		.uleb128 0x4
 738 0080 47190000 		.4byte	.LASF13
 739 0084 03       		.byte	0x3
 740 0085 04       		.uleb128 0x4
 741 0086 530D0000 		.4byte	.LASF14
 742 008a 04       		.byte	0x4
 743 008b 04       		.uleb128 0x4
 744 008c 991E0000 		.4byte	.LASF15
 745 0090 05       		.byte	0x5
 746 0091 04       		.uleb128 0x4
 747 0092 66130000 		.4byte	.LASF16
 748 0096 06       		.byte	0x6
 749 0097 04       		.uleb128 0x4
 750 0098 10070000 		.4byte	.LASF17
 751 009c 07       		.byte	0x7
 752 009d 04       		.uleb128 0x4
 753 009e D8180000 		.4byte	.LASF18
 754 00a2 08       		.byte	0x8
 755 00a3 04       		.uleb128 0x4
 756 00a4 CC0C0000 		.4byte	.LASF19
 757 00a8 09       		.byte	0x9
 758 00a9 04       		.uleb128 0x4
 759 00aa 6F0D0000 		.4byte	.LASF20
 760 00ae 0A       		.byte	0xa
 761 00af 04       		.uleb128 0x4
 762 00b0 3C0A0000 		.4byte	.LASF21
 763 00b4 0B       		.byte	0xb
 764 00b5 04       		.uleb128 0x4
 765 00b6 FA080000 		.4byte	.LASF22
 766 00ba 0C       		.byte	0xc
 767 00bb 04       		.uleb128 0x4
 768 00bc 2C070000 		.4byte	.LASF23
 769 00c0 0D       		.byte	0xd
 770 00c1 04       		.uleb128 0x4
 771 00c2 47140000 		.4byte	.LASF24
 772 00c6 0E       		.byte	0xe
 773 00c7 04       		.uleb128 0x4
 774 00c8 40000000 		.4byte	.LASF25
 775 00cc 0F       		.byte	0xf
 776 00cd 04       		.uleb128 0x4
 777 00ce 73010000 		.4byte	.LASF26
 778 00d2 10       		.byte	0x10
 779 00d3 04       		.uleb128 0x4
 780 00d4 0C040000 		.4byte	.LASF27
 781 00d8 11       		.byte	0x11
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 115


 782 00d9 04       		.uleb128 0x4
 783 00da 66060000 		.4byte	.LASF28
 784 00de 12       		.byte	0x12
 785 00df 04       		.uleb128 0x4
 786 00e0 F20F0000 		.4byte	.LASF29
 787 00e4 13       		.byte	0x13
 788 00e5 04       		.uleb128 0x4
 789 00e6 48030000 		.4byte	.LASF30
 790 00ea 14       		.byte	0x14
 791 00eb 04       		.uleb128 0x4
 792 00ec DF080000 		.4byte	.LASF31
 793 00f0 15       		.byte	0x15
 794 00f1 04       		.uleb128 0x4
 795 00f2 A90D0000 		.4byte	.LASF32
 796 00f6 16       		.byte	0x16
 797 00f7 04       		.uleb128 0x4
 798 00f8 DC020000 		.4byte	.LASF33
 799 00fc 17       		.byte	0x17
 800 00fd 04       		.uleb128 0x4
 801 00fe EF160000 		.4byte	.LASF34
 802 0102 18       		.byte	0x18
 803 0103 04       		.uleb128 0x4
 804 0104 02110000 		.4byte	.LASF35
 805 0108 19       		.byte	0x19
 806 0109 04       		.uleb128 0x4
 807 010a 57010000 		.4byte	.LASF36
 808 010e 1A       		.byte	0x1a
 809 010f 04       		.uleb128 0x4
 810 0110 0B0B0000 		.4byte	.LASF37
 811 0114 1B       		.byte	0x1b
 812 0115 04       		.uleb128 0x4
 813 0116 E4200000 		.4byte	.LASF38
 814 011a 1C       		.byte	0x1c
 815 011b 04       		.uleb128 0x4
 816 011c 751C0000 		.4byte	.LASF39
 817 0120 1D       		.byte	0x1d
 818 0121 04       		.uleb128 0x4
 819 0122 5F100000 		.4byte	.LASF40
 820 0126 1E       		.byte	0x1e
 821 0127 04       		.uleb128 0x4
 822 0128 73180000 		.4byte	.LASF41
 823 012c 1F       		.byte	0x1f
 824 012d 04       		.uleb128 0x4
 825 012e F8150000 		.4byte	.LASF42
 826 0132 20       		.byte	0x20
 827 0133 04       		.uleb128 0x4
 828 0134 590A0000 		.4byte	.LASF43
 829 0138 21       		.byte	0x21
 830 0139 04       		.uleb128 0x4
 831 013a B51E0000 		.4byte	.LASF44
 832 013e 22       		.byte	0x22
 833 013f 04       		.uleb128 0x4
 834 0140 F7050000 		.4byte	.LASF45
 835 0144 23       		.byte	0x23
 836 0145 04       		.uleb128 0x4
 837 0146 29020000 		.4byte	.LASF46
 838 014a 24       		.byte	0x24
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 116


 839 014b 04       		.uleb128 0x4
 840 014c 4C180000 		.4byte	.LASF47
 841 0150 25       		.byte	0x25
 842 0151 04       		.uleb128 0x4
 843 0152 AB080000 		.4byte	.LASF48
 844 0156 26       		.byte	0x26
 845 0157 04       		.uleb128 0x4
 846 0158 911D0000 		.4byte	.LASF49
 847 015c 27       		.byte	0x27
 848 015d 04       		.uleb128 0x4
 849 015e EF110000 		.4byte	.LASF50
 850 0162 28       		.byte	0x28
 851 0163 04       		.uleb128 0x4
 852 0164 601C0000 		.4byte	.LASF51
 853 0168 29       		.byte	0x29
 854 0169 04       		.uleb128 0x4
 855 016a 36130000 		.4byte	.LASF52
 856 016e 2A       		.byte	0x2a
 857 016f 04       		.uleb128 0x4
 858 0170 1D190000 		.4byte	.LASF53
 859 0174 2B       		.byte	0x2b
 860 0175 04       		.uleb128 0x4
 861 0176 8B010000 		.4byte	.LASF54
 862 017a 2C       		.byte	0x2c
 863 017b 04       		.uleb128 0x4
 864 017c BF070000 		.4byte	.LASF55
 865 0180 2D       		.byte	0x2d
 866 0181 04       		.uleb128 0x4
 867 0182 B0110000 		.4byte	.LASF56
 868 0186 2E       		.byte	0x2e
 869 0187 04       		.uleb128 0x4
 870 0188 D5170000 		.4byte	.LASF57
 871 018c 2F       		.byte	0x2f
 872 018d 04       		.uleb128 0x4
 873 018e 19210000 		.4byte	.LASF58
 874 0192 30       		.byte	0x30
 875 0193 04       		.uleb128 0x4
 876 0194 CA090000 		.4byte	.LASF59
 877 0198 31       		.byte	0x31
 878 0199 04       		.uleb128 0x4
 879 019a D3190000 		.4byte	.LASF60
 880 019e 32       		.byte	0x32
 881 019f 04       		.uleb128 0x4
 882 01a0 190E0000 		.4byte	.LASF61
 883 01a4 33       		.byte	0x33
 884 01a5 04       		.uleb128 0x4
 885 01a6 14000000 		.4byte	.LASF62
 886 01aa 34       		.byte	0x34
 887 01ab 04       		.uleb128 0x4
 888 01ac DF130000 		.4byte	.LASF63
 889 01b0 35       		.byte	0x35
 890 01b1 04       		.uleb128 0x4
 891 01b2 CC1A0000 		.4byte	.LASF64
 892 01b6 36       		.byte	0x36
 893 01b7 04       		.uleb128 0x4
 894 01b8 E11C0000 		.4byte	.LASF65
 895 01bc 37       		.byte	0x37
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 117


 896 01bd 04       		.uleb128 0x4
 897 01be 2B0D0000 		.4byte	.LASF66
 898 01c2 38       		.byte	0x38
 899 01c3 04       		.uleb128 0x4
 900 01c4 1B010000 		.4byte	.LASF67
 901 01c8 39       		.byte	0x39
 902 01c9 04       		.uleb128 0x4
 903 01ca 950C0000 		.4byte	.LASF68
 904 01ce 3A       		.byte	0x3a
 905 01cf 04       		.uleb128 0x4
 906 01d0 BD130000 		.4byte	.LASF69
 907 01d4 3B       		.byte	0x3b
 908 01d5 04       		.uleb128 0x4
 909 01d6 E71D0000 		.4byte	.LASF70
 910 01da 3C       		.byte	0x3c
 911 01db 04       		.uleb128 0x4
 912 01dc 8C1F0000 		.4byte	.LASF71
 913 01e0 3D       		.byte	0x3d
 914 01e1 04       		.uleb128 0x4
 915 01e2 2A140000 		.4byte	.LASF72
 916 01e6 3E       		.byte	0x3e
 917 01e7 04       		.uleb128 0x4
 918 01e8 A7030000 		.4byte	.LASF73
 919 01ec 3F       		.byte	0x3f
 920 01ed 04       		.uleb128 0x4
 921 01ee 63190000 		.4byte	.LASF74
 922 01f2 40       		.byte	0x40
 923 01f3 04       		.uleb128 0x4
 924 01f4 8C0D0000 		.4byte	.LASF75
 925 01f8 41       		.byte	0x41
 926 01f9 04       		.uleb128 0x4
 927 01fa BE040000 		.4byte	.LASF76
 928 01fe 42       		.byte	0x42
 929 01ff 04       		.uleb128 0x4
 930 0200 6A1A0000 		.4byte	.LASF77
 931 0204 43       		.byte	0x43
 932 0205 04       		.uleb128 0x4
 933 0206 AC0E0000 		.4byte	.LASF78
 934 020a 44       		.byte	0x44
 935 020b 04       		.uleb128 0x4
 936 020c C41F0000 		.4byte	.LASF79
 937 0210 45       		.byte	0x45
 938 0211 04       		.uleb128 0x4
 939 0212 85140000 		.4byte	.LASF80
 940 0216 46       		.byte	0x46
 941 0217 04       		.uleb128 0x4
 942 0218 02080000 		.4byte	.LASF81
 943 021c 47       		.byte	0x47
 944 021d 04       		.uleb128 0x4
 945 021e 90190000 		.4byte	.LASF82
 946 0222 48       		.byte	0x48
 947 0223 04       		.uleb128 0x4
 948 0224 CE0D0000 		.4byte	.LASF83
 949 0228 49       		.byte	0x49
 950 0229 04       		.uleb128 0x4
 951 022a A8010000 		.4byte	.LASF84
 952 022e 4A       		.byte	0x4a
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 118


 953 022f 04       		.uleb128 0x4
 954 0230 4C0E0000 		.4byte	.LASF85
 955 0234 4B       		.byte	0x4b
 956 0235 04       		.uleb128 0x4
 957 0236 A1140000 		.4byte	.LASF86
 958 023a 4C       		.byte	0x4c
 959 023b 04       		.uleb128 0x4
 960 023c 31080000 		.4byte	.LASF87
 961 0240 4D       		.byte	0x4d
 962 0241 04       		.uleb128 0x4
 963 0242 A9180000 		.4byte	.LASF88
 964 0246 4E       		.byte	0x4e
 965 0247 04       		.uleb128 0x4
 966 0248 FC0D0000 		.4byte	.LASF89
 967 024c 4F       		.byte	0x4f
 968 024d 04       		.uleb128 0x4
 969 024e C4010000 		.4byte	.LASF90
 970 0252 50       		.byte	0x50
 971 0253 04       		.uleb128 0x4
 972 0254 35170000 		.4byte	.LASF91
 973 0258 51       		.byte	0x51
 974 0259 04       		.uleb128 0x4
 975 025a 8D0A0000 		.4byte	.LASF92
 976 025e 52       		.byte	0x52
 977 025f 04       		.uleb128 0x4
 978 0260 F41E0000 		.4byte	.LASF93
 979 0264 53       		.byte	0x53
 980 0265 04       		.uleb128 0x4
 981 0266 86200000 		.4byte	.LASF94
 982 026a 54       		.byte	0x54
 983 026b 04       		.uleb128 0x4
 984 026c 040F0000 		.4byte	.LASF95
 985 0270 55       		.byte	0x55
 986 0271 04       		.uleb128 0x4
 987 0272 AB0A0000 		.4byte	.LASF96
 988 0276 56       		.byte	0x56
 989 0277 04       		.uleb128 0x4
 990 0278 79070000 		.4byte	.LASF97
 991 027c 57       		.byte	0x57
 992 027d 04       		.uleb128 0x4
 993 027e 33210000 		.4byte	.LASF98
 994 0282 58       		.byte	0x58
 995 0283 04       		.uleb128 0x4
 996 0284 68150000 		.4byte	.LASF99
 997 0288 59       		.byte	0x59
 998 0289 04       		.uleb128 0x4
 999 028a A2200000 		.4byte	.LASF100
 1000 028e 5A       		.byte	0x5a
 1001 028f 04       		.uleb128 0x4
 1002 0290 6B110000 		.4byte	.LASF101
 1003 0294 5B       		.byte	0x5b
 1004 0295 04       		.uleb128 0x4
 1005 0296 F1040000 		.4byte	.LASF102
 1006 029a 5C       		.byte	0x5c
 1007 029b 04       		.uleb128 0x4
 1008 029c A61A0000 		.4byte	.LASF103
 1009 02a0 5D       		.byte	0x5d
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 119


 1010 02a1 04       		.uleb128 0x4
 1011 02a2 350B0000 		.4byte	.LASF104
 1012 02a6 5E       		.byte	0x5e
 1013 02a7 04       		.uleb128 0x4
 1014 02a8 16120000 		.4byte	.LASF105
 1015 02ac 5F       		.byte	0x5f
 1016 02ad 04       		.uleb128 0x4
 1017 02ae BE140000 		.4byte	.LASF106
 1018 02b2 60       		.byte	0x60
 1019 02b3 04       		.uleb128 0x4
 1020 02b4 30040000 		.4byte	.LASF107
 1021 02b8 61       		.byte	0x61
 1022 02b9 04       		.uleb128 0x4
 1023 02ba D21B0000 		.4byte	.LASF108
 1024 02be 62       		.byte	0x62
 1025 02bf 04       		.uleb128 0x4
 1026 02c0 1A0C0000 		.4byte	.LASF109
 1027 02c4 63       		.byte	0x63
 1028 02c5 04       		.uleb128 0x4
 1029 02c6 53210000 		.4byte	.LASF110
 1030 02ca 64       		.byte	0x64
 1031 02cb 04       		.uleb128 0x4
 1032 02cc 88150000 		.4byte	.LASF111
 1033 02d0 65       		.byte	0x65
 1034 02d1 04       		.uleb128 0x4
 1035 02d2 9C090000 		.4byte	.LASF112
 1036 02d6 66       		.byte	0x66
 1037 02d7 04       		.uleb128 0x4
 1038 02d8 201B0000 		.4byte	.LASF113
 1039 02dc 67       		.byte	0x67
 1040 02dd 04       		.uleb128 0x4
 1041 02de AC000000 		.4byte	.LASF114
 1042 02e2 68       		.byte	0x68
 1043 02e3 04       		.uleb128 0x4
 1044 02e4 9B020000 		.4byte	.LASF115
 1045 02e8 69       		.byte	0x69
 1046 02e9 04       		.uleb128 0x4
 1047 02ea 05150000 		.4byte	.LASF116
 1048 02ee 6A       		.byte	0x6a
 1049 02ef 04       		.uleb128 0x4
 1050 02f0 17090000 		.4byte	.LASF117
 1051 02f4 6B       		.byte	0x6b
 1052 02f5 04       		.uleb128 0x4
 1053 02f6 671F0000 		.4byte	.LASF118
 1054 02fa 6C       		.byte	0x6c
 1055 02fb 04       		.uleb128 0x4
 1056 02fc 4B130000 		.4byte	.LASF119
 1057 0300 6D       		.byte	0x6d
 1058 0301 04       		.uleb128 0x4
 1059 0302 F5060000 		.4byte	.LASF120
 1060 0306 6E       		.byte	0x6e
 1061 0307 04       		.uleb128 0x4
 1062 0308 451C0000 		.4byte	.LASF121
 1063 030c 6F       		.byte	0x6f
 1064 030d 04       		.uleb128 0x4
 1065 030e B10C0000 		.4byte	.LASF122
 1066 0312 70       		.byte	0x70
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 120


 1067 0313 04       		.uleb128 0x4
 1068 0314 6B000000 		.4byte	.LASF123
 1069 0318 71       		.byte	0x71
 1070 0319 04       		.uleb128 0x4
 1071 031a DD150000 		.4byte	.LASF124
 1072 031e 72       		.byte	0x72
 1073 031f 04       		.uleb128 0x4
 1074 0320 91060000 		.4byte	.LASF125
 1075 0324 73       		.byte	0x73
 1076 0325 04       		.uleb128 0x4
 1077 0326 951B0000 		.4byte	.LASF126
 1078 032a 74       		.byte	0x74
 1079 032b 04       		.uleb128 0x4
 1080 032c A60F0000 		.4byte	.LASF127
 1081 0330 75       		.byte	0x75
 1082 0331 04       		.uleb128 0x4
 1083 0332 91170000 		.4byte	.LASF128
 1084 0336 76       		.byte	0x76
 1085 0337 04       		.uleb128 0x4
 1086 0338 6F0C0000 		.4byte	.LASF129
 1087 033c 77       		.byte	0x77
 1088 033d 04       		.uleb128 0x4
 1089 033e AC190000 		.4byte	.LASF130
 1090 0342 78       		.byte	0x78
 1091 0343 04       		.uleb128 0x4
 1092 0344 CE030000 		.4byte	.LASF131
 1093 0348 79       		.byte	0x79
 1094 0349 04       		.uleb128 0x4
 1095 034a 371E0000 		.4byte	.LASF132
 1096 034e 7A       		.byte	0x7a
 1097 034f 04       		.uleb128 0x4
 1098 0350 E1120000 		.4byte	.LASF133
 1099 0354 7B       		.byte	0x7b
 1100 0355 04       		.uleb128 0x4
 1101 0356 AC060000 		.4byte	.LASF134
 1102 035a 7C       		.byte	0x7c
 1103 035b 04       		.uleb128 0x4
 1104 035c EC1B0000 		.4byte	.LASF135
 1105 0360 7D       		.byte	0x7d
 1106 0361 04       		.uleb128 0x4
 1107 0362 340C0000 		.4byte	.LASF136
 1108 0366 7E       		.byte	0x7e
 1109 0367 04       		.uleb128 0x4
 1110 0368 50200000 		.4byte	.LASF137
 1111 036c 7F       		.byte	0x7f
 1112 036d 04       		.uleb128 0x4
 1113 036e A2150000 		.4byte	.LASF138
 1114 0372 80       		.byte	0x80
 1115 0373 04       		.uleb128 0x4
 1116 0374 50060000 		.4byte	.LASF139
 1117 0378 81       		.byte	0x81
 1118 0379 04       		.uleb128 0x4
 1119 037a 3A1B0000 		.4byte	.LASF140
 1120 037e 82       		.byte	0x82
 1121 037f 04       		.uleb128 0x4
 1122 0380 440F0000 		.4byte	.LASF141
 1123 0384 83       		.byte	0x83
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 121


 1124 0385 04       		.uleb128 0x4
 1125 0386 D0000000 		.4byte	.LASF142
 1126 038a 84       		.byte	0x84
 1127 038b 04       		.uleb128 0x4
 1128 038c F40A0000 		.4byte	.LASF143
 1129 0390 85       		.byte	0x85
 1130 0391 04       		.uleb128 0x4
 1131 0392 2B1A0000 		.4byte	.LASF144
 1132 0396 86       		.byte	0x86
 1133 0397 04       		.uleb128 0x4
 1134 0398 950E0000 		.4byte	.LASF145
 1135 039c 87       		.byte	0x87
 1136 039d 04       		.uleb128 0x4
 1137 039e DA040000 		.4byte	.LASF146
 1138 03a2 88       		.byte	0x88
 1139 03a3 04       		.uleb128 0x4
 1140 03a4 49070000 		.4byte	.LASF147
 1141 03a8 89       		.byte	0x89
 1142 03a9 04       		.uleb128 0x4
 1143 03aa 1F1E0000 		.4byte	.LASF148
 1144 03ae 8A       		.byte	0x8a
 1145 03af 04       		.uleb128 0x4
 1146 03b0 B70B0000 		.4byte	.LASF149
 1147 03b4 8B       		.byte	0x8b
 1148 03b5 04       		.uleb128 0x4
 1149 03b6 540C0000 		.4byte	.LASF150
 1150 03ba 8C       		.byte	0x8c
 1151 03bb 04       		.uleb128 0x4
 1152 03bc A00B0000 		.4byte	.LASF151
 1153 03c0 8D       		.byte	0x8d
 1154 03c1 04       		.uleb128 0x4
 1155 03c2 09190000 		.4byte	.LASF152
 1156 03c6 8E       		.byte	0x8e
 1157 03c7 04       		.uleb128 0x4
 1158 03c8 0D130000 		.4byte	.LASF153
 1159 03cc 8F       		.byte	0x8f
 1160 03cd 04       		.uleb128 0x4
 1161 03ce 85110000 		.4byte	.LASF154
 1162 03d2 90       		.byte	0x90
 1163 03d3 04       		.uleb128 0x4
 1164 03d4 D90E0000 		.4byte	.LASF155
 1165 03d8 91       		.byte	0x91
 1166 03d9 04       		.uleb128 0x4
 1167 03da 010C0000 		.4byte	.LASF156
 1168 03de 92       		.byte	0x92
 1169 03df 04       		.uleb128 0x4
 1170 03e0 840E0000 		.4byte	.LASF157
 1171 03e4 F0       		.byte	0xf0
 1172 03e5 00       		.byte	0
 1173 03e6 05       		.uleb128 0x5
 1174 03e7 02       		.byte	0x2
 1175 03e8 05       		.byte	0x5
 1176 03e9 C4030000 		.4byte	.LASF158
 1177 03ed 06       		.uleb128 0x6
 1178 03ee DF0A0000 		.4byte	.LASF160
 1179 03f2 06       		.byte	0x6
 1180 03f3 F4       		.byte	0xf4
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 122


 1181 03f4 25000000 		.4byte	0x25
 1182 03f8 05       		.uleb128 0x5
 1183 03f9 01       		.byte	0x1
 1184 03fa 06       		.byte	0x6
 1185 03fb 131E0000 		.4byte	.LASF159
 1186 03ff 06       		.uleb128 0x6
 1187 0400 871D0000 		.4byte	.LASF161
 1188 0404 07       		.byte	0x7
 1189 0405 1D       		.byte	0x1d
 1190 0406 0A040000 		.4byte	0x40a
 1191 040a 05       		.uleb128 0x5
 1192 040b 01       		.byte	0x1
 1193 040c 08       		.byte	0x8
 1194 040d 2C100000 		.4byte	.LASF162
 1195 0411 06       		.uleb128 0x6
 1196 0412 0C120000 		.4byte	.LASF163
 1197 0416 07       		.byte	0x7
 1198 0417 29       		.byte	0x29
 1199 0418 E6030000 		.4byte	0x3e6
 1200 041c 06       		.uleb128 0x6
 1201 041d 59090000 		.4byte	.LASF164
 1202 0421 07       		.byte	0x7
 1203 0422 2B       		.byte	0x2b
 1204 0423 27040000 		.4byte	0x427
 1205 0427 05       		.uleb128 0x5
 1206 0428 02       		.byte	0x2
 1207 0429 07       		.byte	0x7
 1208 042a 29150000 		.4byte	.LASF165
 1209 042e 06       		.uleb128 0x6
 1210 042f D2020000 		.4byte	.LASF166
 1211 0433 07       		.byte	0x7
 1212 0434 3F       		.byte	0x3f
 1213 0435 39040000 		.4byte	0x439
 1214 0439 05       		.uleb128 0x5
 1215 043a 04       		.byte	0x4
 1216 043b 05       		.byte	0x5
 1217 043c 2C170000 		.4byte	.LASF167
 1218 0440 06       		.uleb128 0x6
 1219 0441 2C1C0000 		.4byte	.LASF168
 1220 0445 07       		.byte	0x7
 1221 0446 41       		.byte	0x41
 1222 0447 4B040000 		.4byte	0x44b
 1223 044b 05       		.uleb128 0x5
 1224 044c 04       		.byte	0x4
 1225 044d 07       		.byte	0x7
 1226 044e 941A0000 		.4byte	.LASF169
 1227 0452 05       		.uleb128 0x5
 1228 0453 08       		.byte	0x8
 1229 0454 05       		.byte	0x5
 1230 0455 93100000 		.4byte	.LASF170
 1231 0459 05       		.uleb128 0x5
 1232 045a 08       		.byte	0x8
 1233 045b 07       		.byte	0x7
 1234 045c E0070000 		.4byte	.LASF171
 1235 0460 07       		.uleb128 0x7
 1236 0461 04       		.byte	0x4
 1237 0462 05       		.byte	0x5
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 123


 1238 0463 696E7400 		.ascii	"int\000"
 1239 0467 05       		.uleb128 0x5
 1240 0468 04       		.byte	0x4
 1241 0469 07       		.byte	0x7
 1242 046a 1C020000 		.4byte	.LASF172
 1243 046e 06       		.uleb128 0x6
 1244 046f 8B0F0000 		.4byte	.LASF173
 1245 0473 08       		.byte	0x8
 1246 0474 18       		.byte	0x18
 1247 0475 FF030000 		.4byte	0x3ff
 1248 0479 06       		.uleb128 0x6
 1249 047a 14060000 		.4byte	.LASF174
 1250 047e 08       		.byte	0x8
 1251 047f 20       		.byte	0x20
 1252 0480 11040000 		.4byte	0x411
 1253 0484 06       		.uleb128 0x6
 1254 0485 48150000 		.4byte	.LASF175
 1255 0489 08       		.byte	0x8
 1256 048a 24       		.byte	0x24
 1257 048b 1C040000 		.4byte	0x41c
 1258 048f 06       		.uleb128 0x6
 1259 0490 E81A0000 		.4byte	.LASF176
 1260 0494 08       		.byte	0x8
 1261 0495 2C       		.byte	0x2c
 1262 0496 2E040000 		.4byte	0x42e
 1263 049a 06       		.uleb128 0x6
 1264 049b DA060000 		.4byte	.LASF177
 1265 049f 08       		.byte	0x8
 1266 04a0 30       		.byte	0x30
 1267 04a1 40040000 		.4byte	0x440
 1268 04a5 08       		.uleb128 0x8
 1269 04a6 040E     		.2byte	0xe04
 1270 04a8 02       		.byte	0x2
 1271 04a9 9B01     		.2byte	0x19b
 1272 04ab 61050000 		.4byte	0x561
 1273 04af 09       		.uleb128 0x9
 1274 04b0 74070000 		.4byte	.LASF178
 1275 04b4 02       		.byte	0x2
 1276 04b5 9D01     		.2byte	0x19d
 1277 04b7 7D050000 		.4byte	0x57d
 1278 04bb 00       		.byte	0
 1279 04bc 09       		.uleb128 0x9
 1280 04bd 6C160000 		.4byte	.LASF179
 1281 04c1 02       		.byte	0x2
 1282 04c2 9E01     		.2byte	0x19e
 1283 04c4 82050000 		.4byte	0x582
 1284 04c8 20       		.byte	0x20
 1285 04c9 09       		.uleb128 0x9
 1286 04ca 1E1D0000 		.4byte	.LASF180
 1287 04ce 02       		.byte	0x2
 1288 04cf 9F01     		.2byte	0x19f
 1289 04d1 92050000 		.4byte	0x592
 1290 04d5 80       		.byte	0x80
 1291 04d6 09       		.uleb128 0x9
 1292 04d7 821F0000 		.4byte	.LASF181
 1293 04db 02       		.byte	0x2
 1294 04dc A001     		.2byte	0x1a0
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 124


 1295 04de 82050000 		.4byte	0x582
 1296 04e2 A0       		.byte	0xa0
 1297 04e3 0A       		.uleb128 0xa
 1298 04e4 E31E0000 		.4byte	.LASF182
 1299 04e8 02       		.byte	0x2
 1300 04e9 A101     		.2byte	0x1a1
 1301 04eb 97050000 		.4byte	0x597
 1302 04ef 0001     		.2byte	0x100
 1303 04f1 0A       		.uleb128 0xa
 1304 04f2 88160000 		.4byte	.LASF183
 1305 04f6 02       		.byte	0x2
 1306 04f7 A201     		.2byte	0x1a2
 1307 04f9 82050000 		.4byte	0x582
 1308 04fd 2001     		.2byte	0x120
 1309 04ff 0A       		.uleb128 0xa
 1310 0500 25140000 		.4byte	.LASF184
 1311 0504 02       		.byte	0x2
 1312 0505 A301     		.2byte	0x1a3
 1313 0507 9C050000 		.4byte	0x59c
 1314 050b 8001     		.2byte	0x180
 1315 050d 0A       		.uleb128 0xa
 1316 050e 92160000 		.4byte	.LASF185
 1317 0512 02       		.byte	0x2
 1318 0513 A401     		.2byte	0x1a4
 1319 0515 82050000 		.4byte	0x582
 1320 0519 A001     		.2byte	0x1a0
 1321 051b 0A       		.uleb128 0xa
 1322 051c 521D0000 		.4byte	.LASF186
 1323 0520 02       		.byte	0x2
 1324 0521 A501     		.2byte	0x1a5
 1325 0523 A1050000 		.4byte	0x5a1
 1326 0527 0002     		.2byte	0x200
 1327 0529 0A       		.uleb128 0xa
 1328 052a 55080000 		.4byte	.LASF187
 1329 052e 02       		.byte	0x2
 1330 052f A601     		.2byte	0x1a6
 1331 0531 A6050000 		.4byte	0x5a6
 1332 0535 2002     		.2byte	0x220
 1333 0537 0B       		.uleb128 0xb
 1334 0538 495000   		.ascii	"IP\000"
 1335 053b 02       		.byte	0x2
 1336 053c A701     		.2byte	0x1a7
 1337 053e CB050000 		.4byte	0x5cb
 1338 0542 0003     		.2byte	0x300
 1339 0544 0A       		.uleb128 0xa
 1340 0545 C2160000 		.4byte	.LASF188
 1341 0549 02       		.byte	0x2
 1342 054a A801     		.2byte	0x1a8
 1343 054c D0050000 		.4byte	0x5d0
 1344 0550 F003     		.2byte	0x3f0
 1345 0552 0A       		.uleb128 0xa
 1346 0553 17020000 		.4byte	.LASF189
 1347 0557 02       		.byte	0x2
 1348 0558 A901     		.2byte	0x1a9
 1349 055a 78050000 		.4byte	0x578
 1350 055e 000E     		.2byte	0xe00
 1351 0560 00       		.byte	0
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 125


 1352 0561 0C       		.uleb128 0xc
 1353 0562 78050000 		.4byte	0x578
 1354 0566 71050000 		.4byte	0x571
 1355 056a 0D       		.uleb128 0xd
 1356 056b 71050000 		.4byte	0x571
 1357 056f 07       		.byte	0x7
 1358 0570 00       		.byte	0
 1359 0571 05       		.uleb128 0x5
 1360 0572 04       		.byte	0x4
 1361 0573 07       		.byte	0x7
 1362 0574 39160000 		.4byte	.LASF190
 1363 0578 0E       		.uleb128 0xe
 1364 0579 9A040000 		.4byte	0x49a
 1365 057d 0E       		.uleb128 0xe
 1366 057e 61050000 		.4byte	0x561
 1367 0582 0C       		.uleb128 0xc
 1368 0583 9A040000 		.4byte	0x49a
 1369 0587 92050000 		.4byte	0x592
 1370 058b 0D       		.uleb128 0xd
 1371 058c 71050000 		.4byte	0x571
 1372 0590 17       		.byte	0x17
 1373 0591 00       		.byte	0
 1374 0592 0E       		.uleb128 0xe
 1375 0593 61050000 		.4byte	0x561
 1376 0597 0E       		.uleb128 0xe
 1377 0598 61050000 		.4byte	0x561
 1378 059c 0E       		.uleb128 0xe
 1379 059d 61050000 		.4byte	0x561
 1380 05a1 0E       		.uleb128 0xe
 1381 05a2 61050000 		.4byte	0x561
 1382 05a6 0C       		.uleb128 0xc
 1383 05a7 9A040000 		.4byte	0x49a
 1384 05ab B6050000 		.4byte	0x5b6
 1385 05af 0D       		.uleb128 0xd
 1386 05b0 71050000 		.4byte	0x571
 1387 05b4 37       		.byte	0x37
 1388 05b5 00       		.byte	0
 1389 05b6 0C       		.uleb128 0xc
 1390 05b7 C6050000 		.4byte	0x5c6
 1391 05bb C6050000 		.4byte	0x5c6
 1392 05bf 0D       		.uleb128 0xd
 1393 05c0 71050000 		.4byte	0x571
 1394 05c4 EF       		.byte	0xef
 1395 05c5 00       		.byte	0
 1396 05c6 0E       		.uleb128 0xe
 1397 05c7 6E040000 		.4byte	0x46e
 1398 05cb 0E       		.uleb128 0xe
 1399 05cc B6050000 		.4byte	0x5b6
 1400 05d0 0C       		.uleb128 0xc
 1401 05d1 9A040000 		.4byte	0x49a
 1402 05d5 E1050000 		.4byte	0x5e1
 1403 05d9 0F       		.uleb128 0xf
 1404 05da 71050000 		.4byte	0x571
 1405 05de 8302     		.2byte	0x283
 1406 05e0 00       		.byte	0
 1407 05e1 10       		.uleb128 0x10
 1408 05e2 32190000 		.4byte	.LASF191
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 126


 1409 05e6 02       		.byte	0x2
 1410 05e7 AA01     		.2byte	0x1aa
 1411 05e9 A5040000 		.4byte	0x4a5
 1412 05ed 11       		.uleb128 0x11
 1413 05ee 78050000 		.4byte	0x578
 1414 05f2 0C       		.uleb128 0xc
 1415 05f3 ED050000 		.4byte	0x5ed
 1416 05f7 02060000 		.4byte	0x602
 1417 05fb 0D       		.uleb128 0xd
 1418 05fc 71050000 		.4byte	0x571
 1419 0600 01       		.byte	0x1
 1420 0601 00       		.byte	0
 1421 0602 0C       		.uleb128 0xc
 1422 0603 78050000 		.4byte	0x578
 1423 0607 12060000 		.4byte	0x612
 1424 060b 0D       		.uleb128 0xd
 1425 060c 71050000 		.4byte	0x571
 1426 0610 0F       		.byte	0xf
 1427 0611 00       		.byte	0
 1428 0612 0C       		.uleb128 0xc
 1429 0613 ED050000 		.4byte	0x5ed
 1430 0617 22060000 		.4byte	0x622
 1431 061b 0D       		.uleb128 0xd
 1432 061c 71050000 		.4byte	0x571
 1433 0620 0F       		.byte	0xf
 1434 0621 00       		.byte	0
 1435 0622 0C       		.uleb128 0xc
 1436 0623 ED050000 		.4byte	0x5ed
 1437 0627 32060000 		.4byte	0x632
 1438 062b 0D       		.uleb128 0xd
 1439 062c 71050000 		.4byte	0x571
 1440 0630 02       		.byte	0x2
 1441 0631 00       		.byte	0
 1442 0632 0C       		.uleb128 0xc
 1443 0633 ED050000 		.4byte	0x5ed
 1444 0637 42060000 		.4byte	0x642
 1445 063b 0D       		.uleb128 0xd
 1446 063c 71050000 		.4byte	0x571
 1447 0640 0E       		.byte	0xe
 1448 0641 00       		.byte	0
 1449 0642 12       		.uleb128 0x12
 1450 0643 080F     		.2byte	0xf08
 1451 0645 09       		.byte	0x9
 1452 0646 21       		.byte	0x21
 1453 0647 CA080000 		.4byte	0x8ca
 1454 064b 13       		.uleb128 0x13
 1455 064c 2E210000 		.4byte	.LASF192
 1456 0650 09       		.byte	0x9
 1457 0651 22       		.byte	0x22
 1458 0652 78050000 		.4byte	0x578
 1459 0656 00       		.byte	0
 1460 0657 13       		.uleb128 0x13
 1461 0658 121A0000 		.4byte	.LASF193
 1462 065c 09       		.byte	0x9
 1463 065d 23       		.byte	0x23
 1464 065e 78050000 		.4byte	0x578
 1465 0662 04       		.byte	0x4
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 127


 1466 0663 13       		.uleb128 0x13
 1467 0664 EE050000 		.4byte	.LASF194
 1468 0668 09       		.byte	0x9
 1469 0669 24       		.byte	0x24
 1470 066a CF080000 		.4byte	0x8cf
 1471 066e 08       		.byte	0x8
 1472 066f 13       		.uleb128 0x13
 1473 0670 22040000 		.4byte	.LASF195
 1474 0674 09       		.byte	0x9
 1475 0675 25       		.byte	0x25
 1476 0676 78050000 		.4byte	0x578
 1477 067a 10       		.byte	0x10
 1478 067b 13       		.uleb128 0x13
 1479 067c 40090000 		.4byte	.LASF196
 1480 0680 09       		.byte	0x9
 1481 0681 26       		.byte	0x26
 1482 0682 78050000 		.4byte	0x578
 1483 0686 14       		.byte	0x14
 1484 0687 13       		.uleb128 0x13
 1485 0688 02180000 		.4byte	.LASF197
 1486 068c 09       		.byte	0x9
 1487 068d 27       		.byte	0x27
 1488 068e 78050000 		.4byte	0x578
 1489 0692 18       		.byte	0x18
 1490 0693 13       		.uleb128 0x13
 1491 0694 810B0000 		.4byte	.LASF198
 1492 0698 09       		.byte	0x9
 1493 0699 28       		.byte	0x28
 1494 069a 78050000 		.4byte	0x578
 1495 069e 1C       		.byte	0x1c
 1496 069f 13       		.uleb128 0x13
 1497 06a0 A0010000 		.4byte	.LASF199
 1498 06a4 09       		.byte	0x9
 1499 06a5 29       		.byte	0x29
 1500 06a6 78050000 		.4byte	0x578
 1501 06aa 20       		.byte	0x20
 1502 06ab 13       		.uleb128 0x13
 1503 06ac 200D0000 		.4byte	.LASF200
 1504 06b0 09       		.byte	0x9
 1505 06b1 2A       		.byte	0x2a
 1506 06b2 78050000 		.4byte	0x578
 1507 06b6 24       		.byte	0x24
 1508 06b7 13       		.uleb128 0x13
 1509 06b8 821F0000 		.4byte	.LASF181
 1510 06bc 09       		.byte	0x9
 1511 06bd 2B       		.byte	0x2b
 1512 06be E9080000 		.4byte	0x8e9
 1513 06c2 28       		.byte	0x28
 1514 06c3 13       		.uleb128 0x13
 1515 06c4 581B0000 		.4byte	.LASF201
 1516 06c8 09       		.byte	0x9
 1517 06c9 2C       		.byte	0x2c
 1518 06ca EE080000 		.4byte	0x8ee
 1519 06ce 80       		.byte	0x80
 1520 06cf 13       		.uleb128 0x13
 1521 06d0 88160000 		.4byte	.LASF183
 1522 06d4 09       		.byte	0x9
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 128


 1523 06d5 2D       		.byte	0x2d
 1524 06d6 F8080000 		.4byte	0x8f8
 1525 06da C0       		.byte	0xc0
 1526 06db 14       		.uleb128 0x14
 1527 06dc 69180000 		.4byte	.LASF202
 1528 06e0 09       		.byte	0x9
 1529 06e1 2E       		.byte	0x2e
 1530 06e2 02090000 		.4byte	0x902
 1531 06e6 0001     		.2byte	0x100
 1532 06e8 14       		.uleb128 0x14
 1533 06e9 92160000 		.4byte	.LASF185
 1534 06ed 09       		.byte	0x9
 1535 06ee 2F       		.byte	0x2f
 1536 06ef 0C090000 		.4byte	0x90c
 1537 06f3 4001     		.2byte	0x140
 1538 06f5 14       		.uleb128 0x14
 1539 06f6 88120000 		.4byte	.LASF203
 1540 06fa 09       		.byte	0x9
 1541 06fb 30       		.byte	0x30
 1542 06fc 16090000 		.4byte	0x916
 1543 0700 8001     		.2byte	0x180
 1544 0702 14       		.uleb128 0x14
 1545 0703 55080000 		.4byte	.LASF187
 1546 0707 09       		.byte	0x9
 1547 0708 31       		.byte	0x31
 1548 0709 20090000 		.4byte	0x920
 1549 070d C001     		.2byte	0x1c0
 1550 070f 14       		.uleb128 0x14
 1551 0710 86000000 		.4byte	.LASF204
 1552 0714 09       		.byte	0x9
 1553 0715 32       		.byte	0x32
 1554 0716 ED050000 		.4byte	0x5ed
 1555 071a 0002     		.2byte	0x200
 1556 071c 14       		.uleb128 0x14
 1557 071d 0C1B0000 		.4byte	.LASF205
 1558 0721 09       		.byte	0x9
 1559 0722 33       		.byte	0x33
 1560 0723 ED050000 		.4byte	0x5ed
 1561 0727 0402     		.2byte	0x204
 1562 0729 14       		.uleb128 0x14
 1563 072a 04030000 		.4byte	.LASF206
 1564 072e 09       		.byte	0x9
 1565 072f 34       		.byte	0x34
 1566 0730 ED050000 		.4byte	0x5ed
 1567 0734 0802     		.2byte	0x208
 1568 0736 14       		.uleb128 0x14
 1569 0737 EF0E0000 		.4byte	.LASF207
 1570 073b 09       		.byte	0x9
 1571 073c 35       		.byte	0x35
 1572 073d ED050000 		.4byte	0x5ed
 1573 0741 0C02     		.2byte	0x20c
 1574 0743 14       		.uleb128 0x14
 1575 0744 FE0C0000 		.4byte	.LASF208
 1576 0748 09       		.byte	0x9
 1577 0749 36       		.byte	0x36
 1578 074a 78050000 		.4byte	0x578
 1579 074e 1002     		.2byte	0x210
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 129


 1580 0750 14       		.uleb128 0x14
 1581 0751 6B040000 		.4byte	.LASF209
 1582 0755 09       		.byte	0x9
 1583 0756 37       		.byte	0x37
 1584 0757 78050000 		.4byte	0x578
 1585 075b 1402     		.2byte	0x214
 1586 075d 14       		.uleb128 0x14
 1587 075e 03130000 		.4byte	.LASF210
 1588 0762 09       		.byte	0x9
 1589 0763 38       		.byte	0x38
 1590 0764 78050000 		.4byte	0x578
 1591 0768 1802     		.2byte	0x218
 1592 076a 14       		.uleb128 0x14
 1593 076b C7190000 		.4byte	.LASF211
 1594 076f 09       		.byte	0x9
 1595 0770 39       		.byte	0x39
 1596 0771 ED050000 		.4byte	0x5ed
 1597 0775 1C02     		.2byte	0x21c
 1598 0777 14       		.uleb128 0x14
 1599 0778 E9030000 		.4byte	.LASF212
 1600 077c 09       		.byte	0x9
 1601 077d 3A       		.byte	0x3a
 1602 077e 78050000 		.4byte	0x578
 1603 0782 2002     		.2byte	0x220
 1604 0784 14       		.uleb128 0x14
 1605 0785 EA0D0000 		.4byte	.LASF213
 1606 0789 09       		.byte	0x9
 1607 078a 3B       		.byte	0x3b
 1608 078b 78050000 		.4byte	0x578
 1609 078f 2402     		.2byte	0x224
 1610 0791 14       		.uleb128 0x14
 1611 0792 A41C0000 		.4byte	.LASF214
 1612 0796 09       		.byte	0x9
 1613 0797 3C       		.byte	0x3c
 1614 0798 78050000 		.4byte	0x578
 1615 079c 2802     		.2byte	0x228
 1616 079e 14       		.uleb128 0x14
 1617 079f 04170000 		.4byte	.LASF215
 1618 07a3 09       		.byte	0x9
 1619 07a4 3D       		.byte	0x3d
 1620 07a5 ED050000 		.4byte	0x5ed
 1621 07a9 2C02     		.2byte	0x22c
 1622 07ab 14       		.uleb128 0x14
 1623 07ac D6120000 		.4byte	.LASF216
 1624 07b0 09       		.byte	0x9
 1625 07b1 3E       		.byte	0x3e
 1626 07b2 78050000 		.4byte	0x578
 1627 07b6 3002     		.2byte	0x230
 1628 07b8 14       		.uleb128 0x14
 1629 07b9 1D100000 		.4byte	.LASF217
 1630 07bd 09       		.byte	0x9
 1631 07be 3F       		.byte	0x3f
 1632 07bf 78050000 		.4byte	0x578
 1633 07c3 3402     		.2byte	0x234
 1634 07c5 14       		.uleb128 0x14
 1635 07c6 610B0000 		.4byte	.LASF218
 1636 07ca 09       		.byte	0x9
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 130


 1637 07cb 40       		.byte	0x40
 1638 07cc 78050000 		.4byte	0x578
 1639 07d0 3802     		.2byte	0x238
 1640 07d2 14       		.uleb128 0x14
 1641 07d3 59000000 		.4byte	.LASF219
 1642 07d7 09       		.byte	0x9
 1643 07d8 41       		.byte	0x41
 1644 07d9 ED050000 		.4byte	0x5ed
 1645 07dd 3C02     		.2byte	0x23c
 1646 07df 14       		.uleb128 0x14
 1647 07e0 4E020000 		.4byte	.LASF220
 1648 07e4 09       		.byte	0x9
 1649 07e5 42       		.byte	0x42
 1650 07e6 ED050000 		.4byte	0x5ed
 1651 07ea 4002     		.2byte	0x240
 1652 07ec 14       		.uleb128 0x14
 1653 07ed C2160000 		.4byte	.LASF188
 1654 07f1 09       		.byte	0x9
 1655 07f2 43       		.byte	0x43
 1656 07f3 2A090000 		.4byte	0x92a
 1657 07f7 4402     		.2byte	0x244
 1658 07f9 14       		.uleb128 0x14
 1659 07fa 750A0000 		.4byte	.LASF221
 1660 07fe 09       		.byte	0x9
 1661 07ff 44       		.byte	0x44
 1662 0800 78050000 		.4byte	0x578
 1663 0804 8002     		.2byte	0x280
 1664 0806 14       		.uleb128 0x14
 1665 0807 CC160000 		.4byte	.LASF222
 1666 080b 09       		.byte	0x9
 1667 080c 45       		.byte	0x45
 1668 080d 34090000 		.4byte	0x934
 1669 0811 8402     		.2byte	0x284
 1670 0813 14       		.uleb128 0x14
 1671 0814 4A040000 		.4byte	.LASF223
 1672 0818 09       		.byte	0x9
 1673 0819 46       		.byte	0x46
 1674 081a ED050000 		.4byte	0x5ed
 1675 081e 9002     		.2byte	0x290
 1676 0820 14       		.uleb128 0x14
 1677 0821 A1080000 		.4byte	.LASF224
 1678 0825 09       		.byte	0x9
 1679 0826 47       		.byte	0x47
 1680 0827 3E090000 		.4byte	0x93e
 1681 082b 9402     		.2byte	0x294
 1682 082d 14       		.uleb128 0x14
 1683 082e A91F0000 		.4byte	.LASF225
 1684 0832 09       		.byte	0x9
 1685 0833 48       		.byte	0x48
 1686 0834 ED050000 		.4byte	0x5ed
 1687 0838 A002     		.2byte	0x2a0
 1688 083a 14       		.uleb128 0x14
 1689 083b 5A0F0000 		.4byte	.LASF226
 1690 083f 09       		.byte	0x9
 1691 0840 49       		.byte	0x49
 1692 0841 ED050000 		.4byte	0x5ed
 1693 0845 A402     		.2byte	0x2a4
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 131


 1694 0847 14       		.uleb128 0x14
 1695 0848 E5160000 		.4byte	.LASF227
 1696 084c 09       		.byte	0x9
 1697 084d 4A       		.byte	0x4a
 1698 084e 48090000 		.4byte	0x948
 1699 0852 A802     		.2byte	0x2a8
 1700 0854 14       		.uleb128 0x14
 1701 0855 001B0000 		.4byte	.LASF228
 1702 0859 09       		.byte	0x9
 1703 085a 4B       		.byte	0x4b
 1704 085b 78050000 		.4byte	0x578
 1705 085f 0003     		.2byte	0x300
 1706 0861 14       		.uleb128 0x14
 1707 0862 94130000 		.4byte	.LASF229
 1708 0866 09       		.byte	0x9
 1709 0867 4C       		.byte	0x4c
 1710 0868 78050000 		.4byte	0x578
 1711 086c 0403     		.2byte	0x304
 1712 086e 14       		.uleb128 0x14
 1713 086f 46200000 		.4byte	.LASF230
 1714 0873 09       		.byte	0x9
 1715 0874 4D       		.byte	0x4d
 1716 0875 62090000 		.4byte	0x962
 1717 0879 0803     		.2byte	0x308
 1718 087b 14       		.uleb128 0x14
 1719 087c 711E0000 		.4byte	.LASF231
 1720 0880 09       		.byte	0x9
 1721 0881 4E       		.byte	0x4e
 1722 0882 78050000 		.4byte	0x578
 1723 0886 4003     		.2byte	0x340
 1724 0888 14       		.uleb128 0x14
 1725 0889 19170000 		.4byte	.LASF232
 1726 088d 09       		.byte	0x9
 1727 088e 4F       		.byte	0x4f
 1728 088f 78050000 		.4byte	0x578
 1729 0893 4403     		.2byte	0x344
 1730 0895 14       		.uleb128 0x14
 1731 0896 D11E0000 		.4byte	.LASF233
 1732 089a 09       		.byte	0x9
 1733 089b 50       		.byte	0x50
 1734 089c ED050000 		.4byte	0x5ed
 1735 08a0 4803     		.2byte	0x348
 1736 08a2 14       		.uleb128 0x14
 1737 08a3 C61C0000 		.4byte	.LASF234
 1738 08a7 09       		.byte	0x9
 1739 08a8 51       		.byte	0x51
 1740 08a9 7D090000 		.4byte	0x97d
 1741 08ad 4C03     		.2byte	0x34c
 1742 08af 14       		.uleb128 0x14
 1743 08b0 181C0000 		.4byte	.LASF235
 1744 08b4 09       		.byte	0x9
 1745 08b5 52       		.byte	0x52
 1746 08b6 78050000 		.4byte	0x578
 1747 08ba 000F     		.2byte	0xf00
 1748 08bc 14       		.uleb128 0x14
 1749 08bd 221C0000 		.4byte	.LASF236
 1750 08c1 09       		.byte	0x9
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 132


 1751 08c2 53       		.byte	0x53
 1752 08c3 78050000 		.4byte	0x578
 1753 08c7 040F     		.2byte	0xf04
 1754 08c9 00       		.byte	0
 1755 08ca 0E       		.uleb128 0xe
 1756 08cb F2050000 		.4byte	0x5f2
 1757 08cf 11       		.uleb128 0x11
 1758 08d0 CA080000 		.4byte	0x8ca
 1759 08d4 0C       		.uleb128 0xc
 1760 08d5 ED050000 		.4byte	0x5ed
 1761 08d9 E4080000 		.4byte	0x8e4
 1762 08dd 0D       		.uleb128 0xd
 1763 08de 71050000 		.4byte	0x571
 1764 08e2 15       		.byte	0x15
 1765 08e3 00       		.byte	0
 1766 08e4 0E       		.uleb128 0xe
 1767 08e5 D4080000 		.4byte	0x8d4
 1768 08e9 11       		.uleb128 0x11
 1769 08ea E4080000 		.4byte	0x8e4
 1770 08ee 0E       		.uleb128 0xe
 1771 08ef 02060000 		.4byte	0x602
 1772 08f3 0E       		.uleb128 0xe
 1773 08f4 12060000 		.4byte	0x612
 1774 08f8 11       		.uleb128 0x11
 1775 08f9 F3080000 		.4byte	0x8f3
 1776 08fd 0E       		.uleb128 0xe
 1777 08fe 12060000 		.4byte	0x612
 1778 0902 11       		.uleb128 0x11
 1779 0903 FD080000 		.4byte	0x8fd
 1780 0907 0E       		.uleb128 0xe
 1781 0908 12060000 		.4byte	0x612
 1782 090c 11       		.uleb128 0x11
 1783 090d 07090000 		.4byte	0x907
 1784 0911 0E       		.uleb128 0xe
 1785 0912 12060000 		.4byte	0x612
 1786 0916 11       		.uleb128 0x11
 1787 0917 11090000 		.4byte	0x911
 1788 091b 0E       		.uleb128 0xe
 1789 091c 12060000 		.4byte	0x612
 1790 0920 11       		.uleb128 0x11
 1791 0921 1B090000 		.4byte	0x91b
 1792 0925 0E       		.uleb128 0xe
 1793 0926 32060000 		.4byte	0x632
 1794 092a 11       		.uleb128 0x11
 1795 092b 25090000 		.4byte	0x925
 1796 092f 0E       		.uleb128 0xe
 1797 0930 22060000 		.4byte	0x622
 1798 0934 11       		.uleb128 0x11
 1799 0935 2F090000 		.4byte	0x92f
 1800 0939 0E       		.uleb128 0xe
 1801 093a 22060000 		.4byte	0x622
 1802 093e 11       		.uleb128 0x11
 1803 093f 39090000 		.4byte	0x939
 1804 0943 0E       		.uleb128 0xe
 1805 0944 D4080000 		.4byte	0x8d4
 1806 0948 11       		.uleb128 0x11
 1807 0949 43090000 		.4byte	0x943
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 133


 1808 094d 0C       		.uleb128 0xc
 1809 094e ED050000 		.4byte	0x5ed
 1810 0952 5D090000 		.4byte	0x95d
 1811 0956 0D       		.uleb128 0xd
 1812 0957 71050000 		.4byte	0x571
 1813 095b 0D       		.byte	0xd
 1814 095c 00       		.byte	0
 1815 095d 0E       		.uleb128 0xe
 1816 095e 4D090000 		.4byte	0x94d
 1817 0962 11       		.uleb128 0x11
 1818 0963 5D090000 		.4byte	0x95d
 1819 0967 0C       		.uleb128 0xc
 1820 0968 ED050000 		.4byte	0x5ed
 1821 096c 78090000 		.4byte	0x978
 1822 0970 0F       		.uleb128 0xf
 1823 0971 71050000 		.4byte	0x571
 1824 0975 EC02     		.2byte	0x2ec
 1825 0977 00       		.byte	0
 1826 0978 0E       		.uleb128 0xe
 1827 0979 67090000 		.4byte	0x967
 1828 097d 11       		.uleb128 0x11
 1829 097e 78090000 		.4byte	0x978
 1830 0982 06       		.uleb128 0x6
 1831 0983 140D0000 		.4byte	.LASF237
 1832 0987 09       		.byte	0x9
 1833 0988 54       		.byte	0x54
 1834 0989 42060000 		.4byte	0x642
 1835 098d 10       		.uleb128 0x10
 1836 098e 1C060000 		.4byte	.LASF238
 1837 0992 0A       		.byte	0xa
 1838 0993 5206     		.2byte	0x652
 1839 0995 82090000 		.4byte	0x982
 1840 0999 05       		.uleb128 0x5
 1841 099a 08       		.byte	0x8
 1842 099b 04       		.byte	0x4
 1843 099c 3C150000 		.4byte	.LASF239
 1844 09a0 15       		.uleb128 0x15
 1845 09a1 B8       		.byte	0xb8
 1846 09a2 0B       		.byte	0xb
 1847 09a3 34       		.byte	0x34
 1848 09a4 B10D0000 		.4byte	0xdb1
 1849 09a8 13       		.uleb128 0x13
 1850 09a9 17030000 		.4byte	.LASF240
 1851 09ad 0B       		.byte	0xb
 1852 09ae 37       		.byte	0x37
 1853 09af 9A040000 		.4byte	0x49a
 1854 09b3 00       		.byte	0
 1855 09b4 13       		.uleb128 0x13
 1856 09b5 F7070000 		.4byte	.LASF241
 1857 09b9 0B       		.byte	0xb
 1858 09ba 38       		.byte	0x38
 1859 09bb 9A040000 		.4byte	0x49a
 1860 09bf 04       		.byte	0x4
 1861 09c0 13       		.uleb128 0x13
 1862 09c1 E1010000 		.4byte	.LASF242
 1863 09c5 0B       		.byte	0xb
 1864 09c6 39       		.byte	0x39
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 134


 1865 09c7 9A040000 		.4byte	0x49a
 1866 09cb 08       		.byte	0x8
 1867 09cc 13       		.uleb128 0x13
 1868 09cd 501B0000 		.4byte	.LASF243
 1869 09d1 0B       		.byte	0xb
 1870 09d2 3A       		.byte	0x3a
 1871 09d3 9A040000 		.4byte	0x49a
 1872 09d7 0C       		.byte	0xc
 1873 09d8 13       		.uleb128 0x13
 1874 09d9 CC170000 		.4byte	.LASF244
 1875 09dd 0B       		.byte	0xb
 1876 09de 3B       		.byte	0x3b
 1877 09df 9A040000 		.4byte	0x49a
 1878 09e3 10       		.byte	0x10
 1879 09e4 13       		.uleb128 0x13
 1880 09e5 6A120000 		.4byte	.LASF245
 1881 09e9 0B       		.byte	0xb
 1882 09ea 3C       		.byte	0x3c
 1883 09eb 9A040000 		.4byte	0x49a
 1884 09ef 14       		.byte	0x14
 1885 09f0 13       		.uleb128 0x13
 1886 09f1 E70B0000 		.4byte	.LASF246
 1887 09f5 0B       		.byte	0xb
 1888 09f6 3D       		.byte	0x3d
 1889 09f7 9A040000 		.4byte	0x49a
 1890 09fb 18       		.byte	0x18
 1891 09fc 13       		.uleb128 0x13
 1892 09fd 2E1F0000 		.4byte	.LASF247
 1893 0a01 0B       		.byte	0xb
 1894 0a02 3E       		.byte	0x3e
 1895 0a03 9A040000 		.4byte	0x49a
 1896 0a07 1C       		.byte	0x1c
 1897 0a08 13       		.uleb128 0x13
 1898 0a09 850A0000 		.4byte	.LASF248
 1899 0a0d 0B       		.byte	0xb
 1900 0a0e 3F       		.byte	0x3f
 1901 0a0f 9A040000 		.4byte	0x49a
 1902 0a13 20       		.byte	0x20
 1903 0a14 13       		.uleb128 0x13
 1904 0a15 DD100000 		.4byte	.LASF249
 1905 0a19 0B       		.byte	0xb
 1906 0a1a 40       		.byte	0x40
 1907 0a1b 9A040000 		.4byte	0x49a
 1908 0a1f 24       		.byte	0x24
 1909 0a20 13       		.uleb128 0x13
 1910 0a21 52170000 		.4byte	.LASF250
 1911 0a25 0B       		.byte	0xb
 1912 0a26 43       		.byte	0x43
 1913 0a27 6E040000 		.4byte	0x46e
 1914 0a2b 28       		.byte	0x28
 1915 0a2c 13       		.uleb128 0x13
 1916 0a2d 9F070000 		.4byte	.LASF251
 1917 0a31 0B       		.byte	0xb
 1918 0a32 44       		.byte	0x44
 1919 0a33 6E040000 		.4byte	0x46e
 1920 0a37 29       		.byte	0x29
 1921 0a38 13       		.uleb128 0x13
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 135


 1922 0a39 D3150000 		.4byte	.LASF252
 1923 0a3d 0B       		.byte	0xb
 1924 0a3e 45       		.byte	0x45
 1925 0a3f 6E040000 		.4byte	0x46e
 1926 0a43 2A       		.byte	0x2a
 1927 0a44 13       		.uleb128 0x13
 1928 0a45 AC170000 		.4byte	.LASF253
 1929 0a49 0B       		.byte	0xb
 1930 0a4a 46       		.byte	0x46
 1931 0a4b 6E040000 		.4byte	0x46e
 1932 0a4f 2B       		.byte	0x2b
 1933 0a50 13       		.uleb128 0x13
 1934 0a51 71170000 		.4byte	.LASF254
 1935 0a55 0B       		.byte	0xb
 1936 0a56 47       		.byte	0x47
 1937 0a57 6E040000 		.4byte	0x46e
 1938 0a5b 2C       		.byte	0x2c
 1939 0a5c 13       		.uleb128 0x13
 1940 0a5d 5D1A0000 		.4byte	.LASF255
 1941 0a61 0B       		.byte	0xb
 1942 0a62 48       		.byte	0x48
 1943 0a63 6E040000 		.4byte	0x46e
 1944 0a67 2D       		.byte	0x2d
 1945 0a68 13       		.uleb128 0x13
 1946 0a69 D9200000 		.4byte	.LASF256
 1947 0a6d 0B       		.byte	0xb
 1948 0a6e 49       		.byte	0x49
 1949 0a6f 6E040000 		.4byte	0x46e
 1950 0a73 2E       		.byte	0x2e
 1951 0a74 13       		.uleb128 0x13
 1952 0a75 E81E0000 		.4byte	.LASF257
 1953 0a79 0B       		.byte	0xb
 1954 0a7a 4A       		.byte	0x4a
 1955 0a7b 6E040000 		.4byte	0x46e
 1956 0a7f 2F       		.byte	0x2f
 1957 0a80 13       		.uleb128 0x13
 1958 0a81 CA050000 		.4byte	.LASF258
 1959 0a85 0B       		.byte	0xb
 1960 0a86 4B       		.byte	0x4b
 1961 0a87 6E040000 		.4byte	0x46e
 1962 0a8b 30       		.byte	0x30
 1963 0a8c 13       		.uleb128 0x13
 1964 0a8d 89130000 		.4byte	.LASF259
 1965 0a91 0B       		.byte	0xb
 1966 0a92 4E       		.byte	0x4e
 1967 0a93 6E040000 		.4byte	0x46e
 1968 0a97 31       		.byte	0x31
 1969 0a98 13       		.uleb128 0x13
 1970 0a99 4D1E0000 		.4byte	.LASF260
 1971 0a9d 0B       		.byte	0xb
 1972 0a9e 4F       		.byte	0x4f
 1973 0a9f 6E040000 		.4byte	0x46e
 1974 0aa3 32       		.byte	0x32
 1975 0aa4 13       		.uleb128 0x13
 1976 0aa5 F7120000 		.4byte	.LASF261
 1977 0aa9 0B       		.byte	0xb
 1978 0aaa 50       		.byte	0x50
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 136


 1979 0aab 6E040000 		.4byte	0x46e
 1980 0aaf 33       		.byte	0x33
 1981 0ab0 13       		.uleb128 0x13
 1982 0ab1 BD0D0000 		.4byte	.LASF262
 1983 0ab5 0B       		.byte	0xb
 1984 0ab6 51       		.byte	0x51
 1985 0ab7 6E040000 		.4byte	0x46e
 1986 0abb 34       		.byte	0x34
 1987 0abc 13       		.uleb128 0x13
 1988 0abd E50F0000 		.4byte	.LASF263
 1989 0ac1 0B       		.byte	0xb
 1990 0ac2 52       		.byte	0x52
 1991 0ac3 79040000 		.4byte	0x479
 1992 0ac7 36       		.byte	0x36
 1993 0ac8 13       		.uleb128 0x13
 1994 0ac9 3D030000 		.4byte	.LASF264
 1995 0acd 0B       		.byte	0xb
 1996 0ace 53       		.byte	0x53
 1997 0acf 79040000 		.4byte	0x479
 1998 0ad3 38       		.byte	0x38
 1999 0ad4 13       		.uleb128 0x13
 2000 0ad5 92030000 		.4byte	.LASF265
 2001 0ad9 0B       		.byte	0xb
 2002 0ada 54       		.byte	0x54
 2003 0adb 79040000 		.4byte	0x479
 2004 0adf 3A       		.byte	0x3a
 2005 0ae0 13       		.uleb128 0x13
 2006 0ae1 F5020000 		.4byte	.LASF266
 2007 0ae5 0B       		.byte	0xb
 2008 0ae6 55       		.byte	0x55
 2009 0ae7 6E040000 		.4byte	0x46e
 2010 0aeb 3C       		.byte	0x3c
 2011 0aec 13       		.uleb128 0x13
 2012 0aed E90A0000 		.4byte	.LASF267
 2013 0af1 0B       		.byte	0xb
 2014 0af2 56       		.byte	0x56
 2015 0af3 6E040000 		.4byte	0x46e
 2016 0af7 3D       		.byte	0x3d
 2017 0af8 13       		.uleb128 0x13
 2018 0af9 C5150000 		.4byte	.LASF268
 2019 0afd 0B       		.byte	0xb
 2020 0afe 57       		.byte	0x57
 2021 0aff 6E040000 		.4byte	0x46e
 2022 0b03 3E       		.byte	0x3e
 2023 0b04 13       		.uleb128 0x13
 2024 0b05 30120000 		.4byte	.LASF269
 2025 0b09 0B       		.byte	0xb
 2026 0b0a 58       		.byte	0x58
 2027 0b0b 6E040000 		.4byte	0x46e
 2028 0b0f 3F       		.byte	0x3f
 2029 0b10 13       		.uleb128 0x13
 2030 0b11 59020000 		.4byte	.LASF270
 2031 0b15 0B       		.byte	0xb
 2032 0b16 59       		.byte	0x59
 2033 0b17 6E040000 		.4byte	0x46e
 2034 0b1b 40       		.byte	0x40
 2035 0b1c 13       		.uleb128 0x13
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 137


 2036 0b1d 80190000 		.4byte	.LASF271
 2037 0b21 0B       		.byte	0xb
 2038 0b22 5A       		.byte	0x5a
 2039 0b23 6E040000 		.4byte	0x46e
 2040 0b27 41       		.byte	0x41
 2041 0b28 13       		.uleb128 0x13
 2042 0b29 DB1D0000 		.4byte	.LASF272
 2043 0b2d 0B       		.byte	0xb
 2044 0b2e 5B       		.byte	0x5b
 2045 0b2f 6E040000 		.4byte	0x46e
 2046 0b33 42       		.byte	0x42
 2047 0b34 13       		.uleb128 0x13
 2048 0b35 D8140000 		.4byte	.LASF273
 2049 0b39 0B       		.byte	0xb
 2050 0b3a 5C       		.byte	0x5c
 2051 0b3b 6E040000 		.4byte	0x46e
 2052 0b3f 43       		.byte	0x43
 2053 0b40 13       		.uleb128 0x13
 2054 0b41 C80E0000 		.4byte	.LASF274
 2055 0b45 0B       		.byte	0xb
 2056 0b46 5D       		.byte	0x5d
 2057 0b47 6E040000 		.4byte	0x46e
 2058 0b4b 44       		.byte	0x44
 2059 0b4c 13       		.uleb128 0x13
 2060 0b4d BA170000 		.4byte	.LASF275
 2061 0b51 0B       		.byte	0xb
 2062 0b52 5E       		.byte	0x5e
 2063 0b53 9A040000 		.4byte	0x49a
 2064 0b57 48       		.byte	0x48
 2065 0b58 13       		.uleb128 0x13
 2066 0b59 74040000 		.4byte	.LASF276
 2067 0b5d 0B       		.byte	0xb
 2068 0b5e 5F       		.byte	0x5f
 2069 0b5f 9A040000 		.4byte	0x49a
 2070 0b63 4C       		.byte	0x4c
 2071 0b64 13       		.uleb128 0x13
 2072 0b65 B91D0000 		.4byte	.LASF277
 2073 0b69 0B       		.byte	0xb
 2074 0b6a 60       		.byte	0x60
 2075 0b6b 6E040000 		.4byte	0x46e
 2076 0b6f 50       		.byte	0x50
 2077 0b70 13       		.uleb128 0x13
 2078 0b71 4F0B0000 		.4byte	.LASF278
 2079 0b75 0B       		.byte	0xb
 2080 0b76 61       		.byte	0x61
 2081 0b77 6E040000 		.4byte	0x46e
 2082 0b7b 51       		.byte	0x51
 2083 0b7c 13       		.uleb128 0x13
 2084 0b7d 21030000 		.4byte	.LASF279
 2085 0b81 0B       		.byte	0xb
 2086 0b82 62       		.byte	0x62
 2087 0b83 6E040000 		.4byte	0x46e
 2088 0b87 52       		.byte	0x52
 2089 0b88 13       		.uleb128 0x13
 2090 0b89 AD070000 		.4byte	.LASF280
 2091 0b8d 0B       		.byte	0xb
 2092 0b8e 63       		.byte	0x63
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 138


 2093 0b8f 6E040000 		.4byte	0x46e
 2094 0b93 53       		.byte	0x53
 2095 0b94 13       		.uleb128 0x13
 2096 0b95 D11C0000 		.4byte	.LASF281
 2097 0b99 0B       		.byte	0xb
 2098 0b9a 64       		.byte	0x64
 2099 0b9b 6E040000 		.4byte	0x46e
 2100 0b9f 54       		.byte	0x54
 2101 0ba0 13       		.uleb128 0x13
 2102 0ba1 8C0B0000 		.4byte	.LASF282
 2103 0ba5 0B       		.byte	0xb
 2104 0ba6 65       		.byte	0x65
 2105 0ba7 6E040000 		.4byte	0x46e
 2106 0bab 55       		.byte	0x55
 2107 0bac 13       		.uleb128 0x13
 2108 0bad 00000000 		.4byte	.LASF283
 2109 0bb1 0B       		.byte	0xb
 2110 0bb2 66       		.byte	0x66
 2111 0bb3 6E040000 		.4byte	0x46e
 2112 0bb7 56       		.byte	0x56
 2113 0bb8 13       		.uleb128 0x13
 2114 0bb9 371F0000 		.4byte	.LASF284
 2115 0bbd 0B       		.byte	0xb
 2116 0bbe 67       		.byte	0x67
 2117 0bbf 6E040000 		.4byte	0x46e
 2118 0bc3 57       		.byte	0x57
 2119 0bc4 13       		.uleb128 0x13
 2120 0bc5 CB0A0000 		.4byte	.LASF285
 2121 0bc9 0B       		.byte	0xb
 2122 0bca 68       		.byte	0x68
 2123 0bcb 6E040000 		.4byte	0x46e
 2124 0bcf 58       		.byte	0x58
 2125 0bd0 13       		.uleb128 0x13
 2126 0bd1 B01F0000 		.4byte	.LASF286
 2127 0bd5 0B       		.byte	0xb
 2128 0bd6 69       		.byte	0x69
 2129 0bd7 6E040000 		.4byte	0x46e
 2130 0bdb 59       		.byte	0x59
 2131 0bdc 13       		.uleb128 0x13
 2132 0bdd FD1C0000 		.4byte	.LASF287
 2133 0be1 0B       		.byte	0xb
 2134 0be2 6E       		.byte	0x6e
 2135 0be3 84040000 		.4byte	0x484
 2136 0be7 5A       		.byte	0x5a
 2137 0be8 13       		.uleb128 0x13
 2138 0be9 0E020000 		.4byte	.LASF288
 2139 0bed 0B       		.byte	0xb
 2140 0bee 6F       		.byte	0x6f
 2141 0bef 84040000 		.4byte	0x484
 2142 0bf3 5C       		.byte	0x5c
 2143 0bf4 13       		.uleb128 0x13
 2144 0bf5 B4100000 		.4byte	.LASF289
 2145 0bf9 0B       		.byte	0xb
 2146 0bfa 70       		.byte	0x70
 2147 0bfb 6E040000 		.4byte	0x46e
 2148 0bff 5E       		.byte	0x5e
 2149 0c00 13       		.uleb128 0x13
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 139


 2150 0c01 5B1E0000 		.4byte	.LASF290
 2151 0c05 0B       		.byte	0xb
 2152 0c06 71       		.byte	0x71
 2153 0c07 6E040000 		.4byte	0x46e
 2154 0c0b 5F       		.byte	0x5f
 2155 0c0c 13       		.uleb128 0x13
 2156 0c0d 030D0000 		.4byte	.LASF291
 2157 0c11 0B       		.byte	0xb
 2158 0c12 72       		.byte	0x72
 2159 0c13 6E040000 		.4byte	0x46e
 2160 0c17 60       		.byte	0x60
 2161 0c18 13       		.uleb128 0x13
 2162 0c19 630F0000 		.4byte	.LASF292
 2163 0c1d 0B       		.byte	0xb
 2164 0c1e 73       		.byte	0x73
 2165 0c1f 9A040000 		.4byte	0x49a
 2166 0c23 64       		.byte	0x64
 2167 0c24 13       		.uleb128 0x13
 2168 0c25 09210000 		.4byte	.LASF293
 2169 0c29 0B       		.byte	0xb
 2170 0c2a 76       		.byte	0x76
 2171 0c2b 84040000 		.4byte	0x484
 2172 0c2f 68       		.byte	0x68
 2173 0c30 13       		.uleb128 0x13
 2174 0c31 56150000 		.4byte	.LASF294
 2175 0c35 0B       		.byte	0xb
 2176 0c36 77       		.byte	0x77
 2177 0c37 84040000 		.4byte	0x484
 2178 0c3b 6A       		.byte	0x6a
 2179 0c3c 13       		.uleb128 0x13
 2180 0c3d C7120000 		.4byte	.LASF295
 2181 0c41 0B       		.byte	0xb
 2182 0c42 78       		.byte	0x78
 2183 0c43 84040000 		.4byte	0x484
 2184 0c47 6C       		.byte	0x6c
 2185 0c48 13       		.uleb128 0x13
 2186 0c49 B1040000 		.4byte	.LASF296
 2187 0c4d 0B       		.byte	0xb
 2188 0c4e 79       		.byte	0x79
 2189 0c4f 84040000 		.4byte	0x484
 2190 0c53 6E       		.byte	0x6e
 2191 0c54 13       		.uleb128 0x13
 2192 0c55 D10F0000 		.4byte	.LASF297
 2193 0c59 0B       		.byte	0xb
 2194 0c5a 7B       		.byte	0x7b
 2195 0c5b 6E040000 		.4byte	0x46e
 2196 0c5f 70       		.byte	0x70
 2197 0c60 13       		.uleb128 0x13
 2198 0c61 25060000 		.4byte	.LASF298
 2199 0c65 0B       		.byte	0xb
 2200 0c66 7C       		.byte	0x7c
 2201 0c67 6E040000 		.4byte	0x46e
 2202 0c6b 71       		.byte	0x71
 2203 0c6c 13       		.uleb128 0x13
 2204 0c6d 55040000 		.4byte	.LASF299
 2205 0c71 0B       		.byte	0xb
 2206 0c72 7D       		.byte	0x7d
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 140


 2207 0c73 6E040000 		.4byte	0x46e
 2208 0c77 72       		.byte	0x72
 2209 0c78 13       		.uleb128 0x13
 2210 0c79 C8080000 		.4byte	.LASF300
 2211 0c7d 0B       		.byte	0xb
 2212 0c7e 7E       		.byte	0x7e
 2213 0c7f 6E040000 		.4byte	0x46e
 2214 0c83 73       		.byte	0x73
 2215 0c84 13       		.uleb128 0x13
 2216 0c85 76160000 		.4byte	.LASF301
 2217 0c89 0B       		.byte	0xb
 2218 0c8a 80       		.byte	0x80
 2219 0c8b 84040000 		.4byte	0x484
 2220 0c8f 74       		.byte	0x74
 2221 0c90 13       		.uleb128 0x13
 2222 0c91 F2140000 		.4byte	.LASF302
 2223 0c95 0B       		.byte	0xb
 2224 0c96 81       		.byte	0x81
 2225 0c97 84040000 		.4byte	0x484
 2226 0c9b 76       		.byte	0x76
 2227 0c9c 13       		.uleb128 0x13
 2228 0c9d 6F0E0000 		.4byte	.LASF303
 2229 0ca1 0B       		.byte	0xb
 2230 0ca2 82       		.byte	0x82
 2231 0ca3 84040000 		.4byte	0x484
 2232 0ca7 78       		.byte	0x78
 2233 0ca8 13       		.uleb128 0x13
 2234 0ca9 78080000 		.4byte	.LASF304
 2235 0cad 0B       		.byte	0xb
 2236 0cae 83       		.byte	0x83
 2237 0caf 84040000 		.4byte	0x484
 2238 0cb3 7A       		.byte	0x7a
 2239 0cb4 13       		.uleb128 0x13
 2240 0cb5 3A100000 		.4byte	.LASF305
 2241 0cb9 0B       		.byte	0xb
 2242 0cba 86       		.byte	0x86
 2243 0cbb 6E040000 		.4byte	0x46e
 2244 0cbf 7C       		.byte	0x7c
 2245 0cc0 13       		.uleb128 0x13
 2246 0cc1 CA1D0000 		.4byte	.LASF306
 2247 0cc5 0B       		.byte	0xb
 2248 0cc6 87       		.byte	0x87
 2249 0cc7 6E040000 		.4byte	0x46e
 2250 0ccb 7D       		.byte	0x7d
 2251 0ccc 13       		.uleb128 0x13
 2252 0ccd 1E080000 		.4byte	.LASF307
 2253 0cd1 0B       		.byte	0xb
 2254 0cd2 88       		.byte	0x88
 2255 0cd3 6E040000 		.4byte	0x46e
 2256 0cd7 7E       		.byte	0x7e
 2257 0cd8 13       		.uleb128 0x13
 2258 0cd9 60070000 		.4byte	.LASF308
 2259 0cdd 0B       		.byte	0xb
 2260 0cde 89       		.byte	0x89
 2261 0cdf 6E040000 		.4byte	0x46e
 2262 0ce3 7F       		.byte	0x7f
 2263 0ce4 13       		.uleb128 0x13
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 141


 2264 0ce5 8D080000 		.4byte	.LASF309
 2265 0ce9 0B       		.byte	0xb
 2266 0cea 8A       		.byte	0x8a
 2267 0ceb 6E040000 		.4byte	0x46e
 2268 0cef 80       		.byte	0x80
 2269 0cf0 13       		.uleb128 0x13
 2270 0cf1 04010000 		.4byte	.LASF310
 2271 0cf5 0B       		.byte	0xb
 2272 0cf6 8D       		.byte	0x8d
 2273 0cf7 9A040000 		.4byte	0x49a
 2274 0cfb 84       		.byte	0x84
 2275 0cfc 13       		.uleb128 0x13
 2276 0cfd A2120000 		.4byte	.LASF311
 2277 0d01 0B       		.byte	0xb
 2278 0d02 8E       		.byte	0x8e
 2279 0d03 9A040000 		.4byte	0x49a
 2280 0d07 88       		.byte	0x88
 2281 0d08 13       		.uleb128 0x13
 2282 0d09 841E0000 		.4byte	.LASF312
 2283 0d0d 0B       		.byte	0xb
 2284 0d0e 8F       		.byte	0x8f
 2285 0d0f 9A040000 		.4byte	0x49a
 2286 0d13 8C       		.byte	0x8c
 2287 0d14 13       		.uleb128 0x13
 2288 0d15 641B0000 		.4byte	.LASF313
 2289 0d19 0B       		.byte	0xb
 2290 0d1a 90       		.byte	0x90
 2291 0d1b 9A040000 		.4byte	0x49a
 2292 0d1f 90       		.byte	0x90
 2293 0d20 13       		.uleb128 0x13
 2294 0d21 F4180000 		.4byte	.LASF314
 2295 0d25 0B       		.byte	0xb
 2296 0d26 91       		.byte	0x91
 2297 0d27 9A040000 		.4byte	0x49a
 2298 0d2b 94       		.byte	0x94
 2299 0d2c 13       		.uleb128 0x13
 2300 0d2d 3A060000 		.4byte	.LASF315
 2301 0d31 0B       		.byte	0xb
 2302 0d32 92       		.byte	0x92
 2303 0d33 9A040000 		.4byte	0x49a
 2304 0d37 98       		.byte	0x98
 2305 0d38 13       		.uleb128 0x13
 2306 0d39 EF190000 		.4byte	.LASF316
 2307 0d3d 0B       		.byte	0xb
 2308 0d3e 93       		.byte	0x93
 2309 0d3f 9A040000 		.4byte	0x49a
 2310 0d43 9C       		.byte	0x9c
 2311 0d44 13       		.uleb128 0x13
 2312 0d45 E80C0000 		.4byte	.LASF317
 2313 0d49 0B       		.byte	0xb
 2314 0d4a 94       		.byte	0x94
 2315 0d4b 9A040000 		.4byte	0x49a
 2316 0d4f A0       		.byte	0xa0
 2317 0d50 13       		.uleb128 0x13
 2318 0d51 F9010000 		.4byte	.LASF318
 2319 0d55 0B       		.byte	0xb
 2320 0d56 95       		.byte	0x95
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 142


 2321 0d57 84040000 		.4byte	0x484
 2322 0d5b A4       		.byte	0xa4
 2323 0d5c 13       		.uleb128 0x13
 2324 0d5d 57160000 		.4byte	.LASF319
 2325 0d61 0B       		.byte	0xb
 2326 0d62 96       		.byte	0x96
 2327 0d63 84040000 		.4byte	0x484
 2328 0d67 A6       		.byte	0xa6
 2329 0d68 13       		.uleb128 0x13
 2330 0d69 C01A0000 		.4byte	.LASF320
 2331 0d6d 0B       		.byte	0xb
 2332 0d6e 97       		.byte	0x97
 2333 0d6f 84040000 		.4byte	0x484
 2334 0d73 A8       		.byte	0xa8
 2335 0d74 13       		.uleb128 0x13
 2336 0d75 85100000 		.4byte	.LASF321
 2337 0d79 0B       		.byte	0xb
 2338 0d7a 98       		.byte	0x98
 2339 0d7b 84040000 		.4byte	0x484
 2340 0d7f AA       		.byte	0xaa
 2341 0d80 13       		.uleb128 0x13
 2342 0d81 B9120000 		.4byte	.LASF322
 2343 0d85 0B       		.byte	0xb
 2344 0d86 99       		.byte	0x99
 2345 0d87 84040000 		.4byte	0x484
 2346 0d8b AC       		.byte	0xac
 2347 0d8c 13       		.uleb128 0x13
 2348 0d8d FB130000 		.4byte	.LASF323
 2349 0d91 0B       		.byte	0xb
 2350 0d92 9A       		.byte	0x9a
 2351 0d93 84040000 		.4byte	0x484
 2352 0d97 AE       		.byte	0xae
 2353 0d98 13       		.uleb128 0x13
 2354 0d99 861A0000 		.4byte	.LASF324
 2355 0d9d 0B       		.byte	0xb
 2356 0d9e 9D       		.byte	0x9d
 2357 0d9f 84040000 		.4byte	0x484
 2358 0da3 B0       		.byte	0xb0
 2359 0da4 13       		.uleb128 0x13
 2360 0da5 98000000 		.4byte	.LASF325
 2361 0da9 0B       		.byte	0xb
 2362 0daa 9E       		.byte	0x9e
 2363 0dab 9A040000 		.4byte	0x49a
 2364 0daf B4       		.byte	0xb4
 2365 0db0 00       		.byte	0
 2366 0db1 06       		.uleb128 0x6
 2367 0db2 F01A0000 		.4byte	.LASF326
 2368 0db6 0B       		.byte	0xb
 2369 0db7 9F       		.byte	0x9f
 2370 0db8 A0090000 		.4byte	0x9a0
 2371 0dbc 10       		.uleb128 0x10
 2372 0dbd 371C0000 		.4byte	.LASF327
 2373 0dc1 0C       		.byte	0xc
 2374 0dc2 EE01     		.2byte	0x1ee
 2375 0dc4 C80D0000 		.4byte	0xdc8
 2376 0dc8 16       		.uleb128 0x16
 2377 0dc9 04       		.byte	0x4
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 143


 2378 0dca CE0D0000 		.4byte	0xdce
 2379 0dce 17       		.uleb128 0x17
 2380 0dcf 10       		.uleb128 0x10
 2381 0dd0 26180000 		.4byte	.LASF328
 2382 0dd4 0C       		.byte	0xc
 2383 0dd5 F601     		.2byte	0x1f6
 2384 0dd7 DB0D0000 		.4byte	0xddb
 2385 0ddb 05       		.uleb128 0x5
 2386 0ddc 01       		.byte	0x1
 2387 0ddd 08       		.byte	0x8
 2388 0dde 37010000 		.4byte	.LASF329
 2389 0de2 05       		.uleb128 0x5
 2390 0de3 04       		.byte	0x4
 2391 0de4 04       		.byte	0x4
 2392 0de5 99070000 		.4byte	.LASF330
 2393 0de9 05       		.uleb128 0x5
 2394 0dea 08       		.byte	0x8
 2395 0deb 04       		.byte	0x4
 2396 0dec 8F180000 		.4byte	.LASF331
 2397 0df0 10       		.uleb128 0x10
 2398 0df1 82130000 		.4byte	.LASF332
 2399 0df5 0C       		.byte	0xc
 2400 0df6 EC03     		.2byte	0x3ec
 2401 0df8 9A040000 		.4byte	0x49a
 2402 0dfc 18       		.uleb128 0x18
 2403 0dfd 04       		.byte	0x4
 2404 0dfe 67040000 		.4byte	0x467
 2405 0e02 04       		.byte	0x4
 2406 0e03 FE02     		.2byte	0x2fe
 2407 0e05 2B0E0000 		.4byte	0xe2b
 2408 0e09 04       		.uleb128 0x4
 2409 0e0a 0E100000 		.4byte	.LASF333
 2410 0e0e 00       		.byte	0
 2411 0e0f 19       		.uleb128 0x19
 2412 0e10 F00B0000 		.4byte	.LASF334
 2413 0e14 01000600 		.4byte	0x60001
 2414 0e18 19       		.uleb128 0x19
 2415 0e19 E3140000 		.4byte	.LASF335
 2416 0e1d 02000600 		.4byte	0x60002
 2417 0e21 19       		.uleb128 0x19
 2418 0e22 2D180000 		.4byte	.LASF336
 2419 0e26 03000600 		.4byte	0x60003
 2420 0e2a 00       		.byte	0
 2421 0e2b 10       		.uleb128 0x10
 2422 0e2c 930F0000 		.4byte	.LASF337
 2423 0e30 04       		.byte	0x4
 2424 0e31 0303     		.2byte	0x303
 2425 0e33 FC0D0000 		.4byte	0xdfc
 2426 0e37 18       		.uleb128 0x18
 2427 0e38 01       		.byte	0x1
 2428 0e39 0A040000 		.4byte	0x40a
 2429 0e3d 04       		.byte	0x4
 2430 0e3e 0703     		.2byte	0x307
 2431 0e40 510E0000 		.4byte	0xe51
 2432 0e44 04       		.uleb128 0x4
 2433 0e45 64140000 		.4byte	.LASF338
 2434 0e49 00       		.byte	0
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 144


 2435 0e4a 04       		.uleb128 0x4
 2436 0e4b 66200000 		.4byte	.LASF339
 2437 0e4f 01       		.byte	0x1
 2438 0e50 00       		.byte	0
 2439 0e51 10       		.uleb128 0x10
 2440 0e52 93040000 		.4byte	.LASF340
 2441 0e56 04       		.byte	0x4
 2442 0e57 0A03     		.2byte	0x30a
 2443 0e59 370E0000 		.4byte	0xe37
 2444 0e5d 18       		.uleb128 0x18
 2445 0e5e 01       		.byte	0x1
 2446 0e5f 0A040000 		.4byte	0x40a
 2447 0e63 04       		.byte	0x4
 2448 0e64 0E03     		.2byte	0x30e
 2449 0e66 770E0000 		.4byte	0xe77
 2450 0e6a 04       		.uleb128 0x4
 2451 0e6b 42160000 		.4byte	.LASF341
 2452 0e6f 00       		.byte	0
 2453 0e70 04       		.uleb128 0x4
 2454 0e71 740F0000 		.4byte	.LASF342
 2455 0e75 01       		.byte	0x1
 2456 0e76 00       		.byte	0
 2457 0e77 10       		.uleb128 0x10
 2458 0e78 2C0F0000 		.4byte	.LASF343
 2459 0e7c 04       		.byte	0x4
 2460 0e7d 1103     		.2byte	0x311
 2461 0e7f 5D0E0000 		.4byte	0xe5d
 2462 0e83 18       		.uleb128 0x18
 2463 0e84 01       		.byte	0x1
 2464 0e85 0A040000 		.4byte	0x40a
 2465 0e89 04       		.byte	0x4
 2466 0e8a 1503     		.2byte	0x315
 2467 0e8c 9D0E0000 		.4byte	0xe9d
 2468 0e90 04       		.uleb128 0x4
 2469 0e91 911C0000 		.4byte	.LASF344
 2470 0e95 00       		.byte	0
 2471 0e96 04       		.uleb128 0x4
 2472 0e97 EE1F0000 		.4byte	.LASF345
 2473 0e9b 01       		.byte	0x1
 2474 0e9c 00       		.byte	0
 2475 0e9d 18       		.uleb128 0x18
 2476 0e9e 01       		.byte	0x1
 2477 0e9f 0A040000 		.4byte	0x40a
 2478 0ea3 04       		.byte	0x4
 2479 0ea4 1C03     		.2byte	0x31c
 2480 0ea6 B70E0000 		.4byte	0xeb7
 2481 0eaa 04       		.uleb128 0x4
 2482 0eab 5C1D0000 		.4byte	.LASF346
 2483 0eaf 00       		.byte	0
 2484 0eb0 04       		.uleb128 0x4
 2485 0eb1 1B160000 		.4byte	.LASF347
 2486 0eb5 01       		.byte	0x1
 2487 0eb6 00       		.byte	0
 2488 0eb7 18       		.uleb128 0x18
 2489 0eb8 01       		.byte	0x1
 2490 0eb9 0A040000 		.4byte	0x40a
 2491 0ebd 04       		.byte	0x4
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 145


 2492 0ebe 1304     		.2byte	0x413
 2493 0ec0 DD0E0000 		.4byte	0xedd
 2494 0ec4 04       		.uleb128 0x4
 2495 0ec5 D6050000 		.4byte	.LASF348
 2496 0ec9 00       		.byte	0
 2497 0eca 04       		.uleb128 0x4
 2498 0ecb 70090000 		.4byte	.LASF349
 2499 0ecf 01       		.byte	0x1
 2500 0ed0 04       		.uleb128 0x4
 2501 0ed1 EA170000 		.4byte	.LASF350
 2502 0ed5 02       		.byte	0x2
 2503 0ed6 04       		.uleb128 0x4
 2504 0ed7 66020000 		.4byte	.LASF351
 2505 0edb 03       		.byte	0x3
 2506 0edc 00       		.byte	0
 2507 0edd 10       		.uleb128 0x10
 2508 0ede 23200000 		.4byte	.LASF352
 2509 0ee2 04       		.byte	0x4
 2510 0ee3 1804     		.2byte	0x418
 2511 0ee5 B70E0000 		.4byte	0xeb7
 2512 0ee9 18       		.uleb128 0x18
 2513 0eea 01       		.byte	0x1
 2514 0eeb 0A040000 		.4byte	0x40a
 2515 0eef 04       		.byte	0x4
 2516 0ef0 9404     		.2byte	0x494
 2517 0ef2 0F0F0000 		.4byte	0xf0f
 2518 0ef6 04       		.uleb128 0x4
 2519 0ef7 021C0000 		.4byte	.LASF353
 2520 0efb 00       		.byte	0
 2521 0efc 04       		.uleb128 0x4
 2522 0efd D20B0000 		.4byte	.LASF354
 2523 0f01 01       		.byte	0x1
 2524 0f02 04       		.uleb128 0x4
 2525 0f03 E8100000 		.4byte	.LASF355
 2526 0f07 02       		.byte	0x2
 2527 0f08 04       		.uleb128 0x4
 2528 0f09 4D110000 		.4byte	.LASF356
 2529 0f0d 04       		.byte	0x4
 2530 0f0e 00       		.byte	0
 2531 0f0f 1A       		.uleb128 0x1a
 2532 0f10 78       		.byte	0x78
 2533 0f11 04       		.byte	0x4
 2534 0f12 0205     		.2byte	0x502
 2535 0f14 DC0F0000 		.4byte	0xfdc
 2536 0f18 09       		.uleb128 0x9
 2537 0f19 571D0000 		.4byte	.LASF357
 2538 0f1d 04       		.byte	0x4
 2539 0f1e 0405     		.2byte	0x504
 2540 0f20 9A040000 		.4byte	0x49a
 2541 0f24 00       		.byte	0
 2542 0f25 09       		.uleb128 0x9
 2543 0f26 791B0000 		.4byte	.LASF358
 2544 0f2a 04       		.byte	0x4
 2545 0f2b 0505     		.2byte	0x505
 2546 0f2d 9A040000 		.4byte	0x49a
 2547 0f31 04       		.byte	0x4
 2548 0f32 09       		.uleb128 0x9
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 146


 2549 0f33 B8150000 		.4byte	.LASF359
 2550 0f37 04       		.byte	0x4
 2551 0f38 0605     		.2byte	0x506
 2552 0f3a 9A040000 		.4byte	0x49a
 2553 0f3e 08       		.byte	0x8
 2554 0f3f 09       		.uleb128 0x9
 2555 0f40 051A0000 		.4byte	.LASF360
 2556 0f44 04       		.byte	0x4
 2557 0f45 0705     		.2byte	0x507
 2558 0f47 9A040000 		.4byte	0x49a
 2559 0f4b 0C       		.byte	0xc
 2560 0f4c 09       		.uleb128 0x9
 2561 0f4d 4E090000 		.4byte	.LASF361
 2562 0f51 04       		.byte	0x4
 2563 0f52 0805     		.2byte	0x508
 2564 0f54 9A040000 		.4byte	0x49a
 2565 0f58 10       		.byte	0x10
 2566 0f59 09       		.uleb128 0x9
 2567 0f5a 7B100000 		.4byte	.LASF362
 2568 0f5e 04       		.byte	0x4
 2569 0f5f 0905     		.2byte	0x509
 2570 0f61 DD0E0000 		.4byte	0xedd
 2571 0f65 14       		.byte	0x14
 2572 0f66 09       		.uleb128 0x9
 2573 0f67 680E0000 		.4byte	.LASF363
 2574 0f6b 04       		.byte	0x4
 2575 0f6c 0A05     		.2byte	0x50a
 2576 0f6e 9A040000 		.4byte	0x49a
 2577 0f72 18       		.byte	0x18
 2578 0f73 09       		.uleb128 0x9
 2579 0f74 23130000 		.4byte	.LASF364
 2580 0f78 04       		.byte	0x4
 2581 0f79 0B05     		.2byte	0x50b
 2582 0f7b DC0F0000 		.4byte	0xfdc
 2583 0f7f 1C       		.byte	0x1c
 2584 0f80 09       		.uleb128 0x9
 2585 0f81 00210000 		.4byte	.LASF365
 2586 0f85 04       		.byte	0x4
 2587 0f86 0C05     		.2byte	0x50c
 2588 0f88 9A040000 		.4byte	0x49a
 2589 0f8c 5C       		.byte	0x5c
 2590 0f8d 09       		.uleb128 0x9
 2591 0f8e 87040000 		.4byte	.LASF366
 2592 0f92 04       		.byte	0x4
 2593 0f93 0D05     		.2byte	0x50d
 2594 0f95 9A040000 		.4byte	0x49a
 2595 0f99 60       		.byte	0x60
 2596 0f9a 09       		.uleb128 0x9
 2597 0f9b E01F0000 		.4byte	.LASF367
 2598 0f9f 04       		.byte	0x4
 2599 0fa0 0E05     		.2byte	0x50e
 2600 0fa2 9A040000 		.4byte	0x49a
 2601 0fa6 64       		.byte	0x64
 2602 0fa7 09       		.uleb128 0x9
 2603 0fa8 1F150000 		.4byte	.LASF368
 2604 0fac 04       		.byte	0x4
 2605 0fad 0F05     		.2byte	0x50f
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 147


 2606 0faf 9A040000 		.4byte	0x49a
 2607 0fb3 68       		.byte	0x68
 2608 0fb4 09       		.uleb128 0x9
 2609 0fb5 4F100000 		.4byte	.LASF369
 2610 0fb9 04       		.byte	0x4
 2611 0fba 1005     		.2byte	0x510
 2612 0fbc 9A040000 		.4byte	0x49a
 2613 0fc0 6C       		.byte	0x6c
 2614 0fc1 09       		.uleb128 0x9
 2615 0fc2 201F0000 		.4byte	.LASF370
 2616 0fc6 04       		.byte	0x4
 2617 0fc7 1105     		.2byte	0x511
 2618 0fc9 EC0F0000 		.4byte	0xfec
 2619 0fcd 70       		.byte	0x70
 2620 0fce 09       		.uleb128 0x9
 2621 0fcf 470D0000 		.4byte	.LASF371
 2622 0fd3 04       		.byte	0x4
 2623 0fd4 1205     		.2byte	0x512
 2624 0fd6 9A040000 		.4byte	0x49a
 2625 0fda 74       		.byte	0x74
 2626 0fdb 00       		.byte	0
 2627 0fdc 0C       		.uleb128 0xc
 2628 0fdd 9A040000 		.4byte	0x49a
 2629 0fe1 EC0F0000 		.4byte	0xfec
 2630 0fe5 0D       		.uleb128 0xd
 2631 0fe6 71050000 		.4byte	0x571
 2632 0fea 0F       		.byte	0xf
 2633 0feb 00       		.byte	0
 2634 0fec 05       		.uleb128 0x5
 2635 0fed 01       		.byte	0x1
 2636 0fee 02       		.byte	0x2
 2637 0fef 7B0B0000 		.4byte	.LASF372
 2638 0ff3 10       		.uleb128 0x10
 2639 0ff4 B6090000 		.4byte	.LASF373
 2640 0ff8 04       		.byte	0x4
 2641 0ff9 1305     		.2byte	0x513
 2642 0ffb 0F0F0000 		.4byte	0xf0f
 2643 0fff 15       		.uleb128 0x15
 2644 1000 10       		.byte	0x10
 2645 1001 05       		.byte	0x5
 2646 1002 3B       		.byte	0x3b
 2647 1003 38100000 		.4byte	0x1038
 2648 1007 13       		.uleb128 0x13
 2649 1008 31030000 		.4byte	.LASF374
 2650 100c 05       		.byte	0x5
 2651 100d 3D       		.byte	0x3d
 2652 100e 9A040000 		.4byte	0x49a
 2653 1012 00       		.byte	0
 2654 1013 13       		.uleb128 0x13
 2655 1014 D4070000 		.4byte	.LASF375
 2656 1018 05       		.byte	0x5
 2657 1019 3E       		.byte	0x3e
 2658 101a 9A040000 		.4byte	0x49a
 2659 101e 04       		.byte	0x4
 2660 101f 13       		.uleb128 0x13
 2661 1020 64030000 		.4byte	.LASF376
 2662 1024 05       		.byte	0x5
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 148


 2663 1025 3F       		.byte	0x3f
 2664 1026 38100000 		.4byte	0x1038
 2665 102a 08       		.byte	0x8
 2666 102b 13       		.uleb128 0x13
 2667 102c 3C190000 		.4byte	.LASF377
 2668 1030 05       		.byte	0x5
 2669 1031 40       		.byte	0x40
 2670 1032 9A040000 		.4byte	0x49a
 2671 1036 0C       		.byte	0xc
 2672 1037 00       		.byte	0
 2673 1038 16       		.uleb128 0x16
 2674 1039 04       		.byte	0x4
 2675 103a 3E100000 		.4byte	0x103e
 2676 103e 11       		.uleb128 0x11
 2677 103f F30F0000 		.4byte	0xff3
 2678 1043 06       		.uleb128 0x6
 2679 1044 3C010000 		.4byte	.LASF378
 2680 1048 05       		.byte	0x5
 2681 1049 48       		.byte	0x48
 2682 104a FF0F0000 		.4byte	0xfff
 2683 104e 1A       		.uleb128 0x1a
 2684 104f 08       		.byte	0x8
 2685 1050 0D       		.byte	0xd
 2686 1051 2D01     		.2byte	0x12d
 2687 1053 72100000 		.4byte	0x1072
 2688 1057 09       		.uleb128 0x9
 2689 1058 C10F0000 		.4byte	.LASF379
 2690 105c 0D       		.byte	0xd
 2691 105d 2E01     		.2byte	0x12e
 2692 105f ED030000 		.4byte	0x3ed
 2693 1063 00       		.byte	0
 2694 1064 09       		.uleb128 0x9
 2695 1065 1E1A0000 		.4byte	.LASF380
 2696 1069 0D       		.byte	0xd
 2697 106a 3201     		.2byte	0x132
 2698 106c 9A040000 		.4byte	0x49a
 2699 1070 04       		.byte	0x4
 2700 1071 00       		.byte	0
 2701 1072 10       		.uleb128 0x10
 2702 1073 30000000 		.4byte	.LASF381
 2703 1077 0D       		.byte	0xd
 2704 1078 3301     		.2byte	0x133
 2705 107a 4E100000 		.4byte	0x104e
 2706 107e 1B       		.uleb128 0x1b
 2707 107f 70030000 		.4byte	.LASF382
 2708 1083 03       		.byte	0x3
 2709 1084 A503     		.2byte	0x3a5
 2710 1086 03       		.byte	0x3
 2711 1087 1B       		.uleb128 0x1b
 2712 1088 D9130000 		.4byte	.LASF383
 2713 108c 03       		.byte	0x3
 2714 108d B003     		.2byte	0x3b0
 2715 108f 03       		.byte	0x3
 2716 1090 1C       		.uleb128 0x1c
 2717 1091 D6160000 		.4byte	.LASF384
 2718 1095 04       		.byte	0x4
 2719 1096 9E05     		.2byte	0x59e
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 149


 2720 1098 03       		.byte	0x3
 2721 1099 AA100000 		.4byte	0x10aa
 2722 109d 1D       		.uleb128 0x1d
 2723 109e FF000000 		.4byte	.LASF386
 2724 10a2 04       		.byte	0x4
 2725 10a3 9E05     		.2byte	0x59e
 2726 10a5 AA100000 		.4byte	0x10aa
 2727 10a9 00       		.byte	0
 2728 10aa 16       		.uleb128 0x16
 2729 10ab 04       		.byte	0x4
 2730 10ac 8D090000 		.4byte	0x98d
 2731 10b0 1C       		.uleb128 0x1c
 2732 10b1 841B0000 		.4byte	.LASF385
 2733 10b5 02       		.byte	0x2
 2734 10b6 9406     		.2byte	0x694
 2735 10b8 03       		.byte	0x3
 2736 10b9 CA100000 		.4byte	0x10ca
 2737 10bd 1D       		.uleb128 0x1d
 2738 10be 51150000 		.4byte	.LASF387
 2739 10c2 02       		.byte	0x2
 2740 10c3 9406     		.2byte	0x694
 2741 10c5 ED030000 		.4byte	0x3ed
 2742 10c9 00       		.byte	0
 2743 10ca 1C       		.uleb128 0x1c
 2744 10cb A6130000 		.4byte	.LASF388
 2745 10cf 02       		.byte	0x2
 2746 10d0 BA06     		.2byte	0x6ba
 2747 10d2 03       		.byte	0x3
 2748 10d3 E4100000 		.4byte	0x10e4
 2749 10d7 1D       		.uleb128 0x1d
 2750 10d8 51150000 		.4byte	.LASF387
 2751 10dc 02       		.byte	0x2
 2752 10dd BA06     		.2byte	0x6ba
 2753 10df ED030000 		.4byte	0x3ed
 2754 10e3 00       		.byte	0
 2755 10e4 1C       		.uleb128 0x1c
 2756 10e5 231D0000 		.4byte	.LASF389
 2757 10e9 04       		.byte	0x4
 2758 10ea 6D06     		.2byte	0x66d
 2759 10ec 03       		.byte	0x3
 2760 10ed 0A110000 		.4byte	0x110a
 2761 10f1 1D       		.uleb128 0x1d
 2762 10f2 FF000000 		.4byte	.LASF386
 2763 10f6 04       		.byte	0x4
 2764 10f7 6D06     		.2byte	0x66d
 2765 10f9 AA100000 		.4byte	0x10aa
 2766 10fd 1D       		.uleb128 0x1d
 2767 10fe 00210000 		.4byte	.LASF365
 2768 1102 04       		.byte	0x4
 2769 1103 6D06     		.2byte	0x66d
 2770 1105 9A040000 		.4byte	0x49a
 2771 1109 00       		.byte	0
 2772 110a 1C       		.uleb128 0x1c
 2773 110b 1E110000 		.4byte	.LASF390
 2774 110f 04       		.byte	0x4
 2775 1110 DB05     		.2byte	0x5db
 2776 1112 03       		.byte	0x3
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 150


 2777 1113 30110000 		.4byte	0x1130
 2778 1117 1D       		.uleb128 0x1d
 2779 1118 FF000000 		.4byte	.LASF386
 2780 111c 04       		.byte	0x4
 2781 111d DB05     		.2byte	0x5db
 2782 111f AA100000 		.4byte	0x10aa
 2783 1123 1D       		.uleb128 0x1d
 2784 1124 8A0C0000 		.4byte	.LASF391
 2785 1128 04       		.byte	0x4
 2786 1129 DB05     		.2byte	0x5db
 2787 112b 9A040000 		.4byte	0x49a
 2788 112f 00       		.byte	0
 2789 1130 1B       		.uleb128 0x1b
 2790 1131 9C110000 		.4byte	.LASF392
 2791 1135 05       		.byte	0x5
 2792 1136 9203     		.2byte	0x392
 2793 1138 03       		.byte	0x3
 2794 1139 1B       		.uleb128 0x1b
 2795 113a C6180000 		.4byte	.LASF393
 2796 113e 05       		.byte	0x5
 2797 113f AE03     		.2byte	0x3ae
 2798 1141 03       		.byte	0x3
 2799 1142 1E       		.uleb128 0x1e
 2800 1143 0E180000 		.4byte	.LASF394
 2801 1147 01       		.byte	0x1
 2802 1148 80       		.byte	0x80
 2803 1149 00000000 		.4byte	.LFB216
 2804 114d 1C000000 		.4byte	.LFE216-.LFB216
 2805 1151 01       		.uleb128 0x1
 2806 1152 9C       		.byte	0x9c
 2807 1153 9C110000 		.4byte	0x119c
 2808 1157 1F       		.uleb128 0x1f
 2809 1158 14160000 		.4byte	.LASF397
 2810 115c 01       		.byte	0x1
 2811 115d 80       		.byte	0x80
 2812 115e 9C110000 		.4byte	0x119c
 2813 1162 00000000 		.4byte	.LLST0
 2814 1166 20       		.uleb128 0x20
 2815 1167 121F0000 		.4byte	.LASF403
 2816 116b 01       		.byte	0x1
 2817 116c 82       		.byte	0x82
 2818 116d EC0F0000 		.4byte	0xfec
 2819 1171 00       		.byte	0
 2820 1172 21       		.uleb128 0x21
 2821 1173 0E000000 		.4byte	.LVL3
 2822 1177 59160000 		.4byte	0x1659
 2823 117b 8B110000 		.4byte	0x118b
 2824 117f 22       		.uleb128 0x22
 2825 1180 01       		.uleb128 0x1
 2826 1181 50       		.byte	0x50
 2827 1182 02       		.uleb128 0x2
 2828 1183 74       		.byte	0x74
 2829 1184 00       		.sleb128 0
 2830 1185 22       		.uleb128 0x22
 2831 1186 01       		.uleb128 0x1
 2832 1187 51       		.byte	0x51
 2833 1188 01       		.uleb128 0x1
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 151


 2834 1189 30       		.byte	0x30
 2835 118a 00       		.byte	0
 2836 118b 23       		.uleb128 0x23
 2837 118c 16000000 		.4byte	.LVL4
 2838 1190 65160000 		.4byte	0x1665
 2839 1194 22       		.uleb128 0x22
 2840 1195 01       		.uleb128 0x1
 2841 1196 50       		.byte	0x50
 2842 1197 02       		.uleb128 0x2
 2843 1198 74       		.byte	0x74
 2844 1199 00       		.sleb128 0
 2845 119a 00       		.byte	0
 2846 119b 00       		.byte	0
 2847 119c 16       		.uleb128 0x16
 2848 119d 04       		.byte	0x4
 2849 119e A2110000 		.4byte	0x11a2
 2850 11a2 11       		.uleb128 0x11
 2851 11a3 43100000 		.4byte	0x1043
 2852 11a7 1E       		.uleb128 0x1e
 2853 11a8 C3100000 		.4byte	.LASF395
 2854 11ac 01       		.byte	0x1
 2855 11ad E3       		.byte	0xe3
 2856 11ae 00000000 		.4byte	.LFB218
 2857 11b2 24000000 		.4byte	.LFE218-.LFB218
 2858 11b6 01       		.uleb128 0x1
 2859 11b7 9C       		.byte	0x9c
 2860 11b8 F1110000 		.4byte	0x11f1
 2861 11bc 21       		.uleb128 0x21
 2862 11bd 14000000 		.4byte	.LVL6
 2863 11c1 71160000 		.4byte	0x1671
 2864 11c5 D8110000 		.4byte	0x11d8
 2865 11c9 22       		.uleb128 0x22
 2866 11ca 01       		.uleb128 0x1
 2867 11cb 50       		.byte	0x50
 2868 11cc 05       		.uleb128 0x5
 2869 11cd 0C       		.byte	0xc
 2870 11ce 00001D41 		.4byte	0x411d0000
 2871 11d2 22       		.uleb128 0x22
 2872 11d3 01       		.uleb128 0x1
 2873 11d4 51       		.byte	0x51
 2874 11d5 01       		.uleb128 0x1
 2875 11d6 31       		.byte	0x31
 2876 11d7 00       		.byte	0
 2877 11d8 23       		.uleb128 0x23
 2878 11d9 1E000000 		.4byte	.LVL7
 2879 11dd 71160000 		.4byte	0x1671
 2880 11e1 22       		.uleb128 0x22
 2881 11e2 01       		.uleb128 0x1
 2882 11e3 50       		.byte	0x50
 2883 11e4 05       		.uleb128 0x5
 2884 11e5 0C       		.byte	0xc
 2885 11e6 00001D41 		.4byte	0x411d0000
 2886 11ea 22       		.uleb128 0x22
 2887 11eb 01       		.uleb128 0x1
 2888 11ec 51       		.byte	0x51
 2889 11ed 01       		.uleb128 0x1
 2890 11ee 30       		.byte	0x30
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 152


 2891 11ef 00       		.byte	0
 2892 11f0 00       		.byte	0
 2893 11f1 1E       		.uleb128 0x1e
 2894 11f2 31110000 		.4byte	.LASF396
 2895 11f6 01       		.byte	0x1
 2896 11f7 FE       		.byte	0xfe
 2897 11f8 00000000 		.4byte	.LFB219
 2898 11fc 20000000 		.4byte	.LFE219-.LFB219
 2899 1200 01       		.uleb128 0x1
 2900 1201 9C       		.byte	0x9c
 2901 1202 14120000 		.4byte	0x1214
 2902 1206 24       		.uleb128 0x24
 2903 1207 82040000 		.4byte	.LASF398
 2904 120b 01       		.byte	0x1
 2905 120c FE       		.byte	0xfe
 2906 120d 510E0000 		.4byte	0xe51
 2907 1211 01       		.uleb128 0x1
 2908 1212 50       		.byte	0x50
 2909 1213 00       		.byte	0
 2910 1214 25       		.uleb128 0x25
 2911 1215 C1200000 		.4byte	.LASF399
 2912 1219 01       		.byte	0x1
 2913 121a 1A01     		.2byte	0x11a
 2914 121c 00000000 		.4byte	.LFB220
 2915 1220 28000000 		.4byte	.LFE220-.LFB220
 2916 1224 01       		.uleb128 0x1
 2917 1225 9C       		.byte	0x9c
 2918 1226 45120000 		.4byte	0x1245
 2919 122a 26       		.uleb128 0x26
 2920 122b B0100000 		.4byte	0x10b0
 2921 122f 06000000 		.4byte	.LBB28
 2922 1233 22000000 		.4byte	.LBE28-.LBB28
 2923 1237 01       		.byte	0x1
 2924 1238 1E01     		.2byte	0x11e
 2925 123a 27       		.uleb128 0x27
 2926 123b BD100000 		.4byte	0x10bd
 2927 123f 2C000000 		.4byte	.LLST1
 2928 1243 00       		.byte	0
 2929 1244 00       		.byte	0
 2930 1245 25       		.uleb128 0x25
 2931 1246 3C120000 		.4byte	.LASF400
 2932 124a 01       		.byte	0x1
 2933 124b 3601     		.2byte	0x136
 2934 124d 00000000 		.4byte	.LFB221
 2935 1251 30000000 		.4byte	.LFE221-.LFB221
 2936 1255 01       		.uleb128 0x1
 2937 1256 9C       		.byte	0x9c
 2938 1257 96120000 		.4byte	0x1296
 2939 125b 26       		.uleb128 0x26
 2940 125c CA100000 		.4byte	0x10ca
 2941 1260 06000000 		.4byte	.LBB30
 2942 1264 2A000000 		.4byte	.LBE30-.LBB30
 2943 1268 01       		.byte	0x1
 2944 1269 3A01     		.2byte	0x13a
 2945 126b 27       		.uleb128 0x27
 2946 126c D7100000 		.4byte	0x10d7
 2947 1270 3F000000 		.4byte	.LLST2
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 153


 2948 1274 28       		.uleb128 0x28
 2949 1275 87100000 		.4byte	0x1087
 2950 1279 1E000000 		.4byte	.LBB32
 2951 127d 04000000 		.4byte	.LBE32-.LBB32
 2952 1281 02       		.byte	0x2
 2953 1282 BF06     		.2byte	0x6bf
 2954 1284 28       		.uleb128 0x28
 2955 1285 7E100000 		.4byte	0x107e
 2956 1289 22000000 		.4byte	.LBB34
 2957 128d 0E000000 		.4byte	.LBE34-.LBB34
 2958 1291 02       		.byte	0x2
 2959 1292 C006     		.2byte	0x6c0
 2960 1294 00       		.byte	0
 2961 1295 00       		.byte	0
 2962 1296 25       		.uleb128 0x25
 2963 1297 C2060000 		.4byte	.LASF401
 2964 129b 01       		.byte	0x1
 2965 129c 5201     		.2byte	0x152
 2966 129e 00000000 		.4byte	.LFB222
 2967 12a2 18000000 		.4byte	.LFE222-.LFB222
 2968 12a6 01       		.uleb128 0x1
 2969 12a7 9C       		.byte	0x9c
 2970 12a8 EE120000 		.4byte	0x12ee
 2971 12ac 29       		.uleb128 0x29
 2972 12ad B8130000 		.4byte	.LASF402
 2973 12b1 01       		.byte	0x1
 2974 12b2 5201     		.2byte	0x152
 2975 12b4 9A040000 		.4byte	0x49a
 2976 12b8 52000000 		.4byte	.LLST3
 2977 12bc 2A       		.uleb128 0x2a
 2978 12bd 02200000 		.4byte	.LASF404
 2979 12c1 01       		.byte	0x1
 2980 12c2 5401     		.2byte	0x154
 2981 12c4 9A040000 		.4byte	0x49a
 2982 12c8 01       		.uleb128 0x1
 2983 12c9 50       		.byte	0x50
 2984 12ca 26       		.uleb128 0x26
 2985 12cb E4100000 		.4byte	0x10e4
 2986 12cf 08000000 		.4byte	.LBB36
 2987 12d3 10000000 		.4byte	.LBE36-.LBB36
 2988 12d7 01       		.byte	0x1
 2989 12d8 5801     		.2byte	0x158
 2990 12da 27       		.uleb128 0x27
 2991 12db FD100000 		.4byte	0x10fd
 2992 12df 73000000 		.4byte	.LLST4
 2993 12e3 27       		.uleb128 0x27
 2994 12e4 F1100000 		.4byte	0x10f1
 2995 12e8 86000000 		.4byte	.LLST5
 2996 12ec 00       		.byte	0
 2997 12ed 00       		.byte	0
 2998 12ee 25       		.uleb128 0x25
 2999 12ef 5F080000 		.4byte	.LASF405
 3000 12f3 01       		.byte	0x1
 3001 12f4 6901     		.2byte	0x169
 3002 12f6 00000000 		.4byte	.LFB223
 3003 12fa 40000000 		.4byte	.LFE223-.LFB223
 3004 12fe 01       		.uleb128 0x1
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 154


 3005 12ff 9C       		.byte	0x9c
 3006 1300 62130000 		.4byte	0x1362
 3007 1304 29       		.uleb128 0x29
 3008 1305 8A0C0000 		.4byte	.LASF391
 3009 1309 01       		.byte	0x1
 3010 130a 6901     		.2byte	0x169
 3011 130c 9A040000 		.4byte	0x49a
 3012 1310 9E000000 		.4byte	.LLST6
 3013 1314 2B       		.uleb128 0x2b
 3014 1315 4A0C0000 		.4byte	.LASF406
 3015 1319 01       		.byte	0x1
 3016 131a 6B01     		.2byte	0x16b
 3017 131c F00D0000 		.4byte	0xdf0
 3018 1320 C8000000 		.4byte	.LLST7
 3019 1324 26       		.uleb128 0x26
 3020 1325 0A110000 		.4byte	0x110a
 3021 1329 18000000 		.4byte	.LBB38
 3022 132d 28000000 		.4byte	.LBE38-.LBB38
 3023 1331 01       		.byte	0x1
 3024 1332 6E01     		.2byte	0x16e
 3025 1334 27       		.uleb128 0x27
 3026 1335 23110000 		.4byte	0x1123
 3027 1339 DB000000 		.4byte	.LLST8
 3028 133d 27       		.uleb128 0x27
 3029 133e 17110000 		.4byte	0x1117
 3030 1342 EE000000 		.4byte	.LLST9
 3031 1346 23       		.uleb128 0x23
 3032 1347 28000000 		.4byte	.LVL22
 3033 134b 7D160000 		.4byte	0x167d
 3034 134f 22       		.uleb128 0x22
 3035 1350 01       		.uleb128 0x1
 3036 1351 50       		.byte	0x50
 3037 1352 05       		.uleb128 0x5
 3038 1353 03       		.byte	0x3
 3039 1354 00000000 		.4byte	.LC0
 3040 1358 22       		.uleb128 0x22
 3041 1359 01       		.uleb128 0x1
 3042 135a 51       		.byte	0x51
 3043 135b 03       		.uleb128 0x3
 3044 135c 0A       		.byte	0xa
 3045 135d DD05     		.2byte	0x5dd
 3046 135f 00       		.byte	0
 3047 1360 00       		.byte	0
 3048 1361 00       		.byte	0
 3049 1362 2C       		.uleb128 0x2c
 3050 1363 B5020000 		.4byte	.LASF442
 3051 1367 01       		.byte	0x1
 3052 1368 8201     		.2byte	0x182
 3053 136a 9A040000 		.4byte	0x49a
 3054 136e 00000000 		.4byte	.LFB224
 3055 1372 18000000 		.4byte	.LFE224-.LFB224
 3056 1376 01       		.uleb128 0x1
 3057 1377 9C       		.byte	0x9c
 3058 1378 C0130000 		.4byte	0x13c0
 3059 137c 29       		.uleb128 0x29
 3060 137d C90F0000 		.4byte	.LASF407
 3061 1381 01       		.byte	0x1
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 155


 3062 1382 8201     		.2byte	0x182
 3063 1384 770E0000 		.4byte	0xe77
 3064 1388 06010000 		.4byte	.LLST10
 3065 138c 2B       		.uleb128 0x2b
 3066 138d 1C0F0000 		.4byte	.LASF408
 3067 1391 01       		.byte	0x1
 3068 1392 8401     		.2byte	0x184
 3069 1394 F00D0000 		.4byte	0xdf0
 3070 1398 27010000 		.4byte	.LLST11
 3071 139c 2B       		.uleb128 0x2b
 3072 139d 4E080000 		.4byte	.LASF409
 3073 13a1 01       		.byte	0x1
 3074 13a2 8501     		.2byte	0x185
 3075 13a4 2B0E0000 		.4byte	0xe2b
 3076 13a8 46010000 		.4byte	.LLST12
 3077 13ac 23       		.uleb128 0x23
 3078 13ad 0A000000 		.4byte	.LVL28
 3079 13b1 89160000 		.4byte	0x1689
 3080 13b5 22       		.uleb128 0x22
 3081 13b6 01       		.uleb128 0x1
 3082 13b7 50       		.byte	0x50
 3083 13b8 05       		.uleb128 0x5
 3084 13b9 0C       		.byte	0xc
 3085 13ba 00001D41 		.4byte	0x411d0000
 3086 13be 00       		.byte	0
 3087 13bf 00       		.byte	0
 3088 13c0 25       		.uleb128 0x25
 3089 13c1 E3060000 		.4byte	.LASF410
 3090 13c5 01       		.byte	0x1
 3091 13c6 9F01     		.2byte	0x19f
 3092 13c8 00000000 		.4byte	.LFB225
 3093 13cc 34000000 		.4byte	.LFE225-.LFB225
 3094 13d0 01       		.uleb128 0x1
 3095 13d1 9C       		.byte	0x9c
 3096 13d2 F6130000 		.4byte	0x13f6
 3097 13d6 2D       		.uleb128 0x2d
 3098 13d7 710B0000 		.4byte	.LASF411
 3099 13db 01       		.byte	0x1
 3100 13dc A101     		.2byte	0x1a1
 3101 13de 9A040000 		.4byte	0x49a
 3102 13e2 00       		.byte	0
 3103 13e3 2E       		.uleb128 0x2e
 3104 13e4 10000000 		.4byte	.LVL33
 3105 13e8 95160000 		.4byte	0x1695
 3106 13ec 2E       		.uleb128 0x2e
 3107 13ed 22000000 		.4byte	.LVL34
 3108 13f1 42110000 		.4byte	0x1142
 3109 13f5 00       		.byte	0
 3110 13f6 1E       		.uleb128 0x1e
 3111 13f7 89090000 		.4byte	.LASF412
 3112 13fb 01       		.byte	0x1
 3113 13fc 41       		.byte	0x41
 3114 13fd 00000000 		.4byte	.LFB214
 3115 1401 2C000000 		.4byte	.LFE214-.LFB214
 3116 1405 01       		.uleb128 0x1
 3117 1406 9C       		.byte	0x9c
 3118 1407 3C140000 		.4byte	0x143c
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 156


 3119 140b 2F       		.uleb128 0x2f
 3120 140c 30110000 		.4byte	0x1130
 3121 1410 1A000000 		.4byte	.LBB40
 3122 1414 12000000 		.4byte	.LBE40-.LBB40
 3123 1418 01       		.byte	0x1
 3124 1419 49       		.byte	0x49
 3125 141a 32140000 		.4byte	0x1432
 3126 141e 23       		.uleb128 0x23
 3127 141f 20000000 		.4byte	.LVL36
 3128 1423 A1160000 		.4byte	0x16a1
 3129 1427 22       		.uleb128 0x22
 3130 1428 01       		.uleb128 0x1
 3131 1429 50       		.byte	0x50
 3132 142a 05       		.uleb128 0x5
 3133 142b 0C       		.byte	0xc
 3134 142c 00001D41 		.4byte	0x411d0000
 3135 1430 00       		.byte	0
 3136 1431 00       		.byte	0
 3137 1432 2E       		.uleb128 0x2e
 3138 1433 10000000 		.4byte	.LVL35
 3139 1437 C0130000 		.4byte	0x13c0
 3140 143b 00       		.byte	0
 3141 143c 1E       		.uleb128 0x1e
 3142 143d F7030000 		.4byte	.LASF413
 3143 1441 01       		.byte	0x1
 3144 1442 5E       		.byte	0x5e
 3145 1443 00000000 		.4byte	.LFB215
 3146 1447 38000000 		.4byte	.LFE215-.LFB215
 3147 144b 01       		.uleb128 0x1
 3148 144c 9C       		.byte	0x9c
 3149 144d 9D140000 		.4byte	0x149d
 3150 1451 1F       		.uleb128 0x1f
 3151 1452 2E130000 		.4byte	.LASF414
 3152 1456 01       		.byte	0x1
 3153 1457 5E       		.byte	0x5e
 3154 1458 BC0D0000 		.4byte	0xdbc
 3155 145c 64010000 		.4byte	.LLST13
 3156 1460 2F       		.uleb128 0x2f
 3157 1461 B0100000 		.4byte	0x10b0
 3158 1465 16000000 		.4byte	.LBB42
 3159 1469 22000000 		.4byte	.LBE42-.LBB42
 3160 146d 01       		.byte	0x1
 3161 146e 66       		.byte	0x66
 3162 146f 7D140000 		.4byte	0x147d
 3163 1473 27       		.uleb128 0x27
 3164 1474 BD100000 		.4byte	0x10bd
 3165 1478 90010000 		.4byte	.LLST14
 3166 147c 00       		.byte	0
 3167 147d 2E       		.uleb128 0x2e
 3168 147e 08000000 		.4byte	.LVL38
 3169 1482 F6130000 		.4byte	0x13f6
 3170 1486 23       		.uleb128 0x23
 3171 1487 12000000 		.4byte	.LVL39
 3172 148b 95160000 		.4byte	0x1695
 3173 148f 22       		.uleb128 0x22
 3174 1490 01       		.uleb128 0x1
 3175 1491 50       		.byte	0x50
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 157


 3176 1492 02       		.uleb128 0x2
 3177 1493 74       		.byte	0x74
 3178 1494 00       		.sleb128 0
 3179 1495 22       		.uleb128 0x22
 3180 1496 01       		.uleb128 0x1
 3181 1497 51       		.byte	0x51
 3182 1498 02       		.uleb128 0x2
 3183 1499 75       		.byte	0x75
 3184 149a 00       		.sleb128 0
 3185 149b 00       		.byte	0
 3186 149c 00       		.byte	0
 3187 149d 1E       		.uleb128 0x1e
 3188 149e 220A0000 		.4byte	.LASF415
 3189 14a2 01       		.byte	0x1
 3190 14a3 AA       		.byte	0xaa
 3191 14a4 00000000 		.4byte	.LFB217
 3192 14a8 54000000 		.4byte	.LFE217-.LFB217
 3193 14ac 01       		.uleb128 0x1
 3194 14ad 9C       		.byte	0x9c
 3195 14ae 23150000 		.4byte	0x1523
 3196 14b2 1F       		.uleb128 0x1f
 3197 14b3 14160000 		.4byte	.LASF397
 3198 14b7 01       		.byte	0x1
 3199 14b8 AA       		.byte	0xaa
 3200 14b9 9A040000 		.4byte	0x49a
 3201 14bd AF010000 		.4byte	.LLST15
 3202 14c1 1F       		.uleb128 0x1f
 3203 14c2 46020000 		.4byte	.LASF416
 3204 14c6 01       		.byte	0x1
 3205 14c7 AA       		.byte	0xaa
 3206 14c8 9A040000 		.4byte	0x49a
 3207 14cc D8010000 		.4byte	.LLST16
 3208 14d0 2F       		.uleb128 0x2f
 3209 14d1 39110000 		.4byte	0x1139
 3210 14d5 08000000 		.4byte	.LBB44
 3211 14d9 0A000000 		.4byte	.LBE44-.LBB44
 3212 14dd 01       		.byte	0x1
 3213 14de B0       		.byte	0xb0
 3214 14df FE140000 		.4byte	0x14fe
 3215 14e3 26       		.uleb128 0x26
 3216 14e4 90100000 		.4byte	0x1090
 3217 14e8 08000000 		.4byte	.LBB45
 3218 14ec 0A000000 		.4byte	.LBE45-.LBB45
 3219 14f0 05       		.byte	0x5
 3220 14f1 B003     		.2byte	0x3b0
 3221 14f3 27       		.uleb128 0x27
 3222 14f4 9D100000 		.4byte	0x109d
 3223 14f8 01020000 		.4byte	.LLST17
 3224 14fc 00       		.byte	0
 3225 14fd 00       		.byte	0
 3226 14fe 2E       		.uleb128 0x2e
 3227 14ff 20000000 		.4byte	.LVL47
 3228 1503 C0130000 		.4byte	0x13c0
 3229 1507 2E       		.uleb128 0x2e
 3230 1508 34000000 		.4byte	.LVL48
 3231 150c 42110000 		.4byte	0x1142
 3232 1510 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 158


 3233 1511 40000000 		.4byte	.LVL49
 3234 1515 F6130000 		.4byte	0x13f6
 3235 1519 2E       		.uleb128 0x2e
 3236 151a 44000000 		.4byte	.LVL50
 3237 151e A7110000 		.4byte	0x11a7
 3238 1522 00       		.byte	0
 3239 1523 06       		.uleb128 0x6
 3240 1524 B71C0000 		.4byte	.LASF417
 3241 1528 03       		.byte	0x3
 3242 1529 8B       		.byte	0x8b
 3243 152a 2C160000 		.4byte	0x162c
 3244 152e 16       		.uleb128 0x16
 3245 152f 04       		.byte	0x4
 3246 1530 34150000 		.4byte	0x1534
 3247 1534 11       		.uleb128 0x11
 3248 1535 9A040000 		.4byte	0x49a
 3249 1539 16       		.uleb128 0x16
 3250 153a 04       		.byte	0x4
 3251 153b 9A040000 		.4byte	0x49a
 3252 153f 30       		.uleb128 0x30
 3253 1540 55120000 		.4byte	.LASF418
 3254 1544 03       		.byte	0x3
 3255 1545 92       		.byte	0x92
 3256 1546 4A150000 		.4byte	0x154a
 3257 154a 11       		.uleb128 0x11
 3258 154b 23150000 		.4byte	0x1523
 3259 154f 30       		.uleb128 0x30
 3260 1550 A1100000 		.4byte	.LASF419
 3261 1554 03       		.byte	0x3
 3262 1555 93       		.byte	0x93
 3263 1556 4A150000 		.4byte	0x154a
 3264 155a 06       		.uleb128 0x6
 3265 155b 31090000 		.4byte	.LASF420
 3266 155f 03       		.byte	0x3
 3267 1560 90       		.byte	0x90
 3268 1561 0B160000 		.4byte	0x160b
 3269 1565 30       		.uleb128 0x30
 3270 1566 C5110000 		.4byte	.LASF421
 3271 156a 03       		.byte	0x3
 3272 156b 94       		.byte	0x94
 3273 156c 70150000 		.4byte	0x1570
 3274 1570 11       		.uleb128 0x11
 3275 1571 5A150000 		.4byte	0x155a
 3276 1575 30       		.uleb128 0x30
 3277 1576 96180000 		.4byte	.LASF422
 3278 157a 03       		.byte	0x3
 3279 157b 95       		.byte	0x95
 3280 157c 70150000 		.4byte	0x1570
 3281 1580 31       		.uleb128 0x31
 3282 1581 64170000 		.4byte	.LASF423
 3283 1585 02       		.byte	0x2
 3284 1586 0408     		.2byte	0x804
 3285 1588 8C150000 		.4byte	0x158c
 3286 158c 0E       		.uleb128 0xe
 3287 158d 8F040000 		.4byte	0x48f
 3288 1591 30       		.uleb128 0x30
 3289 1592 C6000000 		.4byte	.LASF424
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 159


 3290 1596 0B       		.byte	0xb
 3291 1597 A7       		.byte	0xa7
 3292 1598 9C150000 		.4byte	0x159c
 3293 159c 16       		.uleb128 0x16
 3294 159d 04       		.byte	0x4
 3295 159e A2150000 		.4byte	0x15a2
 3296 15a2 11       		.uleb128 0x11
 3297 15a3 B10D0000 		.4byte	0xdb1
 3298 15a7 32       		.uleb128 0x32
 3299 15a8 DA110000 		.4byte	.LASF425
 3300 15ac 01       		.byte	0x1
 3301 15ad 2B       		.byte	0x2b
 3302 15ae 6E040000 		.4byte	0x46e
 3303 15b2 05       		.uleb128 0x5
 3304 15b3 03       		.byte	0x3
 3305 15b4 00000000 		.4byte	DETECTOR_ADC_initVar
 3306 15b8 32       		.uleb128 0x32
 3307 15b9 081D0000 		.4byte	.LASF426
 3308 15bd 01       		.byte	0x1
 3309 15be 2C       		.byte	0x2c
 3310 15bf 6E040000 		.4byte	0x46e
 3311 15c3 05       		.uleb128 0x5
 3312 15c4 03       		.byte	0x3
 3313 15c5 00000000 		.4byte	DETECTOR_ADC_selected
 3314 15c9 32       		.uleb128 0x32
 3315 15ca 80020000 		.4byte	.LASF427
 3316 15ce 01       		.byte	0x1
 3317 15cf 2D       		.byte	0x2d
 3318 15d0 9A040000 		.4byte	0x49a
 3319 15d4 05       		.uleb128 0x5
 3320 15d5 03       		.byte	0x3
 3321 15d6 00000000 		.4byte	DETECTOR_ADC_currentConfig
 3322 15da 0C       		.uleb128 0xc
 3323 15db A2110000 		.4byte	0x11a2
 3324 15df EA150000 		.4byte	0x15ea
 3325 15e3 0D       		.uleb128 0xd
 3326 15e4 71050000 		.4byte	0x571
 3327 15e8 00       		.byte	0
 3328 15e9 00       		.byte	0
 3329 15ea 31       		.uleb128 0x31
 3330 15eb E7000000 		.4byte	.LASF428
 3331 15ef 05       		.byte	0x5
 3332 15f0 6401     		.2byte	0x164
 3333 15f2 F6150000 		.4byte	0x15f6
 3334 15f6 11       		.uleb128 0x11
 3335 15f7 DA150000 		.4byte	0x15da
 3336 15fb 30       		.uleb128 0x30
 3337 15fc 0E200000 		.4byte	.LASF429
 3338 1600 0E       		.byte	0xe
 3339 1601 1F       		.byte	0x1f
 3340 1602 06160000 		.4byte	0x1606
 3341 1606 11       		.uleb128 0x11
 3342 1607 72100000 		.4byte	0x1072
 3343 160b 15       		.uleb128 0x15
 3344 160c 08       		.byte	0x8
 3345 160d 03       		.byte	0x3
 3346 160e 8D       		.byte	0x8d
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 160


 3347 160f 2C160000 		.4byte	0x162c
 3348 1613 13       		.uleb128 0x13
 3349 1614 BC200000 		.4byte	.LASF430
 3350 1618 03       		.byte	0x3
 3351 1619 8E       		.byte	0x8e
 3352 161a 39150000 		.4byte	0x1539
 3353 161e 00       		.byte	0
 3354 161f 13       		.uleb128 0x13
 3355 1620 5F170000 		.4byte	.LASF431
 3356 1624 03       		.byte	0x3
 3357 1625 8F       		.byte	0x8f
 3358 1626 9A040000 		.4byte	0x49a
 3359 162a 04       		.byte	0x4
 3360 162b 00       		.byte	0
 3361 162c 15       		.uleb128 0x15
 3362 162d 0C       		.byte	0xc
 3363 162e 03       		.byte	0x3
 3364 162f 87       		.byte	0x87
 3365 1630 59160000 		.4byte	0x1659
 3366 1634 33       		.uleb128 0x33
 3367 1635 73726300 		.ascii	"src\000"
 3368 1639 03       		.byte	0x3
 3369 163a 88       		.byte	0x88
 3370 163b 2E150000 		.4byte	0x152e
 3371 163f 00       		.byte	0
 3372 1640 13       		.uleb128 0x13
 3373 1641 BC200000 		.4byte	.LASF430
 3374 1645 03       		.byte	0x3
 3375 1646 89       		.byte	0x89
 3376 1647 39150000 		.4byte	0x1539
 3377 164b 04       		.byte	0x4
 3378 164c 13       		.uleb128 0x13
 3379 164d 5F170000 		.4byte	.LASF431
 3380 1651 03       		.byte	0x3
 3381 1652 8A       		.byte	0x8a
 3382 1653 9A040000 		.4byte	0x49a
 3383 1657 08       		.byte	0x8
 3384 1658 00       		.byte	0
 3385 1659 34       		.uleb128 0x34
 3386 165a 270B0000 		.4byte	.LASF432
 3387 165e 270B0000 		.4byte	.LASF432
 3388 1662 04       		.byte	0x4
 3389 1663 3005     		.2byte	0x530
 3390 1665 34       		.uleb128 0x34
 3391 1666 7B1D0000 		.4byte	.LASF433
 3392 166a 7B1D0000 		.4byte	.LASF433
 3393 166e 04       		.byte	0x4
 3394 166f 2F05     		.2byte	0x52f
 3395 1671 34       		.uleb128 0x34
 3396 1672 74120000 		.4byte	.LASF434
 3397 1676 74120000 		.4byte	.LASF434
 3398 167a 04       		.byte	0x4
 3399 167b 3305     		.2byte	0x533
 3400 167d 34       		.uleb128 0x34
 3401 167e 350E0000 		.4byte	.LASF435
 3402 1682 350E0000 		.4byte	.LASF435
 3403 1686 0C       		.byte	0xc
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 161


 3404 1687 9203     		.2byte	0x392
 3405 1689 34       		.uleb128 0x34
 3406 168a 3B1D0000 		.4byte	.LASF436
 3407 168e 3B1D0000 		.4byte	.LASF436
 3408 1692 04       		.byte	0x4
 3409 1693 3505     		.2byte	0x535
 3410 1695 34       		.uleb128 0x34
 3411 1696 EA010000 		.4byte	.LASF437
 3412 169a EA010000 		.4byte	.LASF437
 3413 169e 0D       		.byte	0xd
 3414 169f 6601     		.2byte	0x166
 3415 16a1 34       		.uleb128 0x34
 3416 16a2 4F1A0000 		.4byte	.LASF438
 3417 16a6 4F1A0000 		.4byte	.LASF438
 3418 16aa 04       		.byte	0x4
 3419 16ab 3105     		.2byte	0x531
 3420 16ad 00       		.byte	0
 3421              		.section	.debug_abbrev,"",%progbits
 3422              	.Ldebug_abbrev0:
 3423 0000 01       		.uleb128 0x1
 3424 0001 11       		.uleb128 0x11
 3425 0002 01       		.byte	0x1
 3426 0003 25       		.uleb128 0x25
 3427 0004 0E       		.uleb128 0xe
 3428 0005 13       		.uleb128 0x13
 3429 0006 0B       		.uleb128 0xb
 3430 0007 03       		.uleb128 0x3
 3431 0008 0E       		.uleb128 0xe
 3432 0009 1B       		.uleb128 0x1b
 3433 000a 0E       		.uleb128 0xe
 3434 000b 55       		.uleb128 0x55
 3435 000c 17       		.uleb128 0x17
 3436 000d 11       		.uleb128 0x11
 3437 000e 01       		.uleb128 0x1
 3438 000f 10       		.uleb128 0x10
 3439 0010 17       		.uleb128 0x17
 3440 0011 00       		.byte	0
 3441 0012 00       		.byte	0
 3442 0013 02       		.uleb128 0x2
 3443 0014 04       		.uleb128 0x4
 3444 0015 01       		.byte	0x1
 3445 0016 0B       		.uleb128 0xb
 3446 0017 0B       		.uleb128 0xb
 3447 0018 49       		.uleb128 0x49
 3448 0019 13       		.uleb128 0x13
 3449 001a 3A       		.uleb128 0x3a
 3450 001b 0B       		.uleb128 0xb
 3451 001c 3B       		.uleb128 0x3b
 3452 001d 0B       		.uleb128 0xb
 3453 001e 01       		.uleb128 0x1
 3454 001f 13       		.uleb128 0x13
 3455 0020 00       		.byte	0
 3456 0021 00       		.byte	0
 3457 0022 03       		.uleb128 0x3
 3458 0023 28       		.uleb128 0x28
 3459 0024 00       		.byte	0
 3460 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 162


 3461 0026 0E       		.uleb128 0xe
 3462 0027 1C       		.uleb128 0x1c
 3463 0028 0D       		.uleb128 0xd
 3464 0029 00       		.byte	0
 3465 002a 00       		.byte	0
 3466 002b 04       		.uleb128 0x4
 3467 002c 28       		.uleb128 0x28
 3468 002d 00       		.byte	0
 3469 002e 03       		.uleb128 0x3
 3470 002f 0E       		.uleb128 0xe
 3471 0030 1C       		.uleb128 0x1c
 3472 0031 0B       		.uleb128 0xb
 3473 0032 00       		.byte	0
 3474 0033 00       		.byte	0
 3475 0034 05       		.uleb128 0x5
 3476 0035 24       		.uleb128 0x24
 3477 0036 00       		.byte	0
 3478 0037 0B       		.uleb128 0xb
 3479 0038 0B       		.uleb128 0xb
 3480 0039 3E       		.uleb128 0x3e
 3481 003a 0B       		.uleb128 0xb
 3482 003b 03       		.uleb128 0x3
 3483 003c 0E       		.uleb128 0xe
 3484 003d 00       		.byte	0
 3485 003e 00       		.byte	0
 3486 003f 06       		.uleb128 0x6
 3487 0040 16       		.uleb128 0x16
 3488 0041 00       		.byte	0
 3489 0042 03       		.uleb128 0x3
 3490 0043 0E       		.uleb128 0xe
 3491 0044 3A       		.uleb128 0x3a
 3492 0045 0B       		.uleb128 0xb
 3493 0046 3B       		.uleb128 0x3b
 3494 0047 0B       		.uleb128 0xb
 3495 0048 49       		.uleb128 0x49
 3496 0049 13       		.uleb128 0x13
 3497 004a 00       		.byte	0
 3498 004b 00       		.byte	0
 3499 004c 07       		.uleb128 0x7
 3500 004d 24       		.uleb128 0x24
 3501 004e 00       		.byte	0
 3502 004f 0B       		.uleb128 0xb
 3503 0050 0B       		.uleb128 0xb
 3504 0051 3E       		.uleb128 0x3e
 3505 0052 0B       		.uleb128 0xb
 3506 0053 03       		.uleb128 0x3
 3507 0054 08       		.uleb128 0x8
 3508 0055 00       		.byte	0
 3509 0056 00       		.byte	0
 3510 0057 08       		.uleb128 0x8
 3511 0058 13       		.uleb128 0x13
 3512 0059 01       		.byte	0x1
 3513 005a 0B       		.uleb128 0xb
 3514 005b 05       		.uleb128 0x5
 3515 005c 3A       		.uleb128 0x3a
 3516 005d 0B       		.uleb128 0xb
 3517 005e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 163


 3518 005f 05       		.uleb128 0x5
 3519 0060 01       		.uleb128 0x1
 3520 0061 13       		.uleb128 0x13
 3521 0062 00       		.byte	0
 3522 0063 00       		.byte	0
 3523 0064 09       		.uleb128 0x9
 3524 0065 0D       		.uleb128 0xd
 3525 0066 00       		.byte	0
 3526 0067 03       		.uleb128 0x3
 3527 0068 0E       		.uleb128 0xe
 3528 0069 3A       		.uleb128 0x3a
 3529 006a 0B       		.uleb128 0xb
 3530 006b 3B       		.uleb128 0x3b
 3531 006c 05       		.uleb128 0x5
 3532 006d 49       		.uleb128 0x49
 3533 006e 13       		.uleb128 0x13
 3534 006f 38       		.uleb128 0x38
 3535 0070 0B       		.uleb128 0xb
 3536 0071 00       		.byte	0
 3537 0072 00       		.byte	0
 3538 0073 0A       		.uleb128 0xa
 3539 0074 0D       		.uleb128 0xd
 3540 0075 00       		.byte	0
 3541 0076 03       		.uleb128 0x3
 3542 0077 0E       		.uleb128 0xe
 3543 0078 3A       		.uleb128 0x3a
 3544 0079 0B       		.uleb128 0xb
 3545 007a 3B       		.uleb128 0x3b
 3546 007b 05       		.uleb128 0x5
 3547 007c 49       		.uleb128 0x49
 3548 007d 13       		.uleb128 0x13
 3549 007e 38       		.uleb128 0x38
 3550 007f 05       		.uleb128 0x5
 3551 0080 00       		.byte	0
 3552 0081 00       		.byte	0
 3553 0082 0B       		.uleb128 0xb
 3554 0083 0D       		.uleb128 0xd
 3555 0084 00       		.byte	0
 3556 0085 03       		.uleb128 0x3
 3557 0086 08       		.uleb128 0x8
 3558 0087 3A       		.uleb128 0x3a
 3559 0088 0B       		.uleb128 0xb
 3560 0089 3B       		.uleb128 0x3b
 3561 008a 05       		.uleb128 0x5
 3562 008b 49       		.uleb128 0x49
 3563 008c 13       		.uleb128 0x13
 3564 008d 38       		.uleb128 0x38
 3565 008e 05       		.uleb128 0x5
 3566 008f 00       		.byte	0
 3567 0090 00       		.byte	0
 3568 0091 0C       		.uleb128 0xc
 3569 0092 01       		.uleb128 0x1
 3570 0093 01       		.byte	0x1
 3571 0094 49       		.uleb128 0x49
 3572 0095 13       		.uleb128 0x13
 3573 0096 01       		.uleb128 0x1
 3574 0097 13       		.uleb128 0x13
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 164


 3575 0098 00       		.byte	0
 3576 0099 00       		.byte	0
 3577 009a 0D       		.uleb128 0xd
 3578 009b 21       		.uleb128 0x21
 3579 009c 00       		.byte	0
 3580 009d 49       		.uleb128 0x49
 3581 009e 13       		.uleb128 0x13
 3582 009f 2F       		.uleb128 0x2f
 3583 00a0 0B       		.uleb128 0xb
 3584 00a1 00       		.byte	0
 3585 00a2 00       		.byte	0
 3586 00a3 0E       		.uleb128 0xe
 3587 00a4 35       		.uleb128 0x35
 3588 00a5 00       		.byte	0
 3589 00a6 49       		.uleb128 0x49
 3590 00a7 13       		.uleb128 0x13
 3591 00a8 00       		.byte	0
 3592 00a9 00       		.byte	0
 3593 00aa 0F       		.uleb128 0xf
 3594 00ab 21       		.uleb128 0x21
 3595 00ac 00       		.byte	0
 3596 00ad 49       		.uleb128 0x49
 3597 00ae 13       		.uleb128 0x13
 3598 00af 2F       		.uleb128 0x2f
 3599 00b0 05       		.uleb128 0x5
 3600 00b1 00       		.byte	0
 3601 00b2 00       		.byte	0
 3602 00b3 10       		.uleb128 0x10
 3603 00b4 16       		.uleb128 0x16
 3604 00b5 00       		.byte	0
 3605 00b6 03       		.uleb128 0x3
 3606 00b7 0E       		.uleb128 0xe
 3607 00b8 3A       		.uleb128 0x3a
 3608 00b9 0B       		.uleb128 0xb
 3609 00ba 3B       		.uleb128 0x3b
 3610 00bb 05       		.uleb128 0x5
 3611 00bc 49       		.uleb128 0x49
 3612 00bd 13       		.uleb128 0x13
 3613 00be 00       		.byte	0
 3614 00bf 00       		.byte	0
 3615 00c0 11       		.uleb128 0x11
 3616 00c1 26       		.uleb128 0x26
 3617 00c2 00       		.byte	0
 3618 00c3 49       		.uleb128 0x49
 3619 00c4 13       		.uleb128 0x13
 3620 00c5 00       		.byte	0
 3621 00c6 00       		.byte	0
 3622 00c7 12       		.uleb128 0x12
 3623 00c8 13       		.uleb128 0x13
 3624 00c9 01       		.byte	0x1
 3625 00ca 0B       		.uleb128 0xb
 3626 00cb 05       		.uleb128 0x5
 3627 00cc 3A       		.uleb128 0x3a
 3628 00cd 0B       		.uleb128 0xb
 3629 00ce 3B       		.uleb128 0x3b
 3630 00cf 0B       		.uleb128 0xb
 3631 00d0 01       		.uleb128 0x1
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 165


 3632 00d1 13       		.uleb128 0x13
 3633 00d2 00       		.byte	0
 3634 00d3 00       		.byte	0
 3635 00d4 13       		.uleb128 0x13
 3636 00d5 0D       		.uleb128 0xd
 3637 00d6 00       		.byte	0
 3638 00d7 03       		.uleb128 0x3
 3639 00d8 0E       		.uleb128 0xe
 3640 00d9 3A       		.uleb128 0x3a
 3641 00da 0B       		.uleb128 0xb
 3642 00db 3B       		.uleb128 0x3b
 3643 00dc 0B       		.uleb128 0xb
 3644 00dd 49       		.uleb128 0x49
 3645 00de 13       		.uleb128 0x13
 3646 00df 38       		.uleb128 0x38
 3647 00e0 0B       		.uleb128 0xb
 3648 00e1 00       		.byte	0
 3649 00e2 00       		.byte	0
 3650 00e3 14       		.uleb128 0x14
 3651 00e4 0D       		.uleb128 0xd
 3652 00e5 00       		.byte	0
 3653 00e6 03       		.uleb128 0x3
 3654 00e7 0E       		.uleb128 0xe
 3655 00e8 3A       		.uleb128 0x3a
 3656 00e9 0B       		.uleb128 0xb
 3657 00ea 3B       		.uleb128 0x3b
 3658 00eb 0B       		.uleb128 0xb
 3659 00ec 49       		.uleb128 0x49
 3660 00ed 13       		.uleb128 0x13
 3661 00ee 38       		.uleb128 0x38
 3662 00ef 05       		.uleb128 0x5
 3663 00f0 00       		.byte	0
 3664 00f1 00       		.byte	0
 3665 00f2 15       		.uleb128 0x15
 3666 00f3 13       		.uleb128 0x13
 3667 00f4 01       		.byte	0x1
 3668 00f5 0B       		.uleb128 0xb
 3669 00f6 0B       		.uleb128 0xb
 3670 00f7 3A       		.uleb128 0x3a
 3671 00f8 0B       		.uleb128 0xb
 3672 00f9 3B       		.uleb128 0x3b
 3673 00fa 0B       		.uleb128 0xb
 3674 00fb 01       		.uleb128 0x1
 3675 00fc 13       		.uleb128 0x13
 3676 00fd 00       		.byte	0
 3677 00fe 00       		.byte	0
 3678 00ff 16       		.uleb128 0x16
 3679 0100 0F       		.uleb128 0xf
 3680 0101 00       		.byte	0
 3681 0102 0B       		.uleb128 0xb
 3682 0103 0B       		.uleb128 0xb
 3683 0104 49       		.uleb128 0x49
 3684 0105 13       		.uleb128 0x13
 3685 0106 00       		.byte	0
 3686 0107 00       		.byte	0
 3687 0108 17       		.uleb128 0x17
 3688 0109 15       		.uleb128 0x15
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 166


 3689 010a 00       		.byte	0
 3690 010b 27       		.uleb128 0x27
 3691 010c 19       		.uleb128 0x19
 3692 010d 00       		.byte	0
 3693 010e 00       		.byte	0
 3694 010f 18       		.uleb128 0x18
 3695 0110 04       		.uleb128 0x4
 3696 0111 01       		.byte	0x1
 3697 0112 0B       		.uleb128 0xb
 3698 0113 0B       		.uleb128 0xb
 3699 0114 49       		.uleb128 0x49
 3700 0115 13       		.uleb128 0x13
 3701 0116 3A       		.uleb128 0x3a
 3702 0117 0B       		.uleb128 0xb
 3703 0118 3B       		.uleb128 0x3b
 3704 0119 05       		.uleb128 0x5
 3705 011a 01       		.uleb128 0x1
 3706 011b 13       		.uleb128 0x13
 3707 011c 00       		.byte	0
 3708 011d 00       		.byte	0
 3709 011e 19       		.uleb128 0x19
 3710 011f 28       		.uleb128 0x28
 3711 0120 00       		.byte	0
 3712 0121 03       		.uleb128 0x3
 3713 0122 0E       		.uleb128 0xe
 3714 0123 1C       		.uleb128 0x1c
 3715 0124 06       		.uleb128 0x6
 3716 0125 00       		.byte	0
 3717 0126 00       		.byte	0
 3718 0127 1A       		.uleb128 0x1a
 3719 0128 13       		.uleb128 0x13
 3720 0129 01       		.byte	0x1
 3721 012a 0B       		.uleb128 0xb
 3722 012b 0B       		.uleb128 0xb
 3723 012c 3A       		.uleb128 0x3a
 3724 012d 0B       		.uleb128 0xb
 3725 012e 3B       		.uleb128 0x3b
 3726 012f 05       		.uleb128 0x5
 3727 0130 01       		.uleb128 0x1
 3728 0131 13       		.uleb128 0x13
 3729 0132 00       		.byte	0
 3730 0133 00       		.byte	0
 3731 0134 1B       		.uleb128 0x1b
 3732 0135 2E       		.uleb128 0x2e
 3733 0136 00       		.byte	0
 3734 0137 03       		.uleb128 0x3
 3735 0138 0E       		.uleb128 0xe
 3736 0139 3A       		.uleb128 0x3a
 3737 013a 0B       		.uleb128 0xb
 3738 013b 3B       		.uleb128 0x3b
 3739 013c 05       		.uleb128 0x5
 3740 013d 27       		.uleb128 0x27
 3741 013e 19       		.uleb128 0x19
 3742 013f 20       		.uleb128 0x20
 3743 0140 0B       		.uleb128 0xb
 3744 0141 00       		.byte	0
 3745 0142 00       		.byte	0
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 167


 3746 0143 1C       		.uleb128 0x1c
 3747 0144 2E       		.uleb128 0x2e
 3748 0145 01       		.byte	0x1
 3749 0146 03       		.uleb128 0x3
 3750 0147 0E       		.uleb128 0xe
 3751 0148 3A       		.uleb128 0x3a
 3752 0149 0B       		.uleb128 0xb
 3753 014a 3B       		.uleb128 0x3b
 3754 014b 05       		.uleb128 0x5
 3755 014c 27       		.uleb128 0x27
 3756 014d 19       		.uleb128 0x19
 3757 014e 20       		.uleb128 0x20
 3758 014f 0B       		.uleb128 0xb
 3759 0150 01       		.uleb128 0x1
 3760 0151 13       		.uleb128 0x13
 3761 0152 00       		.byte	0
 3762 0153 00       		.byte	0
 3763 0154 1D       		.uleb128 0x1d
 3764 0155 05       		.uleb128 0x5
 3765 0156 00       		.byte	0
 3766 0157 03       		.uleb128 0x3
 3767 0158 0E       		.uleb128 0xe
 3768 0159 3A       		.uleb128 0x3a
 3769 015a 0B       		.uleb128 0xb
 3770 015b 3B       		.uleb128 0x3b
 3771 015c 05       		.uleb128 0x5
 3772 015d 49       		.uleb128 0x49
 3773 015e 13       		.uleb128 0x13
 3774 015f 00       		.byte	0
 3775 0160 00       		.byte	0
 3776 0161 1E       		.uleb128 0x1e
 3777 0162 2E       		.uleb128 0x2e
 3778 0163 01       		.byte	0x1
 3779 0164 3F       		.uleb128 0x3f
 3780 0165 19       		.uleb128 0x19
 3781 0166 03       		.uleb128 0x3
 3782 0167 0E       		.uleb128 0xe
 3783 0168 3A       		.uleb128 0x3a
 3784 0169 0B       		.uleb128 0xb
 3785 016a 3B       		.uleb128 0x3b
 3786 016b 0B       		.uleb128 0xb
 3787 016c 27       		.uleb128 0x27
 3788 016d 19       		.uleb128 0x19
 3789 016e 11       		.uleb128 0x11
 3790 016f 01       		.uleb128 0x1
 3791 0170 12       		.uleb128 0x12
 3792 0171 06       		.uleb128 0x6
 3793 0172 40       		.uleb128 0x40
 3794 0173 18       		.uleb128 0x18
 3795 0174 9742     		.uleb128 0x2117
 3796 0176 19       		.uleb128 0x19
 3797 0177 01       		.uleb128 0x1
 3798 0178 13       		.uleb128 0x13
 3799 0179 00       		.byte	0
 3800 017a 00       		.byte	0
 3801 017b 1F       		.uleb128 0x1f
 3802 017c 05       		.uleb128 0x5
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 168


 3803 017d 00       		.byte	0
 3804 017e 03       		.uleb128 0x3
 3805 017f 0E       		.uleb128 0xe
 3806 0180 3A       		.uleb128 0x3a
 3807 0181 0B       		.uleb128 0xb
 3808 0182 3B       		.uleb128 0x3b
 3809 0183 0B       		.uleb128 0xb
 3810 0184 49       		.uleb128 0x49
 3811 0185 13       		.uleb128 0x13
 3812 0186 02       		.uleb128 0x2
 3813 0187 17       		.uleb128 0x17
 3814 0188 00       		.byte	0
 3815 0189 00       		.byte	0
 3816 018a 20       		.uleb128 0x20
 3817 018b 34       		.uleb128 0x34
 3818 018c 00       		.byte	0
 3819 018d 03       		.uleb128 0x3
 3820 018e 0E       		.uleb128 0xe
 3821 018f 3A       		.uleb128 0x3a
 3822 0190 0B       		.uleb128 0xb
 3823 0191 3B       		.uleb128 0x3b
 3824 0192 0B       		.uleb128 0xb
 3825 0193 49       		.uleb128 0x49
 3826 0194 13       		.uleb128 0x13
 3827 0195 1C       		.uleb128 0x1c
 3828 0196 0B       		.uleb128 0xb
 3829 0197 00       		.byte	0
 3830 0198 00       		.byte	0
 3831 0199 21       		.uleb128 0x21
 3832 019a 898201   		.uleb128 0x4109
 3833 019d 01       		.byte	0x1
 3834 019e 11       		.uleb128 0x11
 3835 019f 01       		.uleb128 0x1
 3836 01a0 31       		.uleb128 0x31
 3837 01a1 13       		.uleb128 0x13
 3838 01a2 01       		.uleb128 0x1
 3839 01a3 13       		.uleb128 0x13
 3840 01a4 00       		.byte	0
 3841 01a5 00       		.byte	0
 3842 01a6 22       		.uleb128 0x22
 3843 01a7 8A8201   		.uleb128 0x410a
 3844 01aa 00       		.byte	0
 3845 01ab 02       		.uleb128 0x2
 3846 01ac 18       		.uleb128 0x18
 3847 01ad 9142     		.uleb128 0x2111
 3848 01af 18       		.uleb128 0x18
 3849 01b0 00       		.byte	0
 3850 01b1 00       		.byte	0
 3851 01b2 23       		.uleb128 0x23
 3852 01b3 898201   		.uleb128 0x4109
 3853 01b6 01       		.byte	0x1
 3854 01b7 11       		.uleb128 0x11
 3855 01b8 01       		.uleb128 0x1
 3856 01b9 31       		.uleb128 0x31
 3857 01ba 13       		.uleb128 0x13
 3858 01bb 00       		.byte	0
 3859 01bc 00       		.byte	0
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 169


 3860 01bd 24       		.uleb128 0x24
 3861 01be 05       		.uleb128 0x5
 3862 01bf 00       		.byte	0
 3863 01c0 03       		.uleb128 0x3
 3864 01c1 0E       		.uleb128 0xe
 3865 01c2 3A       		.uleb128 0x3a
 3866 01c3 0B       		.uleb128 0xb
 3867 01c4 3B       		.uleb128 0x3b
 3868 01c5 0B       		.uleb128 0xb
 3869 01c6 49       		.uleb128 0x49
 3870 01c7 13       		.uleb128 0x13
 3871 01c8 02       		.uleb128 0x2
 3872 01c9 18       		.uleb128 0x18
 3873 01ca 00       		.byte	0
 3874 01cb 00       		.byte	0
 3875 01cc 25       		.uleb128 0x25
 3876 01cd 2E       		.uleb128 0x2e
 3877 01ce 01       		.byte	0x1
 3878 01cf 3F       		.uleb128 0x3f
 3879 01d0 19       		.uleb128 0x19
 3880 01d1 03       		.uleb128 0x3
 3881 01d2 0E       		.uleb128 0xe
 3882 01d3 3A       		.uleb128 0x3a
 3883 01d4 0B       		.uleb128 0xb
 3884 01d5 3B       		.uleb128 0x3b
 3885 01d6 05       		.uleb128 0x5
 3886 01d7 27       		.uleb128 0x27
 3887 01d8 19       		.uleb128 0x19
 3888 01d9 11       		.uleb128 0x11
 3889 01da 01       		.uleb128 0x1
 3890 01db 12       		.uleb128 0x12
 3891 01dc 06       		.uleb128 0x6
 3892 01dd 40       		.uleb128 0x40
 3893 01de 18       		.uleb128 0x18
 3894 01df 9742     		.uleb128 0x2117
 3895 01e1 19       		.uleb128 0x19
 3896 01e2 01       		.uleb128 0x1
 3897 01e3 13       		.uleb128 0x13
 3898 01e4 00       		.byte	0
 3899 01e5 00       		.byte	0
 3900 01e6 26       		.uleb128 0x26
 3901 01e7 1D       		.uleb128 0x1d
 3902 01e8 01       		.byte	0x1
 3903 01e9 31       		.uleb128 0x31
 3904 01ea 13       		.uleb128 0x13
 3905 01eb 11       		.uleb128 0x11
 3906 01ec 01       		.uleb128 0x1
 3907 01ed 12       		.uleb128 0x12
 3908 01ee 06       		.uleb128 0x6
 3909 01ef 58       		.uleb128 0x58
 3910 01f0 0B       		.uleb128 0xb
 3911 01f1 59       		.uleb128 0x59
 3912 01f2 05       		.uleb128 0x5
 3913 01f3 00       		.byte	0
 3914 01f4 00       		.byte	0
 3915 01f5 27       		.uleb128 0x27
 3916 01f6 05       		.uleb128 0x5
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 170


 3917 01f7 00       		.byte	0
 3918 01f8 31       		.uleb128 0x31
 3919 01f9 13       		.uleb128 0x13
 3920 01fa 02       		.uleb128 0x2
 3921 01fb 17       		.uleb128 0x17
 3922 01fc 00       		.byte	0
 3923 01fd 00       		.byte	0
 3924 01fe 28       		.uleb128 0x28
 3925 01ff 1D       		.uleb128 0x1d
 3926 0200 00       		.byte	0
 3927 0201 31       		.uleb128 0x31
 3928 0202 13       		.uleb128 0x13
 3929 0203 11       		.uleb128 0x11
 3930 0204 01       		.uleb128 0x1
 3931 0205 12       		.uleb128 0x12
 3932 0206 06       		.uleb128 0x6
 3933 0207 58       		.uleb128 0x58
 3934 0208 0B       		.uleb128 0xb
 3935 0209 59       		.uleb128 0x59
 3936 020a 05       		.uleb128 0x5
 3937 020b 00       		.byte	0
 3938 020c 00       		.byte	0
 3939 020d 29       		.uleb128 0x29
 3940 020e 05       		.uleb128 0x5
 3941 020f 00       		.byte	0
 3942 0210 03       		.uleb128 0x3
 3943 0211 0E       		.uleb128 0xe
 3944 0212 3A       		.uleb128 0x3a
 3945 0213 0B       		.uleb128 0xb
 3946 0214 3B       		.uleb128 0x3b
 3947 0215 05       		.uleb128 0x5
 3948 0216 49       		.uleb128 0x49
 3949 0217 13       		.uleb128 0x13
 3950 0218 02       		.uleb128 0x2
 3951 0219 17       		.uleb128 0x17
 3952 021a 00       		.byte	0
 3953 021b 00       		.byte	0
 3954 021c 2A       		.uleb128 0x2a
 3955 021d 34       		.uleb128 0x34
 3956 021e 00       		.byte	0
 3957 021f 03       		.uleb128 0x3
 3958 0220 0E       		.uleb128 0xe
 3959 0221 3A       		.uleb128 0x3a
 3960 0222 0B       		.uleb128 0xb
 3961 0223 3B       		.uleb128 0x3b
 3962 0224 05       		.uleb128 0x5
 3963 0225 49       		.uleb128 0x49
 3964 0226 13       		.uleb128 0x13
 3965 0227 02       		.uleb128 0x2
 3966 0228 18       		.uleb128 0x18
 3967 0229 00       		.byte	0
 3968 022a 00       		.byte	0
 3969 022b 2B       		.uleb128 0x2b
 3970 022c 34       		.uleb128 0x34
 3971 022d 00       		.byte	0
 3972 022e 03       		.uleb128 0x3
 3973 022f 0E       		.uleb128 0xe
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 171


 3974 0230 3A       		.uleb128 0x3a
 3975 0231 0B       		.uleb128 0xb
 3976 0232 3B       		.uleb128 0x3b
 3977 0233 05       		.uleb128 0x5
 3978 0234 49       		.uleb128 0x49
 3979 0235 13       		.uleb128 0x13
 3980 0236 02       		.uleb128 0x2
 3981 0237 17       		.uleb128 0x17
 3982 0238 00       		.byte	0
 3983 0239 00       		.byte	0
 3984 023a 2C       		.uleb128 0x2c
 3985 023b 2E       		.uleb128 0x2e
 3986 023c 01       		.byte	0x1
 3987 023d 3F       		.uleb128 0x3f
 3988 023e 19       		.uleb128 0x19
 3989 023f 03       		.uleb128 0x3
 3990 0240 0E       		.uleb128 0xe
 3991 0241 3A       		.uleb128 0x3a
 3992 0242 0B       		.uleb128 0xb
 3993 0243 3B       		.uleb128 0x3b
 3994 0244 05       		.uleb128 0x5
 3995 0245 27       		.uleb128 0x27
 3996 0246 19       		.uleb128 0x19
 3997 0247 49       		.uleb128 0x49
 3998 0248 13       		.uleb128 0x13
 3999 0249 11       		.uleb128 0x11
 4000 024a 01       		.uleb128 0x1
 4001 024b 12       		.uleb128 0x12
 4002 024c 06       		.uleb128 0x6
 4003 024d 40       		.uleb128 0x40
 4004 024e 18       		.uleb128 0x18
 4005 024f 9742     		.uleb128 0x2117
 4006 0251 19       		.uleb128 0x19
 4007 0252 01       		.uleb128 0x1
 4008 0253 13       		.uleb128 0x13
 4009 0254 00       		.byte	0
 4010 0255 00       		.byte	0
 4011 0256 2D       		.uleb128 0x2d
 4012 0257 34       		.uleb128 0x34
 4013 0258 00       		.byte	0
 4014 0259 03       		.uleb128 0x3
 4015 025a 0E       		.uleb128 0xe
 4016 025b 3A       		.uleb128 0x3a
 4017 025c 0B       		.uleb128 0xb
 4018 025d 3B       		.uleb128 0x3b
 4019 025e 05       		.uleb128 0x5
 4020 025f 49       		.uleb128 0x49
 4021 0260 13       		.uleb128 0x13
 4022 0261 1C       		.uleb128 0x1c
 4023 0262 0B       		.uleb128 0xb
 4024 0263 00       		.byte	0
 4025 0264 00       		.byte	0
 4026 0265 2E       		.uleb128 0x2e
 4027 0266 898201   		.uleb128 0x4109
 4028 0269 00       		.byte	0
 4029 026a 11       		.uleb128 0x11
 4030 026b 01       		.uleb128 0x1
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 172


 4031 026c 31       		.uleb128 0x31
 4032 026d 13       		.uleb128 0x13
 4033 026e 00       		.byte	0
 4034 026f 00       		.byte	0
 4035 0270 2F       		.uleb128 0x2f
 4036 0271 1D       		.uleb128 0x1d
 4037 0272 01       		.byte	0x1
 4038 0273 31       		.uleb128 0x31
 4039 0274 13       		.uleb128 0x13
 4040 0275 11       		.uleb128 0x11
 4041 0276 01       		.uleb128 0x1
 4042 0277 12       		.uleb128 0x12
 4043 0278 06       		.uleb128 0x6
 4044 0279 58       		.uleb128 0x58
 4045 027a 0B       		.uleb128 0xb
 4046 027b 59       		.uleb128 0x59
 4047 027c 0B       		.uleb128 0xb
 4048 027d 01       		.uleb128 0x1
 4049 027e 13       		.uleb128 0x13
 4050 027f 00       		.byte	0
 4051 0280 00       		.byte	0
 4052 0281 30       		.uleb128 0x30
 4053 0282 34       		.uleb128 0x34
 4054 0283 00       		.byte	0
 4055 0284 03       		.uleb128 0x3
 4056 0285 0E       		.uleb128 0xe
 4057 0286 3A       		.uleb128 0x3a
 4058 0287 0B       		.uleb128 0xb
 4059 0288 3B       		.uleb128 0x3b
 4060 0289 0B       		.uleb128 0xb
 4061 028a 49       		.uleb128 0x49
 4062 028b 13       		.uleb128 0x13
 4063 028c 3F       		.uleb128 0x3f
 4064 028d 19       		.uleb128 0x19
 4065 028e 3C       		.uleb128 0x3c
 4066 028f 19       		.uleb128 0x19
 4067 0290 00       		.byte	0
 4068 0291 00       		.byte	0
 4069 0292 31       		.uleb128 0x31
 4070 0293 34       		.uleb128 0x34
 4071 0294 00       		.byte	0
 4072 0295 03       		.uleb128 0x3
 4073 0296 0E       		.uleb128 0xe
 4074 0297 3A       		.uleb128 0x3a
 4075 0298 0B       		.uleb128 0xb
 4076 0299 3B       		.uleb128 0x3b
 4077 029a 05       		.uleb128 0x5
 4078 029b 49       		.uleb128 0x49
 4079 029c 13       		.uleb128 0x13
 4080 029d 3F       		.uleb128 0x3f
 4081 029e 19       		.uleb128 0x19
 4082 029f 3C       		.uleb128 0x3c
 4083 02a0 19       		.uleb128 0x19
 4084 02a1 00       		.byte	0
 4085 02a2 00       		.byte	0
 4086 02a3 32       		.uleb128 0x32
 4087 02a4 34       		.uleb128 0x34
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 173


 4088 02a5 00       		.byte	0
 4089 02a6 03       		.uleb128 0x3
 4090 02a7 0E       		.uleb128 0xe
 4091 02a8 3A       		.uleb128 0x3a
 4092 02a9 0B       		.uleb128 0xb
 4093 02aa 3B       		.uleb128 0x3b
 4094 02ab 0B       		.uleb128 0xb
 4095 02ac 49       		.uleb128 0x49
 4096 02ad 13       		.uleb128 0x13
 4097 02ae 3F       		.uleb128 0x3f
 4098 02af 19       		.uleb128 0x19
 4099 02b0 02       		.uleb128 0x2
 4100 02b1 18       		.uleb128 0x18
 4101 02b2 00       		.byte	0
 4102 02b3 00       		.byte	0
 4103 02b4 33       		.uleb128 0x33
 4104 02b5 0D       		.uleb128 0xd
 4105 02b6 00       		.byte	0
 4106 02b7 03       		.uleb128 0x3
 4107 02b8 08       		.uleb128 0x8
 4108 02b9 3A       		.uleb128 0x3a
 4109 02ba 0B       		.uleb128 0xb
 4110 02bb 3B       		.uleb128 0x3b
 4111 02bc 0B       		.uleb128 0xb
 4112 02bd 49       		.uleb128 0x49
 4113 02be 13       		.uleb128 0x13
 4114 02bf 38       		.uleb128 0x38
 4115 02c0 0B       		.uleb128 0xb
 4116 02c1 00       		.byte	0
 4117 02c2 00       		.byte	0
 4118 02c3 34       		.uleb128 0x34
 4119 02c4 2E       		.uleb128 0x2e
 4120 02c5 00       		.byte	0
 4121 02c6 3F       		.uleb128 0x3f
 4122 02c7 19       		.uleb128 0x19
 4123 02c8 3C       		.uleb128 0x3c
 4124 02c9 19       		.uleb128 0x19
 4125 02ca 6E       		.uleb128 0x6e
 4126 02cb 0E       		.uleb128 0xe
 4127 02cc 03       		.uleb128 0x3
 4128 02cd 0E       		.uleb128 0xe
 4129 02ce 3A       		.uleb128 0x3a
 4130 02cf 0B       		.uleb128 0xb
 4131 02d0 3B       		.uleb128 0x3b
 4132 02d1 05       		.uleb128 0x5
 4133 02d2 00       		.byte	0
 4134 02d3 00       		.byte	0
 4135 02d4 00       		.byte	0
 4136              		.section	.debug_loc,"",%progbits
 4137              	.Ldebug_loc0:
 4138              	.LLST0:
 4139 0000 00000000 		.4byte	.LVL0
 4140 0004 0A000000 		.4byte	.LVL2
 4141 0008 0100     		.2byte	0x1
 4142 000a 50       		.byte	0x50
 4143 000b 0A000000 		.4byte	.LVL2
 4144 000f 18000000 		.4byte	.LVL5
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 174


 4145 0013 0100     		.2byte	0x1
 4146 0015 55       		.byte	0x55
 4147 0016 18000000 		.4byte	.LVL5
 4148 001a 1C000000 		.4byte	.LFE216
 4149 001e 0400     		.2byte	0x4
 4150 0020 F3       		.byte	0xf3
 4151 0021 01       		.uleb128 0x1
 4152 0022 50       		.byte	0x50
 4153 0023 9F       		.byte	0x9f
 4154 0024 00000000 		.4byte	0
 4155 0028 00000000 		.4byte	0
 4156              	.LLST1:
 4157 002c 06000000 		.4byte	.LVL9
 4158 0030 10000000 		.4byte	.LVL10
 4159 0034 0100     		.2byte	0x1
 4160 0036 53       		.byte	0x53
 4161 0037 00000000 		.4byte	0
 4162 003b 00000000 		.4byte	0
 4163              	.LLST2:
 4164 003f 06000000 		.4byte	.LVL12
 4165 0043 10000000 		.4byte	.LVL13
 4166 0047 0100     		.2byte	0x1
 4167 0049 53       		.byte	0x53
 4168 004a 00000000 		.4byte	0
 4169 004e 00000000 		.4byte	0
 4170              	.LLST3:
 4171 0052 00000000 		.4byte	.LVL15
 4172 0056 08000000 		.4byte	.LVL16
 4173 005a 0100     		.2byte	0x1
 4174 005c 50       		.byte	0x50
 4175 005d 08000000 		.4byte	.LVL16
 4176 0061 18000000 		.4byte	.LFE222
 4177 0065 0400     		.2byte	0x4
 4178 0067 F3       		.byte	0xf3
 4179 0068 01       		.uleb128 0x1
 4180 0069 50       		.byte	0x50
 4181 006a 9F       		.byte	0x9f
 4182 006b 00000000 		.4byte	0
 4183 006f 00000000 		.4byte	0
 4184              	.LLST4:
 4185 0073 08000000 		.4byte	.LVL16
 4186 0077 0E000000 		.4byte	.LVL17
 4187 007b 0100     		.2byte	0x1
 4188 007d 50       		.byte	0x50
 4189 007e 00000000 		.4byte	0
 4190 0082 00000000 		.4byte	0
 4191              	.LLST5:
 4192 0086 08000000 		.4byte	.LVL16
 4193 008a 0E000000 		.4byte	.LVL17
 4194 008e 0600     		.2byte	0x6
 4195 0090 0C       		.byte	0xc
 4196 0091 00001D41 		.4byte	0x411d0000
 4197 0095 9F       		.byte	0x9f
 4198 0096 00000000 		.4byte	0
 4199 009a 00000000 		.4byte	0
 4200              	.LLST6:
 4201 009e 00000000 		.4byte	.LVL18
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 175


 4202 00a2 18000000 		.4byte	.LVL21
 4203 00a6 0100     		.2byte	0x1
 4204 00a8 50       		.byte	0x50
 4205 00a9 18000000 		.4byte	.LVL21
 4206 00ad 2E000000 		.4byte	.LVL24
 4207 00b1 0100     		.2byte	0x1
 4208 00b3 54       		.byte	0x54
 4209 00b4 2E000000 		.4byte	.LVL24
 4210 00b8 40000000 		.4byte	.LFE223
 4211 00bc 0200     		.2byte	0x2
 4212 00be 73       		.byte	0x73
 4213 00bf 20       		.sleb128 32
 4214 00c0 00000000 		.4byte	0
 4215 00c4 00000000 		.4byte	0
 4216              	.LLST7:
 4217 00c8 0E000000 		.4byte	.LVL19
 4218 00cc 14000000 		.4byte	.LVL20
 4219 00d0 0100     		.2byte	0x1
 4220 00d2 54       		.byte	0x54
 4221 00d3 00000000 		.4byte	0
 4222 00d7 00000000 		.4byte	0
 4223              	.LLST8:
 4224 00db 18000000 		.4byte	.LVL21
 4225 00df 2C000000 		.4byte	.LVL23
 4226 00e3 0100     		.2byte	0x1
 4227 00e5 54       		.byte	0x54
 4228 00e6 00000000 		.4byte	0
 4229 00ea 00000000 		.4byte	0
 4230              	.LLST9:
 4231 00ee 18000000 		.4byte	.LVL21
 4232 00f2 2C000000 		.4byte	.LVL23
 4233 00f6 0600     		.2byte	0x6
 4234 00f8 0C       		.byte	0xc
 4235 00f9 00001D41 		.4byte	0x411d0000
 4236 00fd 9F       		.byte	0x9f
 4237 00fe 00000000 		.4byte	0
 4238 0102 00000000 		.4byte	0
 4239              	.LLST10:
 4240 0106 00000000 		.4byte	.LVL25
 4241 010a 06000000 		.4byte	.LVL27
 4242 010e 0100     		.2byte	0x1
 4243 0110 50       		.byte	0x50
 4244 0111 06000000 		.4byte	.LVL27
 4245 0115 18000000 		.4byte	.LFE224
 4246 0119 0400     		.2byte	0x4
 4247 011b F3       		.byte	0xf3
 4248 011c 01       		.uleb128 0x1
 4249 011d 50       		.byte	0x50
 4250 011e 9F       		.byte	0x9f
 4251 011f 00000000 		.4byte	0
 4252 0123 00000000 		.4byte	0
 4253              	.LLST11:
 4254 0127 02000000 		.4byte	.LVL26
 4255 012b 12000000 		.4byte	.LVL31
 4256 012f 0200     		.2byte	0x2
 4257 0131 30       		.byte	0x30
 4258 0132 9F       		.byte	0x9f
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 176


 4259 0133 12000000 		.4byte	.LVL31
 4260 0137 18000000 		.4byte	.LFE224
 4261 013b 0100     		.2byte	0x1
 4262 013d 50       		.byte	0x50
 4263 013e 00000000 		.4byte	0
 4264 0142 00000000 		.4byte	0
 4265              	.LLST12:
 4266 0146 0A000000 		.4byte	.LVL28
 4267 014a 0E000000 		.4byte	.LVL29
 4268 014e 0100     		.2byte	0x1
 4269 0150 50       		.byte	0x50
 4270 0151 10000000 		.4byte	.LVL30
 4271 0155 12000000 		.4byte	.LVL31
 4272 0159 0100     		.2byte	0x1
 4273 015b 50       		.byte	0x50
 4274 015c 00000000 		.4byte	0
 4275 0160 00000000 		.4byte	0
 4276              	.LLST13:
 4277 0164 00000000 		.4byte	.LVL37
 4278 0168 07000000 		.4byte	.LVL38-1
 4279 016c 0100     		.2byte	0x1
 4280 016e 50       		.byte	0x50
 4281 016f 07000000 		.4byte	.LVL38-1
 4282 0173 2E000000 		.4byte	.LVL43
 4283 0177 0100     		.2byte	0x1
 4284 0179 55       		.byte	0x55
 4285 017a 2E000000 		.4byte	.LVL43
 4286 017e 38000000 		.4byte	.LFE215
 4287 0182 0400     		.2byte	0x4
 4288 0184 F3       		.byte	0xf3
 4289 0185 01       		.uleb128 0x1
 4290 0186 50       		.byte	0x50
 4291 0187 9F       		.byte	0x9f
 4292 0188 00000000 		.4byte	0
 4293 018c 00000000 		.4byte	0
 4294              	.LLST14:
 4295 0190 16000000 		.4byte	.LVL40
 4296 0194 20000000 		.4byte	.LVL41
 4297 0198 0100     		.2byte	0x1
 4298 019a 53       		.byte	0x53
 4299 019b 20000000 		.4byte	.LVL41
 4300 019f 2C000000 		.4byte	.LVL42
 4301 01a3 0200     		.2byte	0x2
 4302 01a5 74       		.byte	0x74
 4303 01a6 00       		.sleb128 0
 4304 01a7 00000000 		.4byte	0
 4305 01ab 00000000 		.4byte	0
 4306              	.LLST15:
 4307 01af 00000000 		.4byte	.LVL44
 4308 01b3 1F000000 		.4byte	.LVL47-1
 4309 01b7 0100     		.2byte	0x1
 4310 01b9 50       		.byte	0x50
 4311 01ba 1F000000 		.4byte	.LVL47-1
 4312 01be 46000000 		.4byte	.LVL51
 4313 01c2 0100     		.2byte	0x1
 4314 01c4 54       		.byte	0x54
 4315 01c5 46000000 		.4byte	.LVL51
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 177


 4316 01c9 54000000 		.4byte	.LFE217
 4317 01cd 0100     		.2byte	0x1
 4318 01cf 50       		.byte	0x50
 4319 01d0 00000000 		.4byte	0
 4320 01d4 00000000 		.4byte	0
 4321              	.LLST16:
 4322 01d8 00000000 		.4byte	.LVL44
 4323 01dc 1F000000 		.4byte	.LVL47-1
 4324 01e0 0100     		.2byte	0x1
 4325 01e2 51       		.byte	0x51
 4326 01e3 1F000000 		.4byte	.LVL47-1
 4327 01e7 46000000 		.4byte	.LVL51
 4328 01eb 0100     		.2byte	0x1
 4329 01ed 55       		.byte	0x55
 4330 01ee 46000000 		.4byte	.LVL51
 4331 01f2 54000000 		.4byte	.LFE217
 4332 01f6 0100     		.2byte	0x1
 4333 01f8 51       		.byte	0x51
 4334 01f9 00000000 		.4byte	0
 4335 01fd 00000000 		.4byte	0
 4336              	.LLST17:
 4337 0201 08000000 		.4byte	.LVL45
 4338 0205 12000000 		.4byte	.LVL46
 4339 0209 0600     		.2byte	0x6
 4340 020b 0C       		.byte	0xc
 4341 020c 00001D41 		.4byte	0x411d0000
 4342 0210 9F       		.byte	0x9f
 4343 0211 00000000 		.4byte	0
 4344 0215 00000000 		.4byte	0
 4345              		.section	.debug_aranges,"",%progbits
 4346 0000 74000000 		.4byte	0x74
 4347 0004 0200     		.2byte	0x2
 4348 0006 00000000 		.4byte	.Ldebug_info0
 4349 000a 04       		.byte	0x4
 4350 000b 00       		.byte	0
 4351 000c 0000     		.2byte	0
 4352 000e 0000     		.2byte	0
 4353 0010 00000000 		.4byte	.LFB216
 4354 0014 1C000000 		.4byte	.LFE216-.LFB216
 4355 0018 00000000 		.4byte	.LFB218
 4356 001c 24000000 		.4byte	.LFE218-.LFB218
 4357 0020 00000000 		.4byte	.LFB219
 4358 0024 20000000 		.4byte	.LFE219-.LFB219
 4359 0028 00000000 		.4byte	.LFB220
 4360 002c 28000000 		.4byte	.LFE220-.LFB220
 4361 0030 00000000 		.4byte	.LFB221
 4362 0034 30000000 		.4byte	.LFE221-.LFB221
 4363 0038 00000000 		.4byte	.LFB222
 4364 003c 18000000 		.4byte	.LFE222-.LFB222
 4365 0040 00000000 		.4byte	.LFB223
 4366 0044 40000000 		.4byte	.LFE223-.LFB223
 4367 0048 00000000 		.4byte	.LFB224
 4368 004c 18000000 		.4byte	.LFE224-.LFB224
 4369 0050 00000000 		.4byte	.LFB225
 4370 0054 34000000 		.4byte	.LFE225-.LFB225
 4371 0058 00000000 		.4byte	.LFB214
 4372 005c 2C000000 		.4byte	.LFE214-.LFB214
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 178


 4373 0060 00000000 		.4byte	.LFB215
 4374 0064 38000000 		.4byte	.LFE215-.LFB215
 4375 0068 00000000 		.4byte	.LFB217
 4376 006c 54000000 		.4byte	.LFE217-.LFB217
 4377 0070 00000000 		.4byte	0
 4378 0074 00000000 		.4byte	0
 4379              		.section	.debug_ranges,"",%progbits
 4380              	.Ldebug_ranges0:
 4381 0000 00000000 		.4byte	.LFB216
 4382 0004 1C000000 		.4byte	.LFE216
 4383 0008 00000000 		.4byte	.LFB218
 4384 000c 24000000 		.4byte	.LFE218
 4385 0010 00000000 		.4byte	.LFB219
 4386 0014 20000000 		.4byte	.LFE219
 4387 0018 00000000 		.4byte	.LFB220
 4388 001c 28000000 		.4byte	.LFE220
 4389 0020 00000000 		.4byte	.LFB221
 4390 0024 30000000 		.4byte	.LFE221
 4391 0028 00000000 		.4byte	.LFB222
 4392 002c 18000000 		.4byte	.LFE222
 4393 0030 00000000 		.4byte	.LFB223
 4394 0034 40000000 		.4byte	.LFE223
 4395 0038 00000000 		.4byte	.LFB224
 4396 003c 18000000 		.4byte	.LFE224
 4397 0040 00000000 		.4byte	.LFB225
 4398 0044 34000000 		.4byte	.LFE225
 4399 0048 00000000 		.4byte	.LFB214
 4400 004c 2C000000 		.4byte	.LFE214
 4401 0050 00000000 		.4byte	.LFB215
 4402 0054 38000000 		.4byte	.LFE215
 4403 0058 00000000 		.4byte	.LFB217
 4404 005c 54000000 		.4byte	.LFE217
 4405 0060 00000000 		.4byte	0
 4406 0064 00000000 		.4byte	0
 4407              		.section	.debug_line,"",%progbits
 4408              	.Ldebug_line0:
 4409 0000 6A040000 		.section	.debug_str,"MS",%progbits,1
 4409      02003703 
 4409      00000201 
 4409      FB0E0D00 
 4409      01010101 
 4410              	.LASF283:
 4411 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 4411      6843746C 
 4411      4D61696E 
 4411      57733146 
 4411      72657100 
 4412              	.LASF62:
 4413 0014 63707573 		.ascii	"cpuss_interrupts_dw0_2_IRQn\000"
 4413      735F696E 
 4413      74657272 
 4413      75707473 
 4413      5F647730 
 4414              	.LASF381:
 4415 0030 63795F73 		.ascii	"cy_stc_sysint_t\000"
 4415      74635F73 
 4415      7973696E 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 179


 4415      745F7400 
 4416              	.LASF25:
 4417 0040 696F7373 		.ascii	"ioss_interrupt_gpio_IRQn\000"
 4417      5F696E74 
 4417      65727275 
 4417      70745F67 
 4417      70696F5F 
 4418              	.LASF219:
 4419 0059 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 4419      455F494E 
 4419      54525F4D 
 4419      41534B45 
 4419      4400
 4420              	.LASF123:
 4421 006b 74637077 		.ascii	"tcpwm_1_interrupts_15_IRQn\000"
 4421      6D5F315F 
 4421      696E7465 
 4421      72727570 
 4421      74735F31 
 4422              	.LASF204:
 4423 0086 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 4423      5F574F52 
 4423      4B5F5550 
 4423      44415445 
 4423      4400
 4424              	.LASF325:
 4425 0098 6970634C 		.ascii	"ipcLockStatusOffset\000"
 4425      6F636B53 
 4425      74617475 
 4425      734F6666 
 4425      73657400 
 4426              	.LASF114:
 4427 00ac 74637077 		.ascii	"tcpwm_1_interrupts_6_IRQn\000"
 4427      6D5F315F 
 4427      696E7465 
 4427      72727570 
 4427      74735F36 
 4428              	.LASF424:
 4429 00c6 63795F64 		.ascii	"cy_device\000"
 4429      65766963 
 4429      6500
 4430              	.LASF142:
 4431 00d0 7564625F 		.ascii	"udb_interrupts_10_IRQn\000"
 4431      696E7465 
 4431      72727570 
 4431      74735F31 
 4431      305F4952 
 4432              	.LASF428:
 4433 00e7 44455445 		.ascii	"DETECTOR_ADC_allConfigs\000"
 4433      43544F52 
 4433      5F414443 
 4433      5F616C6C 
 4433      436F6E66 
 4434              	.LASF386:
 4435 00ff 62617365 		.ascii	"base\000"
 4435      00
 4436              	.LASF310:
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 180


 4437 0104 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 4437      73436D30 
 4437      436C6F63 
 4437      6B43746C 
 4437      4F666673 
 4438              	.LASF67:
 4439 011b 63707573 		.ascii	"cpuss_interrupts_dw0_7_IRQn\000"
 4439      735F696E 
 4439      74657272 
 4439      75707473 
 4439      5F647730 
 4440              	.LASF329:
 4441 0137 63686172 		.ascii	"char\000"
 4441      00
 4442              	.LASF378:
 4443 013c 44455445 		.ascii	"DETECTOR_ADC_CONFIG_STRUCT\000"
 4443      43544F52 
 4443      5F414443 
 4443      5F434F4E 
 4443      4649475F 
 4444              	.LASF36:
 4445 0157 63707573 		.ascii	"cpuss_interrupts_ipc_1_IRQn\000"
 4445      735F696E 
 4445      74657272 
 4445      75707473 
 4445      5F697063 
 4446              	.LASF26:
 4447 0173 696F7373 		.ascii	"ioss_interrupt_vdd_IRQn\000"
 4447      5F696E74 
 4447      65727275 
 4447      70745F76 
 4447      64645F49 
 4448              	.LASF54:
 4449 018b 7363625F 		.ascii	"scb_3_interrupt_IRQn\000"
 4449      335F696E 
 4449      74657272 
 4449      7570745F 
 4449      4952516E 
 4450              	.LASF199:
 4451 01a0 4348414E 		.ascii	"CHAN_EN\000"
 4451      5F454E00 
 4452              	.LASF84:
 4453 01a8 63707573 		.ascii	"cpuss_interrupts_dw1_8_IRQn\000"
 4453      735F696E 
 4453      74657272 
 4453      75707473 
 4453      5F647731 
 4454              	.LASF90:
 4455 01c4 63707573 		.ascii	"cpuss_interrupts_dw1_14_IRQn\000"
 4455      735F696E 
 4455      74657272 
 4455      75707473 
 4455      5F647731 
 4456              	.LASF242:
 4457 01e1 70657269 		.ascii	"periBase\000"
 4457      42617365 
 4457      00
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 181


 4458              	.LASF437:
 4459 01ea 43795F53 		.ascii	"Cy_SysInt_Init\000"
 4459      7973496E 
 4459      745F496E 
 4459      697400
 4460              	.LASF318:
 4461 01f9 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 4461      73436D30 
 4461      4E6D6943 
 4461      746C4F66 
 4461      66736574 
 4462              	.LASF288:
 4463 020e 64774368 		.ascii	"dwChSize\000"
 4463      53697A65 
 4463      00
 4464              	.LASF189:
 4465 0217 53544952 		.ascii	"STIR\000"
 4465      00
 4466              	.LASF172:
 4467 021c 756E7369 		.ascii	"unsigned int\000"
 4467      676E6564 
 4467      20696E74 
 4467      00
 4468              	.LASF46:
 4469 0229 63707573 		.ascii	"cpuss_interrupts_ipc_11_IRQn\000"
 4469      735F696E 
 4469      74657272 
 4469      75707473 
 4469      5F697063 
 4470              	.LASF416:
 4471 0246 72657374 		.ascii	"restart\000"
 4471      61727400 
 4472              	.LASF220:
 4473 024e 494E5452 		.ascii	"INTR_CAUSE\000"
 4473      5F434155 
 4473      534500
 4474              	.LASF270:
 4475 0259 736D6966 		.ascii	"smifDeviceNr\000"
 4475      44657669 
 4475      63654E72 
 4475      00
 4476              	.LASF351:
 4477 0266 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 4477      41525F52 
 4477      414E4745 
 4477      5F434F4E 
 4477      445F4F55 
 4478              	.LASF427:
 4479 0280 44455445 		.ascii	"DETECTOR_ADC_currentConfig\000"
 4479      43544F52 
 4479      5F414443 
 4479      5F637572 
 4479      72656E74 
 4480              	.LASF115:
 4481 029b 74637077 		.ascii	"tcpwm_1_interrupts_7_IRQn\000"
 4481      6D5F315F 
 4481      696E7465 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 182


 4481      72727570 
 4481      74735F37 
 4482              	.LASF442:
 4483 02b5 44455445 		.ascii	"DETECTOR_ADC_IsEndConversion\000"
 4483      43544F52 
 4483      5F414443 
 4483      5F497345 
 4483      6E64436F 
 4484              	.LASF166:
 4485 02d2 5F5F696E 		.ascii	"__int32_t\000"
 4485      7433325F 
 4485      7400
 4486              	.LASF33:
 4487 02dc 70617373 		.ascii	"pass_interrupt_ctbs_IRQn\000"
 4487      5F696E74 
 4487      65727275 
 4487      70745F63 
 4487      7462735F 
 4488              	.LASF266:
 4489 02f5 73727373 		.ascii	"srssNumClkpath\000"
 4489      4E756D43 
 4489      6C6B7061 
 4489      746800
 4490              	.LASF206:
 4491 0304 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 4491      5F574F52 
 4491      4B5F4E45 
 4491      5756414C 
 4491      554500
 4492              	.LASF240:
 4493 0317 63707573 		.ascii	"cpussBase\000"
 4493      73426173 
 4493      6500
 4494              	.LASF279:
 4495 0321 666C6173 		.ascii	"flashWriteDelay\000"
 4495      68577269 
 4495      74654465 
 4495      6C617900 
 4496              	.LASF374:
 4497 0331 6368616E 		.ascii	"channelBase\000"
 4497      6E656C42 
 4497      61736500 
 4498              	.LASF264:
 4499 033d 63707573 		.ascii	"cpussFmIrq\000"
 4499      73466D49 
 4499      727100
 4500              	.LASF30:
 4501 0348 73727373 		.ascii	"srss_interrupt_mcwdt_1_IRQn\000"
 4501      5F696E74 
 4501      65727275 
 4501      70745F6D 
 4501      63776474 
 4502              	.LASF376:
 4503 0364 6877436F 		.ascii	"hwConfigStc\000"
 4503      6E666967 
 4503      53746300 
 4504              	.LASF382:
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 183


 4505 0370 5F5F4953 		.ascii	"__ISB\000"
 4505      4200
 4506              	.LASF12:
 4507 0376 696F7373 		.ascii	"ioss_interrupts_gpio_2_IRQn\000"
 4507      5F696E74 
 4507      65727275 
 4507      7074735F 
 4507      6770696F 
 4508              	.LASF265:
 4509 0392 63707573 		.ascii	"cpussNotConnectedIrq\000"
 4509      734E6F74 
 4509      436F6E6E 
 4509      65637465 
 4509      64497271 
 4510              	.LASF73:
 4511 03a7 63707573 		.ascii	"cpuss_interrupts_dw0_13_IRQn\000"
 4511      735F696E 
 4511      74657272 
 4511      75707473 
 4511      5F647730 
 4512              	.LASF158:
 4513 03c4 73686F72 		.ascii	"short int\000"
 4513      7420696E 
 4513      7400
 4514              	.LASF131:
 4515 03ce 74637077 		.ascii	"tcpwm_1_interrupts_23_IRQn\000"
 4515      6D5F315F 
 4515      696E7465 
 4515      72727570 
 4515      74735F32 
 4516              	.LASF212:
 4517 03e9 53415455 		.ascii	"SATURATE_INTR\000"
 4517      52415445 
 4517      5F494E54 
 4517      5200
 4518              	.LASF413:
 4519 03f7 44455445 		.ascii	"DETECTOR_ADC_StartEx\000"
 4519      43544F52 
 4519      5F414443 
 4519      5F537461 
 4519      72744578 
 4520              	.LASF27:
 4521 040c 6C70636F 		.ascii	"lpcomp_interrupt_IRQn\000"
 4521      6D705F69 
 4521      6E746572 
 4521      72757074 
 4521      5F495251 
 4522              	.LASF195:
 4523 0422 53414D50 		.ascii	"SAMPLE_TIME01\000"
 4523      4C455F54 
 4523      494D4530 
 4523      3100
 4524              	.LASF107:
 4525 0430 74637077 		.ascii	"tcpwm_0_interrupts_7_IRQn\000"
 4525      6D5F305F 
 4525      696E7465 
 4525      72727570 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 184


 4525      74735F37 
 4526              	.LASF223:
 4527 044a 494E4A5F 		.ascii	"INJ_RESULT\000"
 4527      52455355 
 4527      4C5400
 4528              	.LASF299:
 4529 0455 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 4529      44697643 
 4529      6D645061 
 4529      44697653 
 4529      656C506F 
 4530              	.LASF209:
 4531 046b 494E5452 		.ascii	"INTR_SET\000"
 4531      5F534554 
 4531      00
 4532              	.LASF276:
 4533 0474 63727970 		.ascii	"cryptoMemSize\000"
 4533      746F4D65 
 4533      6D53697A 
 4533      6500
 4534              	.LASF398:
 4535 0482 6D6F6465 		.ascii	"mode\000"
 4535      00
 4536              	.LASF366:
 4537 0487 73617449 		.ascii	"satIntrMask\000"
 4537      6E74724D 
 4537      61736B00 
 4538              	.LASF340:
 4539 0493 63795F65 		.ascii	"cy_en_sar_start_convert_sel_t\000"
 4539      6E5F7361 
 4539      725F7374 
 4539      6172745F 
 4539      636F6E76 
 4540              	.LASF296:
 4541 04b1 70657269 		.ascii	"periTrGrSize\000"
 4541      54724772 
 4541      53697A65 
 4541      00
 4542              	.LASF76:
 4543 04be 63707573 		.ascii	"cpuss_interrupts_dw1_0_IRQn\000"
 4543      735F696E 
 4543      74657272 
 4543      75707473 
 4543      5F647731 
 4544              	.LASF146:
 4545 04da 7564625F 		.ascii	"udb_interrupts_14_IRQn\000"
 4545      696E7465 
 4545      72727570 
 4545      74735F31 
 4545      345F4952 
 4546              	.LASF102:
 4547 04f1 74637077 		.ascii	"tcpwm_0_interrupts_2_IRQn\000"
 4547      6D5F305F 
 4547      696E7465 
 4547      72727570 
 4547      74735F32 
 4548              	.LASF8:
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 185


 4549 050b 50656E64 		.ascii	"PendSV_IRQn\000"
 4549      53565F49 
 4549      52516E00 
 4550              	.LASF439:
 4551 0517 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4551      43313120 
 4551      352E342E 
 4551      31203230 
 4551      31363036 
 4552 054a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 4552      20726576 
 4552      6973696F 
 4552      6E203233 
 4552      37373135 
 4553 057d 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 4553      70202D6D 
 4553      6670753D 
 4553      66707634 
 4553      2D73702D 
 4554 05b0 65637469 		.ascii	"ections -ffat-lto-objects\000"
 4554      6F6E7320 
 4554      2D666661 
 4554      742D6C74 
 4554      6F2D6F62 
 4555              	.LASF258:
 4556 05ca 70726F74 		.ascii	"protVersion\000"
 4556      56657273 
 4556      696F6E00 
 4557              	.LASF348:
 4558 05d6 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 4558      41525F52 
 4558      414E4745 
 4558      5F434F4E 
 4558      445F4245 
 4559              	.LASF194:
 4560 05ee 52455345 		.ascii	"RESERVED\000"
 4560      52564544 
 4560      00
 4561              	.LASF45:
 4562 05f7 63707573 		.ascii	"cpuss_interrupts_ipc_10_IRQn\000"
 4562      735F696E 
 4562      74657272 
 4562      75707473 
 4562      5F697063 
 4563              	.LASF174:
 4564 0614 696E7431 		.ascii	"int16_t\000"
 4564      365F7400 
 4565              	.LASF238:
 4566 061c 5341525F 		.ascii	"SAR_Type\000"
 4566      54797065 
 4566      00
 4567              	.LASF298:
 4568 0625 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 4568      44697643 
 4568      6D645479 
 4568      70655365 
 4568      6C506F73 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 186


 4569              	.LASF315:
 4570 063a 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 4570      73547269 
 4570      6D52616D 
 4570      43746C4F 
 4570      66667365 
 4571              	.LASF139:
 4572 0650 7564625F 		.ascii	"udb_interrupts_7_IRQn\000"
 4572      696E7465 
 4572      72727570 
 4572      74735F37 
 4572      5F495251 
 4573              	.LASF28:
 4574 0666 7363625F 		.ascii	"scb_8_interrupt_IRQn\000"
 4574      385F696E 
 4574      74657272 
 4574      7570745F 
 4574      4952516E 
 4575              	.LASF3:
 4576 067b 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 4576      72794D61 
 4576      6E616765 
 4576      6D656E74 
 4576      5F495251 
 4577              	.LASF125:
 4578 0691 74637077 		.ascii	"tcpwm_1_interrupts_17_IRQn\000"
 4578      6D5F315F 
 4578      696E7465 
 4578      72727570 
 4578      74735F31 
 4579              	.LASF134:
 4580 06ac 7564625F 		.ascii	"udb_interrupts_2_IRQn\000"
 4580      696E7465 
 4580      72727570 
 4580      74735F32 
 4580      5F495251 
 4581              	.LASF401:
 4582 06c2 44455445 		.ascii	"DETECTOR_ADC_SetEosMask\000"
 4582      43544F52 
 4582      5F414443 
 4582      5F536574 
 4582      456F734D 
 4583              	.LASF177:
 4584 06da 75696E74 		.ascii	"uint32_t\000"
 4584      33325F74 
 4584      00
 4585              	.LASF410:
 4586 06e3 44455445 		.ascii	"DETECTOR_ADC_Init\000"
 4586      43544F52 
 4586      5F414443 
 4586      5F496E69 
 4586      7400
 4587              	.LASF120:
 4588 06f5 74637077 		.ascii	"tcpwm_1_interrupts_12_IRQn\000"
 4588      6D5F315F 
 4588      696E7465 
 4588      72727570 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 187


 4588      74735F31 
 4589              	.LASF17:
 4590 0710 696F7373 		.ascii	"ioss_interrupts_gpio_7_IRQn\000"
 4590      5F696E74 
 4590      65727275 
 4590      7074735F 
 4590      6770696F 
 4591              	.LASF23:
 4592 072c 696F7373 		.ascii	"ioss_interrupts_gpio_13_IRQn\000"
 4592      5F696E74 
 4592      65727275 
 4592      7074735F 
 4592      6770696F 
 4593              	.LASF147:
 4594 0749 7564625F 		.ascii	"udb_interrupts_15_IRQn\000"
 4594      696E7465 
 4594      72727570 
 4594      74735F31 
 4594      355F4952 
 4595              	.LASF308:
 4596 0760 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 4596      50727443 
 4596      66674F75 
 4596      744F6666 
 4596      73657400 
 4597              	.LASF178:
 4598 0774 49534552 		.ascii	"ISER\000"
 4598      00
 4599              	.LASF97:
 4600 0779 63707573 		.ascii	"cpuss_interrupts_cm0_cti_1_IRQn\000"
 4600      735F696E 
 4600      74657272 
 4600      75707473 
 4600      5F636D30 
 4601              	.LASF330:
 4602 0799 666C6F61 		.ascii	"float\000"
 4602      7400
 4603              	.LASF251:
 4604 079f 63727970 		.ascii	"cryptoVersion\000"
 4604      746F5665 
 4604      7273696F 
 4604      6E00
 4605              	.LASF280:
 4606 07ad 666C6173 		.ascii	"flashProgramDelay\000"
 4606      6850726F 
 4606      6772616D 
 4606      44656C61 
 4606      7900
 4607              	.LASF55:
 4608 07bf 7363625F 		.ascii	"scb_4_interrupt_IRQn\000"
 4608      345F696E 
 4608      74657272 
 4608      7570745F 
 4608      4952516E 
 4609              	.LASF375:
 4610 07d4 6E756D43 		.ascii	"numChannels\000"
 4610      68616E6E 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 188


 4610      656C7300 
 4611              	.LASF171:
 4612 07e0 6C6F6E67 		.ascii	"long long unsigned int\000"
 4612      206C6F6E 
 4612      6720756E 
 4612      7369676E 
 4612      65642069 
 4613              	.LASF241:
 4614 07f7 666C6173 		.ascii	"flashcBase\000"
 4614      68634261 
 4614      736500
 4615              	.LASF81:
 4616 0802 63707573 		.ascii	"cpuss_interrupts_dw1_5_IRQn\000"
 4616      735F696E 
 4616      74657272 
 4616      75707473 
 4616      5F647731 
 4617              	.LASF307:
 4618 081e 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 4618      50727443 
 4618      6667496E 
 4618      4F666673 
 4618      657400
 4619              	.LASF87:
 4620 0831 63707573 		.ascii	"cpuss_interrupts_dw1_11_IRQn\000"
 4620      735F696E 
 4620      74657272 
 4620      75707473 
 4620      5F647731 
 4621              	.LASF409:
 4622 084e 72657375 		.ascii	"result\000"
 4622      6C7400
 4623              	.LASF187:
 4624 0855 52455345 		.ascii	"RESERVED4\000"
 4624      52564544 
 4624      3400
 4625              	.LASF405:
 4626 085f 44455445 		.ascii	"DETECTOR_ADC_SetChanMask\000"
 4626      43544F52 
 4626      5F414443 
 4626      5F536574 
 4626      4368616E 
 4627              	.LASF304:
 4628 0878 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 4628      44697632 
 4628      345F3543 
 4628      746C4F66 
 4628      66736574 
 4629              	.LASF309:
 4630 088d 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 4630      50727443 
 4630      66675369 
 4630      6F4F6666 
 4630      73657400 
 4631              	.LASF224:
 4632 08a1 52455345 		.ascii	"RESERVED7\000"
 4632      52564544 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 189


 4632      3700
 4633              	.LASF48:
 4634 08ab 63707573 		.ascii	"cpuss_interrupts_ipc_13_IRQn\000"
 4634      735F696E 
 4634      74657272 
 4634      75707473 
 4634      5F697063 
 4635              	.LASF300:
 4636 08c8 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 4636      44697643 
 4636      6D645061 
 4636      54797065 
 4636      53656C50 
 4637              	.LASF31:
 4638 08df 73727373 		.ascii	"srss_interrupt_backup_IRQn\000"
 4638      5F696E74 
 4638      65727275 
 4638      70745F62 
 4638      61636B75 
 4639              	.LASF22:
 4640 08fa 696F7373 		.ascii	"ioss_interrupts_gpio_12_IRQn\000"
 4640      5F696E74 
 4640      65727275 
 4640      7074735F 
 4640      6770696F 
 4641              	.LASF117:
 4642 0917 74637077 		.ascii	"tcpwm_1_interrupts_9_IRQn\000"
 4642      6D5F315F 
 4642      696E7465 
 4642      72727570 
 4642      74735F39 
 4643              	.LASF420:
 4644 0931 5F5F7A65 		.ascii	"__zero_table_t\000"
 4644      726F5F74 
 4644      61626C65 
 4644      5F7400
 4645              	.LASF196:
 4646 0940 53414D50 		.ascii	"SAMPLE_TIME23\000"
 4646      4C455F54 
 4646      494D4532 
 4646      3300
 4647              	.LASF361:
 4648 094e 72616E67 		.ascii	"rangeThres\000"
 4648      65546872 
 4648      657300
 4649              	.LASF164:
 4650 0959 5F5F7569 		.ascii	"__uint16_t\000"
 4650      6E743136 
 4650      5F7400
 4651              	.LASF6:
 4652 0964 53564361 		.ascii	"SVCall_IRQn\000"
 4652      6C6C5F49 
 4652      52516E00 
 4653              	.LASF349:
 4654 0970 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 4654      41525F52 
 4654      414E4745 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 190


 4654      5F434F4E 
 4654      445F494E 
 4655              	.LASF412:
 4656 0989 44455445 		.ascii	"DETECTOR_ADC_Start\000"
 4656      43544F52 
 4656      5F414443 
 4656      5F537461 
 4656      727400
 4657              	.LASF112:
 4658 099c 74637077 		.ascii	"tcpwm_1_interrupts_4_IRQn\000"
 4658      6D5F315F 
 4658      696E7465 
 4658      72727570 
 4658      74735F34 
 4659              	.LASF373:
 4660 09b6 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 4660      74635F73 
 4660      61725F63 
 4660      6F6E6669 
 4660      675F7400 
 4661              	.LASF59:
 4662 09ca 6373645F 		.ascii	"csd_interrupt_IRQn\000"
 4662      696E7465 
 4662      72727570 
 4662      745F4952 
 4662      516E00
 4663              	.LASF441:
 4664 09dd 433A5C55 		.ascii	"C:\\Users\\Ramon\\Desktop\\Artigo\\PSoC\\Testbench\\"
 4664      73657273 
 4664      5C52616D 
 4664      6F6E5C44 
 4664      65736B74 
 4665 0a0a 54657374 		.ascii	"Testbench\\Lock_in.cydsn\000"
 4665      62656E63 
 4665      685C4C6F 
 4665      636B5F69 
 4665      6E2E6379 
 4666              	.LASF415:
 4667 0a22 44455445 		.ascii	"DETECTOR_ADC_SelectConfig\000"
 4667      43544F52 
 4667      5F414443 
 4667      5F53656C 
 4667      65637443 
 4668              	.LASF21:
 4669 0a3c 696F7373 		.ascii	"ioss_interrupts_gpio_11_IRQn\000"
 4669      5F696E74 
 4669      65727275 
 4669      7074735F 
 4669      6770696F 
 4670              	.LASF43:
 4671 0a59 63707573 		.ascii	"cpuss_interrupts_ipc_8_IRQn\000"
 4671      735F696E 
 4671      74657272 
 4671      75707473 
 4671      5F697063 
 4672              	.LASF221:
 4673 0a75 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 191


 4673      4348414E 
 4673      5F434F4E 
 4673      46494700 
 4674              	.LASF248:
 4675 0a85 69706342 		.ascii	"ipcBase\000"
 4675      61736500 
 4676              	.LASF92:
 4677 0a8d 63707573 		.ascii	"cpuss_interrupts_fault_0_IRQn\000"
 4677      735F696E 
 4677      74657272 
 4677      75707473 
 4677      5F666175 
 4678              	.LASF96:
 4679 0aab 63707573 		.ascii	"cpuss_interrupts_cm0_cti_0_IRQn\000"
 4679      735F696E 
 4679      74657272 
 4679      75707473 
 4679      5F636D30 
 4680              	.LASF285:
 4681 0acb 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 4681      6843746C 
 4681      4D61696E 
 4681      57733346 
 4681      72657100 
 4682              	.LASF160:
 4683 0adf 4952516E 		.ascii	"IRQn_Type\000"
 4683      5F547970 
 4683      6500
 4684              	.LASF267:
 4685 0ae9 73727373 		.ascii	"srssNumPll\000"
 4685      4E756D50 
 4685      6C6C00
 4686              	.LASF143:
 4687 0af4 7564625F 		.ascii	"udb_interrupts_11_IRQn\000"
 4687      696E7465 
 4687      72727570 
 4687      74735F31 
 4687      315F4952 
 4688              	.LASF37:
 4689 0b0b 63707573 		.ascii	"cpuss_interrupts_ipc_2_IRQn\000"
 4689      735F696E 
 4689      74657272 
 4689      75707473 
 4689      5F697063 
 4690              	.LASF432:
 4691 0b27 43795F53 		.ascii	"Cy_SAR_DeInit\000"
 4691      41525F44 
 4691      65496E69 
 4691      7400
 4692              	.LASF104:
 4693 0b35 74637077 		.ascii	"tcpwm_0_interrupts_4_IRQn\000"
 4693      6D5F305F 
 4693      696E7465 
 4693      72727570 
 4693      74735F34 
 4694              	.LASF278:
 4695 0b4f 666C6173 		.ascii	"flashPipeRequired\000"
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 192


 4695      68506970 
 4695      65526571 
 4695      75697265 
 4695      6400
 4696              	.LASF218:
 4697 0b61 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 4697      455F494E 
 4697      54525F4D 
 4697      41534B00 
 4698              	.LASF411:
 4699 0b71 636F6E66 		.ascii	"configNum\000"
 4699      69674E75 
 4699      6D00
 4700              	.LASF372:
 4701 0b7b 5F426F6F 		.ascii	"_Bool\000"
 4701      6C00
 4702              	.LASF198:
 4703 0b81 52414E47 		.ascii	"RANGE_COND\000"
 4703      455F434F 
 4703      4E4400
 4704              	.LASF282:
 4705 0b8c 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 4705      6843746C 
 4705      4D61696E 
 4705      57733046 
 4705      72657100 
 4706              	.LASF151:
 4707 0ba0 70726F66 		.ascii	"profile_interrupt_IRQn\000"
 4707      696C655F 
 4707      696E7465 
 4707      72727570 
 4707      745F4952 
 4708              	.LASF149:
 4709 0bb7 61756469 		.ascii	"audioss_interrupt_i2s_IRQn\000"
 4709      6F73735F 
 4709      696E7465 
 4709      72727570 
 4709      745F6932 
 4710              	.LASF354:
 4711 0bd2 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 4711      41525F49 
 4711      4E54525F 
 4711      454F535F 
 4711      4D41534B 
 4712              	.LASF246:
 4713 0be7 6770696F 		.ascii	"gpioBase\000"
 4713      42617365 
 4713      00
 4714              	.LASF334:
 4715 0bf0 43595F53 		.ascii	"CY_SAR_BAD_PARAM\000"
 4715      41525F42 
 4715      41445F50 
 4715      4152414D 
 4715      00
 4716              	.LASF156:
 4717 0c01 70617373 		.ascii	"pass_interrupt_dacs_IRQn\000"
 4717      5F696E74 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 193


 4717      65727275 
 4717      70745F64 
 4717      6163735F 
 4718              	.LASF109:
 4719 0c1a 74637077 		.ascii	"tcpwm_1_interrupts_1_IRQn\000"
 4719      6D5F315F 
 4719      696E7465 
 4719      72727570 
 4719      74735F31 
 4720              	.LASF136:
 4721 0c34 7564625F 		.ascii	"udb_interrupts_4_IRQn\000"
 4721      696E7465 
 4721      72727570 
 4721      74735F34 
 4721      5F495251 
 4722              	.LASF406:
 4723 0c4a 6368616E 		.ascii	"chanCount\000"
 4723      436F756E 
 4723      7400
 4724              	.LASF150:
 4725 0c54 61756469 		.ascii	"audioss_interrupt_pdm_IRQn\000"
 4725      6F73735F 
 4725      696E7465 
 4725      72727570 
 4725      745F7064 
 4726              	.LASF129:
 4727 0c6f 74637077 		.ascii	"tcpwm_1_interrupts_21_IRQn\000"
 4727      6D5F315F 
 4727      696E7465 
 4727      72727570 
 4727      74735F32 
 4728              	.LASF391:
 4729 0c8a 656E6162 		.ascii	"enableMask\000"
 4729      6C654D61 
 4729      736B00
 4730              	.LASF68:
 4731 0c95 63707573 		.ascii	"cpuss_interrupts_dw0_8_IRQn\000"
 4731      735F696E 
 4731      74657272 
 4731      75707473 
 4731      5F647730 
 4732              	.LASF122:
 4733 0cb1 74637077 		.ascii	"tcpwm_1_interrupts_14_IRQn\000"
 4733      6D5F315F 
 4733      696E7465 
 4733      72727570 
 4733      74735F31 
 4734              	.LASF19:
 4735 0ccc 696F7373 		.ascii	"ioss_interrupts_gpio_9_IRQn\000"
 4735      5F696E74 
 4735      65727275 
 4735      7074735F 
 4735      6770696F 
 4736              	.LASF317:
 4737 0ce8 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 4737      73537973 
 4737      5469636B 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 194


 4737      43746C4F 
 4737      66667365 
 4738              	.LASF208:
 4739 0cfe 494E5452 		.ascii	"INTR\000"
 4739      00
 4740              	.LASF291:
 4741 0d03 64775374 		.ascii	"dwStatusChIdxPos\000"
 4741      61747573 
 4741      43684964 
 4741      78506F73 
 4741      00
 4742              	.LASF237:
 4743 0d14 5341525F 		.ascii	"SAR_V1_Type\000"
 4743      56315F54 
 4743      79706500 
 4744              	.LASF200:
 4745 0d20 53544152 		.ascii	"START_CTRL\000"
 4745      545F4354 
 4745      524C00
 4746              	.LASF66:
 4747 0d2b 63707573 		.ascii	"cpuss_interrupts_dw0_6_IRQn\000"
 4747      735F696E 
 4747      74657272 
 4747      75707473 
 4747      5F647730 
 4748              	.LASF371:
 4749 0d47 76726566 		.ascii	"vrefMvValue\000"
 4749      4D765661 
 4749      6C756500 
 4750              	.LASF14:
 4751 0d53 696F7373 		.ascii	"ioss_interrupts_gpio_4_IRQn\000"
 4751      5F696E74 
 4751      65727275 
 4751      7074735F 
 4751      6770696F 
 4752              	.LASF20:
 4753 0d6f 696F7373 		.ascii	"ioss_interrupts_gpio_10_IRQn\000"
 4753      5F696E74 
 4753      65727275 
 4753      7074735F 
 4753      6770696F 
 4754              	.LASF75:
 4755 0d8c 63707573 		.ascii	"cpuss_interrupts_dw0_15_IRQn\000"
 4755      735F696E 
 4755      74657272 
 4755      75707473 
 4755      5F647730 
 4756              	.LASF32:
 4757 0da9 73727373 		.ascii	"srss_interrupt_IRQn\000"
 4757      5F696E74 
 4757      65727275 
 4757      70745F49 
 4757      52516E00 
 4758              	.LASF262:
 4759 0dbd 63707573 		.ascii	"cpussFlashPaSize\000"
 4759      73466C61 
 4759      73685061 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 195


 4759      53697A65 
 4759      00
 4760              	.LASF83:
 4761 0dce 63707573 		.ascii	"cpuss_interrupts_dw1_7_IRQn\000"
 4761      735F696E 
 4761      74657272 
 4761      75707473 
 4761      5F647731 
 4762              	.LASF213:
 4763 0dea 53415455 		.ascii	"SATURATE_INTR_SET\000"
 4763      52415445 
 4763      5F494E54 
 4763      525F5345 
 4763      5400
 4764              	.LASF89:
 4765 0dfc 63707573 		.ascii	"cpuss_interrupts_dw1_13_IRQn\000"
 4765      735F696E 
 4765      74657272 
 4765      75707473 
 4765      5F647731 
 4766              	.LASF61:
 4767 0e19 63707573 		.ascii	"cpuss_interrupts_dw0_1_IRQn\000"
 4767      735F696E 
 4767      74657272 
 4767      75707473 
 4767      5F647730 
 4768              	.LASF435:
 4769 0e35 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 4769      79734C69 
 4769      625F4173 
 4769      73657274 
 4769      4661696C 
 4770              	.LASF85:
 4771 0e4c 63707573 		.ascii	"cpuss_interrupts_dw1_9_IRQn\000"
 4771      735F696E 
 4771      74657272 
 4771      75707473 
 4771      5F647731 
 4772              	.LASF363:
 4773 0e68 6368616E 		.ascii	"chanEn\000"
 4773      456E00
 4774              	.LASF303:
 4775 0e6f 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 4775      44697631 
 4775      365F3543 
 4775      746C4F66 
 4775      66736574 
 4776              	.LASF157:
 4777 0e84 756E636F 		.ascii	"unconnected_IRQn\000"
 4777      6E6E6563 
 4777      7465645F 
 4777      4952516E 
 4777      00
 4778              	.LASF145:
 4779 0e95 7564625F 		.ascii	"udb_interrupts_13_IRQn\000"
 4779      696E7465 
 4779      72727570 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 196


 4779      74735F31 
 4779      335F4952 
 4780              	.LASF78:
 4781 0eac 63707573 		.ascii	"cpuss_interrupts_dw1_2_IRQn\000"
 4781      735F696E 
 4781      74657272 
 4781      75707473 
 4781      5F647731 
 4782              	.LASF274:
 4783 0ec8 73797350 		.ascii	"sysPmSimoPresent\000"
 4783      6D53696D 
 4783      6F507265 
 4783      73656E74 
 4783      00
 4784              	.LASF155:
 4785 0ed9 7573625F 		.ascii	"usb_interrupt_lo_IRQn\000"
 4785      696E7465 
 4785      72727570 
 4785      745F6C6F 
 4785      5F495251 
 4786              	.LASF207:
 4787 0eef 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 4787      5F524553 
 4787      554C545F 
 4787      4E455756 
 4787      414C5545 
 4788              	.LASF95:
 4789 0f04 63707573 		.ascii	"cpuss_interrupt_fm_IRQn\000"
 4789      735F696E 
 4789      74657272 
 4789      7570745F 
 4789      666D5F49 
 4790              	.LASF408:
 4791 0f1c 656E644F 		.ascii	"endOfConversion\000"
 4791      66436F6E 
 4791      76657273 
 4791      696F6E00 
 4792              	.LASF343:
 4793 0f2c 63795F65 		.ascii	"cy_en_sar_return_mode_t\000"
 4793      6E5F7361 
 4793      725F7265 
 4793      7475726E 
 4793      5F6D6F64 
 4794              	.LASF141:
 4795 0f44 7564625F 		.ascii	"udb_interrupts_9_IRQn\000"
 4795      696E7465 
 4795      72727570 
 4795      74735F39 
 4795      5F495251 
 4796              	.LASF226:
 4797 0f5a 4156475F 		.ascii	"AVG_STAT\000"
 4797      53544154 
 4797      00
 4798              	.LASF292:
 4799 0f63 64775374 		.ascii	"dwStatusChIdxMsk\000"
 4799      61747573 
 4799      43684964 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 197


 4799      784D736B 
 4799      00
 4800              	.LASF342:
 4801 0f74 43595F53 		.ascii	"CY_SAR_WAIT_FOR_RESULT\000"
 4801      41525F57 
 4801      4149545F 
 4801      464F525F 
 4801      52455355 
 4802              	.LASF173:
 4803 0f8b 75696E74 		.ascii	"uint8_t\000"
 4803      385F7400 
 4804              	.LASF337:
 4805 0f93 63795F65 		.ascii	"cy_en_sar_status_t\000"
 4805      6E5F7361 
 4805      725F7374 
 4805      61747573 
 4805      5F7400
 4806              	.LASF127:
 4807 0fa6 74637077 		.ascii	"tcpwm_1_interrupts_19_IRQn\000"
 4807      6D5F315F 
 4807      696E7465 
 4807      72727570 
 4807      74735F31 
 4808              	.LASF379:
 4809 0fc1 696E7472 		.ascii	"intrSrc\000"
 4809      53726300 
 4810              	.LASF407:
 4811 0fc9 7265744D 		.ascii	"retMode\000"
 4811      6F646500 
 4812              	.LASF297:
 4813 0fd1 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 4813      44697643 
 4813      6D644469 
 4813      7653656C 
 4813      4D736B00 
 4814              	.LASF263:
 4815 0fe5 63707573 		.ascii	"cpussIpc0Irq\000"
 4815      73497063 
 4815      30497271 
 4815      00
 4816              	.LASF29:
 4817 0ff2 73727373 		.ascii	"srss_interrupt_mcwdt_0_IRQn\000"
 4817      5F696E74 
 4817      65727275 
 4817      70745F6D 
 4817      63776474 
 4818              	.LASF333:
 4819 100e 43595F53 		.ascii	"CY_SAR_SUCCESS\000"
 4819      41525F53 
 4819      55434345 
 4819      535300
 4820              	.LASF217:
 4821 101d 52414E47 		.ascii	"RANGE_INTR_SET\000"
 4821      455F494E 
 4821      54525F53 
 4821      455400
 4822              	.LASF162:
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 198


 4823 102c 756E7369 		.ascii	"unsigned char\000"
 4823      676E6564 
 4823      20636861 
 4823      7200
 4824              	.LASF305:
 4825 103a 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 4825      50727449 
 4825      6E747243 
 4825      66674F66 
 4825      66736574 
 4826              	.LASF369:
 4827 104f 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 4827      77697463 
 4827      68537143 
 4827      74726C00 
 4828              	.LASF40:
 4829 105f 63707573 		.ascii	"cpuss_interrupts_ipc_5_IRQn\000"
 4829      735F696E 
 4829      74657272 
 4829      75707473 
 4829      5F697063 
 4830              	.LASF362:
 4831 107b 72616E67 		.ascii	"rangeCond\000"
 4831      65436F6E 
 4831      6400
 4832              	.LASF321:
 4833 1085 63707573 		.ascii	"cpussRam0Ctl0\000"
 4833      7352616D 
 4833      3043746C 
 4833      3000
 4834              	.LASF170:
 4835 1093 6C6F6E67 		.ascii	"long long int\000"
 4835      206C6F6E 
 4835      6720696E 
 4835      7400
 4836              	.LASF419:
 4837 10a1 5F5F636F 		.ascii	"__copy_table_end__\000"
 4837      70795F74 
 4837      61626C65 
 4837      5F656E64 
 4837      5F5F00
 4838              	.LASF289:
 4839 10b4 64774368 		.ascii	"dwChCtlPrioPos\000"
 4839      43746C50 
 4839      72696F50 
 4839      6F7300
 4840              	.LASF395:
 4841 10c3 44455445 		.ascii	"DETECTOR_ADC_StartConvert\000"
 4841      43544F52 
 4841      5F414443 
 4841      5F537461 
 4841      7274436F 
 4842              	.LASF249:
 4843 10dd 63727970 		.ascii	"cryptoBase\000"
 4843      746F4261 
 4843      736500
 4844              	.LASF355:
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 199


 4845 10e8 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 4845      41525F49 
 4845      4E54525F 
 4845      4F564552 
 4845      464C4F57 
 4846              	.LASF35:
 4847 1102 63707573 		.ascii	"cpuss_interrupts_ipc_0_IRQn\000"
 4847      735F696E 
 4847      74657272 
 4847      75707473 
 4847      5F697063 
 4848              	.LASF390:
 4849 111e 43795F53 		.ascii	"Cy_SAR_SetChanMask\000"
 4849      41525F53 
 4849      65744368 
 4849      616E4D61 
 4849      736B00
 4850              	.LASF396:
 4851 1131 44455445 		.ascii	"DETECTOR_ADC_SetConvertMode\000"
 4851      43544F52 
 4851      5F414443 
 4851      5F536574 
 4851      436F6E76 
 4852              	.LASF356:
 4853 114d 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 4853      41525F49 
 4853      4E54525F 
 4853      46575F43 
 4853      4F4C4C49 
 4854              	.LASF101:
 4855 116b 74637077 		.ascii	"tcpwm_0_interrupts_1_IRQn\000"
 4855      6D5F305F 
 4855      696E7465 
 4855      72727570 
 4855      74735F31 
 4856              	.LASF154:
 4857 1185 7573625F 		.ascii	"usb_interrupt_med_IRQn\000"
 4857      696E7465 
 4857      72727570 
 4857      745F6D65 
 4857      645F4952 
 4858              	.LASF392:
 4859 119c 44455445 		.ascii	"DETECTOR_ADC_Enable\000"
 4859      43544F52 
 4859      5F414443 
 4859      5F456E61 
 4859      626C6500 
 4860              	.LASF56:
 4861 11b0 7363625F 		.ascii	"scb_5_interrupt_IRQn\000"
 4861      355F696E 
 4861      74657272 
 4861      7570745F 
 4861      4952516E 
 4862              	.LASF421:
 4863 11c5 5F5F7A65 		.ascii	"__zero_table_start__\000"
 4863      726F5F74 
 4863      61626C65 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 200


 4863      5F737461 
 4863      72745F5F 
 4864              	.LASF425:
 4865 11da 44455445 		.ascii	"DETECTOR_ADC_initVar\000"
 4865      43544F52 
 4865      5F414443 
 4865      5F696E69 
 4865      74566172 
 4866              	.LASF50:
 4867 11ef 63707573 		.ascii	"cpuss_interrupts_ipc_15_IRQn\000"
 4867      735F696E 
 4867      74657272 
 4867      75707473 
 4867      5F697063 
 4868              	.LASF163:
 4869 120c 5F5F696E 		.ascii	"__int16_t\000"
 4869      7431365F 
 4869      7400
 4870              	.LASF105:
 4871 1216 74637077 		.ascii	"tcpwm_0_interrupts_5_IRQn\000"
 4871      6D5F305F 
 4871      696E7465 
 4871      72727570 
 4871      74735F35 
 4872              	.LASF269:
 4873 1230 70657269 		.ascii	"periClockNr\000"
 4873      436C6F63 
 4873      6B4E7200 
 4874              	.LASF400:
 4875 123c 44455445 		.ascii	"DETECTOR_ADC_IRQ_Disable\000"
 4875      43544F52 
 4875      5F414443 
 4875      5F495251 
 4875      5F446973 
 4876              	.LASF418:
 4877 1255 5F5F636F 		.ascii	"__copy_table_start__\000"
 4877      70795F74 
 4877      61626C65 
 4877      5F737461 
 4877      72745F5F 
 4878              	.LASF245:
 4879 126a 6873696F 		.ascii	"hsiomBase\000"
 4879      6D426173 
 4879      6500
 4880              	.LASF434:
 4881 1274 43795F53 		.ascii	"Cy_SAR_StartConvert\000"
 4881      41525F53 
 4881      74617274 
 4881      436F6E76 
 4881      65727400 
 4882              	.LASF203:
 4883 1288 4348414E 		.ascii	"CHAN_RESULT\000"
 4883      5F524553 
 4883      554C5400 
 4884              	.LASF4:
 4885 1294 42757346 		.ascii	"BusFault_IRQn\000"
 4885      61756C74 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 201


 4885      5F495251 
 4885      6E00
 4886              	.LASF311:
 4887 12a2 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 4887      73436D34 
 4887      436C6F63 
 4887      6B43746C 
 4887      4F666673 
 4888              	.LASF322:
 4889 12b9 63707573 		.ascii	"cpussRam1Ctl0\000"
 4889      7352616D 
 4889      3143746C 
 4889      3000
 4890              	.LASF295:
 4891 12c7 70657269 		.ascii	"periTrGrOffset\000"
 4891      54724772 
 4891      4F666673 
 4891      657400
 4892              	.LASF216:
 4893 12d6 52414E47 		.ascii	"RANGE_INTR\000"
 4893      455F494E 
 4893      545200
 4894              	.LASF133:
 4895 12e1 7564625F 		.ascii	"udb_interrupts_1_IRQn\000"
 4895      696E7465 
 4895      72727570 
 4895      74735F31 
 4895      5F495251 
 4896              	.LASF261:
 4897 12f7 63707573 		.ascii	"cpussDwChNr\000"
 4897      73447743 
 4897      684E7200 
 4898              	.LASF210:
 4899 1303 494E5452 		.ascii	"INTR_MASK\000"
 4899      5F4D4153 
 4899      4B00
 4900              	.LASF153:
 4901 130d 7573625F 		.ascii	"usb_interrupt_hi_IRQn\000"
 4901      696E7465 
 4901      72727570 
 4901      745F6869 
 4901      5F495251 
 4902              	.LASF364:
 4903 1323 6368616E 		.ascii	"chanConfig\000"
 4903      436F6E66 
 4903      696700
 4904              	.LASF414:
 4905 132e 75736572 		.ascii	"userIsr\000"
 4905      49737200 
 4906              	.LASF52:
 4907 1336 7363625F 		.ascii	"scb_1_interrupt_IRQn\000"
 4907      315F696E 
 4907      74657272 
 4907      7570745F 
 4907      4952516E 
 4908              	.LASF119:
 4909 134b 74637077 		.ascii	"tcpwm_1_interrupts_11_IRQn\000"
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 202


 4909      6D5F315F 
 4909      696E7465 
 4909      72727570 
 4909      74735F31 
 4910              	.LASF16:
 4911 1366 696F7373 		.ascii	"ioss_interrupts_gpio_6_IRQn\000"
 4911      5F696E74 
 4911      65727275 
 4911      7074735F 
 4911      6770696F 
 4912              	.LASF332:
 4913 1382 75696E74 		.ascii	"uint32\000"
 4913      333200
 4914              	.LASF259:
 4915 1389 63707573 		.ascii	"cpussIpcNr\000"
 4915      73497063 
 4915      4E7200
 4916              	.LASF229:
 4917 1394 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 4917      53574954 
 4917      43485F43 
 4917      4C454152 
 4917      3000
 4918              	.LASF388:
 4919 13a6 5F5F4E56 		.ascii	"__NVIC_DisableIRQ\000"
 4919      49435F44 
 4919      69736162 
 4919      6C654952 
 4919      5100
 4920              	.LASF402:
 4921 13b8 6D61736B 		.ascii	"mask\000"
 4921      00
 4922              	.LASF69:
 4923 13bd 63707573 		.ascii	"cpuss_interrupts_dw0_9_IRQn\000"
 4923      735F696E 
 4923      74657272 
 4923      75707473 
 4923      5F647730 
 4924              	.LASF383:
 4925 13d9 5F5F4453 		.ascii	"__DSB\000"
 4925      4200
 4926              	.LASF63:
 4927 13df 63707573 		.ascii	"cpuss_interrupts_dw0_3_IRQn\000"
 4927      735F696E 
 4927      74657272 
 4927      75707473 
 4927      5F647730 
 4928              	.LASF323:
 4929 13fb 63707573 		.ascii	"cpussRam2Ctl0\000"
 4929      7352616D 
 4929      3243746C 
 4929      3000
 4930              	.LASF11:
 4931 1409 696F7373 		.ascii	"ioss_interrupts_gpio_1_IRQn\000"
 4931      5F696E74 
 4931      65727275 
 4931      7074735F 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 203


 4931      6770696F 
 4932              	.LASF184:
 4933 1425 49435052 		.ascii	"ICPR\000"
 4933      00
 4934              	.LASF72:
 4935 142a 63707573 		.ascii	"cpuss_interrupts_dw0_12_IRQn\000"
 4935      735F696E 
 4935      74657272 
 4935      75707473 
 4935      5F647730 
 4936              	.LASF24:
 4937 1447 696F7373 		.ascii	"ioss_interrupts_gpio_14_IRQn\000"
 4937      5F696E74 
 4937      65727275 
 4937      7074735F 
 4937      6770696F 
 4938              	.LASF338:
 4939 1464 43595F53 		.ascii	"CY_SAR_START_CONVERT_SINGLE_SHOT\000"
 4939      41525F53 
 4939      54415254 
 4939      5F434F4E 
 4939      56455254 
 4940              	.LASF80:
 4941 1485 63707573 		.ascii	"cpuss_interrupts_dw1_4_IRQn\000"
 4941      735F696E 
 4941      74657272 
 4941      75707473 
 4941      5F647731 
 4942              	.LASF86:
 4943 14a1 63707573 		.ascii	"cpuss_interrupts_dw1_10_IRQn\000"
 4943      735F696E 
 4943      74657272 
 4943      75707473 
 4943      5F647731 
 4944              	.LASF106:
 4945 14be 74637077 		.ascii	"tcpwm_0_interrupts_6_IRQn\000"
 4945      6D5F305F 
 4945      696E7465 
 4945      72727570 
 4945      74735F36 
 4946              	.LASF273:
 4947 14d8 75646250 		.ascii	"udbPresent\000"
 4947      72657365 
 4947      6E7400
 4948              	.LASF335:
 4949 14e3 43595F53 		.ascii	"CY_SAR_TIMEOUT\000"
 4949      41525F54 
 4949      494D454F 
 4949      555400
 4950              	.LASF302:
 4951 14f2 70657269 		.ascii	"periDiv16CtlOffset\000"
 4951      44697631 
 4951      3643746C 
 4951      4F666673 
 4951      657400
 4952              	.LASF116:
 4953 1505 74637077 		.ascii	"tcpwm_1_interrupts_8_IRQn\000"
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 204


 4953      6D5F315F 
 4953      696E7465 
 4953      72727570 
 4953      74735F38 
 4954              	.LASF368:
 4955 151f 6D757853 		.ascii	"muxSwitch\000"
 4955      77697463 
 4955      6800
 4956              	.LASF165:
 4957 1529 73686F72 		.ascii	"short unsigned int\000"
 4957      7420756E 
 4957      7369676E 
 4957      65642069 
 4957      6E7400
 4958              	.LASF239:
 4959 153c 6C6F6E67 		.ascii	"long double\000"
 4959      20646F75 
 4959      626C6500 
 4960              	.LASF175:
 4961 1548 75696E74 		.ascii	"uint16_t\000"
 4961      31365F74 
 4961      00
 4962              	.LASF387:
 4963 1551 4952516E 		.ascii	"IRQn\000"
 4963      00
 4964              	.LASF294:
 4965 1556 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 4965      5472436D 
 4965      64477253 
 4965      656C4D73 
 4965      6B00
 4966              	.LASF99:
 4967 1568 63707573 		.ascii	"cpuss_interrupts_cm4_cti_1_IRQn\000"
 4967      735F696E 
 4967      74657272 
 4967      75707473 
 4967      5F636D34 
 4968              	.LASF111:
 4969 1588 74637077 		.ascii	"tcpwm_1_interrupts_3_IRQn\000"
 4969      6D5F315F 
 4969      696E7465 
 4969      72727570 
 4969      74735F33 
 4970              	.LASF138:
 4971 15a2 7564625F 		.ascii	"udb_interrupts_6_IRQn\000"
 4971      696E7465 
 4971      72727570 
 4971      74735F36 
 4971      5F495251 
 4972              	.LASF359:
 4973 15b8 73616D70 		.ascii	"sampleTime01\000"
 4973      6C655469 
 4973      6D653031 
 4973      00
 4974              	.LASF268:
 4975 15c5 73727373 		.ascii	"srssNumHfroot\000"
 4975      4E756D48 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 205


 4975      66726F6F 
 4975      7400
 4976              	.LASF252:
 4977 15d3 64775665 		.ascii	"dwVersion\000"
 4977      7273696F 
 4977      6E00
 4978              	.LASF124:
 4979 15dd 74637077 		.ascii	"tcpwm_1_interrupts_16_IRQn\000"
 4979      6D5F315F 
 4979      696E7465 
 4979      72727570 
 4979      74735F31 
 4980              	.LASF42:
 4981 15f8 63707573 		.ascii	"cpuss_interrupts_ipc_7_IRQn\000"
 4981      735F696E 
 4981      74657272 
 4981      75707473 
 4981      5F697063 
 4982              	.LASF397:
 4983 1614 636F6E66 		.ascii	"config\000"
 4983      696700
 4984              	.LASF347:
 4985 161b 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_ENABLE\000"
 4985      41525F53 
 4985      57495443 
 4985      485F5345 
 4985      515F4354 
 4986              	.LASF190:
 4987 1639 73697A65 		.ascii	"sizetype\000"
 4987      74797065 
 4987      00
 4988              	.LASF341:
 4989 1642 43595F53 		.ascii	"CY_SAR_RETURN_STATUS\000"
 4989      41525F52 
 4989      45545552 
 4989      4E5F5354 
 4989      41545553 
 4990              	.LASF319:
 4991 1657 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 4991      73436D34 
 4991      4E6D6943 
 4991      746C4F66 
 4991      66736574 
 4992              	.LASF179:
 4993 166c 52455345 		.ascii	"RESERVED0\000"
 4993      52564544 
 4993      3000
 4994              	.LASF301:
 4995 1676 70657269 		.ascii	"periDiv8CtlOffset\000"
 4995      44697638 
 4995      43746C4F 
 4995      66667365 
 4995      7400
 4996              	.LASF183:
 4997 1688 52455345 		.ascii	"RESERVED2\000"
 4997      52564544 
 4997      3200
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 206


 4998              	.LASF185:
 4999 1692 52455345 		.ascii	"RESERVED3\000"
 4999      52564544 
 4999      3300
 5000              	.LASF440:
 5001 169c 47656E65 		.ascii	"Generated_Source\\PSoC6\\DETECTOR_ADC.c\000"
 5001      72617465 
 5001      645F536F 
 5001      75726365 
 5001      5C50536F 
 5002              	.LASF188:
 5003 16c2 52455345 		.ascii	"RESERVED5\000"
 5003      52564544 
 5003      3500
 5004              	.LASF222:
 5005 16cc 52455345 		.ascii	"RESERVED6\000"
 5005      52564544 
 5005      3600
 5006              	.LASF384:
 5007 16d6 43795F53 		.ascii	"Cy_SAR_Disable\000"
 5007      41525F44 
 5007      69736162 
 5007      6C6500
 5008              	.LASF227:
 5009 16e5 52455345 		.ascii	"RESERVED8\000"
 5009      52564544 
 5009      3800
 5010              	.LASF34:
 5011 16ef 626C6573 		.ascii	"bless_interrupt_IRQn\000"
 5011      735F696E 
 5011      74657272 
 5011      7570745F 
 5011      4952516E 
 5012              	.LASF215:
 5013 1704 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 5013      52415445 
 5013      5F494E54 
 5013      525F4D41 
 5013      534B4544 
 5014              	.LASF232:
 5015 1719 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 5015      53574954 
 5015      43485F53 
 5015      515F4354 
 5015      524C00
 5016              	.LASF167:
 5017 172c 6C6F6E67 		.ascii	"long int\000"
 5017      20696E74 
 5017      00
 5018              	.LASF91:
 5019 1735 63707573 		.ascii	"cpuss_interrupts_dw1_15_IRQn\000"
 5019      735F696E 
 5019      74657272 
 5019      75707473 
 5019      5F647731 
 5020              	.LASF250:
 5021 1752 63707573 		.ascii	"cpussVersion\000"
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 207


 5021      73566572 
 5021      73696F6E 
 5021      00
 5022              	.LASF431:
 5023 175f 776C656E 		.ascii	"wlen\000"
 5023      00
 5024              	.LASF423:
 5025 1764 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5025      52784275 
 5025      66666572 
 5025      00
 5026              	.LASF254:
 5027 1771 6770696F 		.ascii	"gpioVersion\000"
 5027      56657273 
 5027      696F6E00 
 5028              	.LASF1:
 5029 177d 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 5029      61736B61 
 5029      626C6549 
 5029      6E745F49 
 5029      52516E00 
 5030              	.LASF128:
 5031 1791 74637077 		.ascii	"tcpwm_1_interrupts_20_IRQn\000"
 5031      6D5F315F 
 5031      696E7465 
 5031      72727570 
 5031      74735F32 
 5032              	.LASF253:
 5033 17ac 666C6173 		.ascii	"flashcVersion\000"
 5033      68635665 
 5033      7273696F 
 5033      6E00
 5034              	.LASF275:
 5035 17ba 70726F74 		.ascii	"protBusMasterMask\000"
 5035      4275734D 
 5035      61737465 
 5035      724D6173 
 5035      6B00
 5036              	.LASF244:
 5037 17cc 70726F74 		.ascii	"protBase\000"
 5037      42617365 
 5037      00
 5038              	.LASF57:
 5039 17d5 7363625F 		.ascii	"scb_6_interrupt_IRQn\000"
 5039      365F696E 
 5039      74657272 
 5039      7570745F 
 5039      4952516E 
 5040              	.LASF350:
 5041 17ea 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 5041      41525F52 
 5041      414E4745 
 5041      5F434F4E 
 5041      445F4142 
 5042              	.LASF197:
 5043 1802 52414E47 		.ascii	"RANGE_THRES\000"
 5043      455F5448 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 208


 5043      52455300 
 5044              	.LASF394:
 5045 180e 44455445 		.ascii	"DETECTOR_ADC_InitConfig\000"
 5045      43544F52 
 5045      5F414443 
 5045      5F496E69 
 5045      74436F6E 
 5046              	.LASF328:
 5047 1826 63686172 		.ascii	"char_t\000"
 5047      5F7400
 5048              	.LASF336:
 5049 182d 43595F53 		.ascii	"CY_SAR_CONVERSION_NOT_COMPLETE\000"
 5049      41525F43 
 5049      4F4E5645 
 5049      5253494F 
 5049      4E5F4E4F 
 5050              	.LASF47:
 5051 184c 63707573 		.ascii	"cpuss_interrupts_ipc_12_IRQn\000"
 5051      735F696E 
 5051      74657272 
 5051      75707473 
 5051      5F697063 
 5052              	.LASF202:
 5053 1869 4348414E 		.ascii	"CHAN_WORK\000"
 5053      5F574F52 
 5053      4B00
 5054              	.LASF41:
 5055 1873 63707573 		.ascii	"cpuss_interrupts_ipc_6_IRQn\000"
 5055      735F696E 
 5055      74657272 
 5055      75707473 
 5055      5F697063 
 5056              	.LASF331:
 5057 188f 646F7562 		.ascii	"double\000"
 5057      6C6500
 5058              	.LASF422:
 5059 1896 5F5F7A65 		.ascii	"__zero_table_end__\000"
 5059      726F5F74 
 5059      61626C65 
 5059      5F656E64 
 5059      5F5F00
 5060              	.LASF88:
 5061 18a9 63707573 		.ascii	"cpuss_interrupts_dw1_12_IRQn\000"
 5061      735F696E 
 5061      74657272 
 5061      75707473 
 5061      5F647731 
 5062              	.LASF393:
 5063 18c6 44455445 		.ascii	"DETECTOR_ADC_Stop\000"
 5063      43544F52 
 5063      5F414443 
 5063      5F53746F 
 5063      7000
 5064              	.LASF18:
 5065 18d8 696F7373 		.ascii	"ioss_interrupts_gpio_8_IRQn\000"
 5065      5F696E74 
 5065      65727275 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 209


 5065      7074735F 
 5065      6770696F 
 5066              	.LASF314:
 5067 18f4 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 5067      73436D34 
 5067      50777243 
 5067      746C4F66 
 5067      66736574 
 5068              	.LASF152:
 5069 1909 736D6966 		.ascii	"smif_interrupt_IRQn\000"
 5069      5F696E74 
 5069      65727275 
 5069      70745F49 
 5069      52516E00 
 5070              	.LASF53:
 5071 191d 7363625F 		.ascii	"scb_2_interrupt_IRQn\000"
 5071      325F696E 
 5071      74657272 
 5071      7570745F 
 5071      4952516E 
 5072              	.LASF191:
 5073 1932 4E564943 		.ascii	"NVIC_Type\000"
 5073      5F547970 
 5073      6500
 5074              	.LASF377:
 5075 193c 6D697363 		.ascii	"miscConfig\000"
 5075      436F6E66 
 5075      696700
 5076              	.LASF13:
 5077 1947 696F7373 		.ascii	"ioss_interrupts_gpio_3_IRQn\000"
 5077      5F696E74 
 5077      65727275 
 5077      7074735F 
 5077      6770696F 
 5078              	.LASF74:
 5079 1963 63707573 		.ascii	"cpuss_interrupts_dw0_14_IRQn\000"
 5079      735F696E 
 5079      74657272 
 5079      75707473 
 5079      5F647730 
 5080              	.LASF271:
 5081 1980 70617373 		.ascii	"passSarChannels\000"
 5081      53617243 
 5081      68616E6E 
 5081      656C7300 
 5082              	.LASF82:
 5083 1990 63707573 		.ascii	"cpuss_interrupts_dw1_6_IRQn\000"
 5083      735F696E 
 5083      74657272 
 5083      75707473 
 5083      5F647731 
 5084              	.LASF130:
 5085 19ac 74637077 		.ascii	"tcpwm_1_interrupts_22_IRQn\000"
 5085      6D5F315F 
 5085      696E7465 
 5085      72727570 
 5085      74735F32 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 210


 5086              	.LASF211:
 5087 19c7 494E5452 		.ascii	"INTR_MASKED\000"
 5087      5F4D4153 
 5087      4B454400 
 5088              	.LASF60:
 5089 19d3 63707573 		.ascii	"cpuss_interrupts_dw0_0_IRQn\000"
 5089      735F696E 
 5089      74657272 
 5089      75707473 
 5089      5F647730 
 5090              	.LASF316:
 5091 19ef 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 5091      73547269 
 5091      6D526F6D 
 5091      43746C4F 
 5091      66667365 
 5092              	.LASF360:
 5093 1a05 73616D70 		.ascii	"sampleTime23\000"
 5093      6C655469 
 5093      6D653233 
 5093      00
 5094              	.LASF193:
 5095 1a12 53414D50 		.ascii	"SAMPLE_CTRL\000"
 5095      4C455F43 
 5095      54524C00 
 5096              	.LASF380:
 5097 1a1e 696E7472 		.ascii	"intrPriority\000"
 5097      5072696F 
 5097      72697479 
 5097      00
 5098              	.LASF144:
 5099 1a2b 7564625F 		.ascii	"udb_interrupts_12_IRQn\000"
 5099      696E7465 
 5099      72727570 
 5099      74735F31 
 5099      325F4952 
 5100              	.LASF9:
 5101 1a42 53797354 		.ascii	"SysTick_IRQn\000"
 5101      69636B5F 
 5101      4952516E 
 5101      00
 5102              	.LASF438:
 5103 1a4f 43795F53 		.ascii	"Cy_SAR_Enable\000"
 5103      41525F45 
 5103      6E61626C 
 5103      6500
 5104              	.LASF255:
 5105 1a5d 6873696F 		.ascii	"hsiomVersion\000"
 5105      6D566572 
 5105      73696F6E 
 5105      00
 5106              	.LASF77:
 5107 1a6a 63707573 		.ascii	"cpuss_interrupts_dw1_1_IRQn\000"
 5107      735F696E 
 5107      74657272 
 5107      75707473 
 5107      5F647731 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 211


 5108              	.LASF324:
 5109 1a86 69706353 		.ascii	"ipcStructSize\000"
 5109      74727563 
 5109      7453697A 
 5109      6500
 5110              	.LASF169:
 5111 1a94 6C6F6E67 		.ascii	"long unsigned int\000"
 5111      20756E73 
 5111      69676E65 
 5111      6420696E 
 5111      7400
 5112              	.LASF103:
 5113 1aa6 74637077 		.ascii	"tcpwm_0_interrupts_3_IRQn\000"
 5113      6D5F305F 
 5113      696E7465 
 5113      72727570 
 5113      74735F33 
 5114              	.LASF320:
 5115 1ac0 63707573 		.ascii	"cpussRomCtl\000"
 5115      73526F6D 
 5115      43746C00 
 5116              	.LASF64:
 5117 1acc 63707573 		.ascii	"cpuss_interrupts_dw0_4_IRQn\000"
 5117      735F696E 
 5117      74657272 
 5117      75707473 
 5117      5F647730 
 5118              	.LASF176:
 5119 1ae8 696E7433 		.ascii	"int32_t\000"
 5119      325F7400 
 5120              	.LASF326:
 5121 1af0 63795F73 		.ascii	"cy_stc_device_t\000"
 5121      74635F64 
 5121      65766963 
 5121      655F7400 
 5122              	.LASF228:
 5123 1b00 4D55585F 		.ascii	"MUX_SWITCH0\000"
 5123      53574954 
 5123      43483000 
 5124              	.LASF205:
 5125 1b0c 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 5125      5F524553 
 5125      554C545F 
 5125      55504441 
 5125      54454400 
 5126              	.LASF113:
 5127 1b20 74637077 		.ascii	"tcpwm_1_interrupts_5_IRQn\000"
 5127      6D5F315F 
 5127      696E7465 
 5127      72727570 
 5127      74735F35 
 5128              	.LASF140:
 5129 1b3a 7564625F 		.ascii	"udb_interrupts_8_IRQn\000"
 5129      696E7465 
 5129      72727570 
 5129      74735F38 
 5129      5F495251 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 212


 5130              	.LASF243:
 5131 1b50 75646242 		.ascii	"udbBase\000"
 5131      61736500 
 5132              	.LASF201:
 5133 1b58 4348414E 		.ascii	"CHAN_CONFIG\000"
 5133      5F434F4E 
 5133      46494700 
 5134              	.LASF313:
 5135 1b64 63707573 		.ascii	"cpussCm0StatusOffset\000"
 5135      73436D30 
 5135      53746174 
 5135      75734F66 
 5135      66736574 
 5136              	.LASF358:
 5137 1b79 73616D70 		.ascii	"sampleCtrl\000"
 5137      6C654374 
 5137      726C00
 5138              	.LASF385:
 5139 1b84 5F5F4E56 		.ascii	"__NVIC_EnableIRQ\000"
 5139      49435F45 
 5139      6E61626C 
 5139      65495251 
 5139      00
 5140              	.LASF126:
 5141 1b95 74637077 		.ascii	"tcpwm_1_interrupts_18_IRQn\000"
 5141      6D5F315F 
 5141      696E7465 
 5141      72727570 
 5141      74735F31 
 5142              	.LASF7:
 5143 1bb0 44656275 		.ascii	"DebugMonitor_IRQn\000"
 5143      674D6F6E 
 5143      69746F72 
 5143      5F495251 
 5143      6E00
 5144              	.LASF5:
 5145 1bc2 55736167 		.ascii	"UsageFault_IRQn\000"
 5145      65466175 
 5145      6C745F49 
 5145      52516E00 
 5146              	.LASF108:
 5147 1bd2 74637077 		.ascii	"tcpwm_1_interrupts_0_IRQn\000"
 5147      6D5F315F 
 5147      696E7465 
 5147      72727570 
 5147      74735F30 
 5148              	.LASF135:
 5149 1bec 7564625F 		.ascii	"udb_interrupts_3_IRQn\000"
 5149      696E7465 
 5149      72727570 
 5149      74735F33 
 5149      5F495251 
 5150              	.LASF353:
 5151 1c02 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 5151      41525F49 
 5151      4E54525F 
 5151      4D41534B 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 213


 5151      5F4E4F4E 
 5152              	.LASF235:
 5153 1c18 414E415F 		.ascii	"ANA_TRIM0\000"
 5153      5452494D 
 5153      3000
 5154              	.LASF236:
 5155 1c22 414E415F 		.ascii	"ANA_TRIM1\000"
 5155      5452494D 
 5155      3100
 5156              	.LASF168:
 5157 1c2c 5F5F7569 		.ascii	"__uint32_t\000"
 5157      6E743332 
 5157      5F7400
 5158              	.LASF327:
 5159 1c37 63795F69 		.ascii	"cy_israddress\000"
 5159      73726164 
 5159      64726573 
 5159      7300
 5160              	.LASF121:
 5161 1c45 74637077 		.ascii	"tcpwm_1_interrupts_13_IRQn\000"
 5161      6D5F315F 
 5161      696E7465 
 5161      72727570 
 5161      74735F31 
 5162              	.LASF51:
 5163 1c60 7363625F 		.ascii	"scb_0_interrupt_IRQn\000"
 5163      305F696E 
 5163      74657272 
 5163      7570745F 
 5163      4952516E 
 5164              	.LASF39:
 5165 1c75 63707573 		.ascii	"cpuss_interrupts_ipc_4_IRQn\000"
 5165      735F696E 
 5165      74657272 
 5165      75707473 
 5165      5F697063 
 5166              	.LASF344:
 5167 1c91 43595F53 		.ascii	"CY_SAR_SWITCH_OPEN\000"
 5167      41525F53 
 5167      57495443 
 5167      485F4F50 
 5167      454E00
 5168              	.LASF214:
 5169 1ca4 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 5169      52415445 
 5169      5F494E54 
 5169      525F4D41 
 5169      534B00
 5170              	.LASF417:
 5171 1cb7 5F5F636F 		.ascii	"__copy_table_t\000"
 5171      70795F74 
 5171      61626C65 
 5171      5F7400
 5172              	.LASF234:
 5173 1cc6 52455345 		.ascii	"RESERVED10\000"
 5173      52564544 
 5173      313000
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 214


 5174              	.LASF281:
 5175 1cd1 666C6173 		.ascii	"flashEraseDelay\000"
 5175      68457261 
 5175      73654465 
 5175      6C617900 
 5176              	.LASF65:
 5177 1ce1 63707573 		.ascii	"cpuss_interrupts_dw0_5_IRQn\000"
 5177      735F696E 
 5177      74657272 
 5177      75707473 
 5177      5F647730 
 5178              	.LASF287:
 5179 1cfd 64774368 		.ascii	"dwChOffset\000"
 5179      4F666673 
 5179      657400
 5180              	.LASF426:
 5181 1d08 44455445 		.ascii	"DETECTOR_ADC_selected\000"
 5181      43544F52 
 5181      5F414443 
 5181      5F73656C 
 5181      65637465 
 5182              	.LASF180:
 5183 1d1e 49434552 		.ascii	"ICER\000"
 5183      00
 5184              	.LASF389:
 5185 1d23 43795F53 		.ascii	"Cy_SAR_SetInterruptMask\000"
 5185      41525F53 
 5185      6574496E 
 5185      74657272 
 5185      7570744D 
 5186              	.LASF436:
 5187 1d3b 43795F53 		.ascii	"Cy_SAR_IsEndConversion\000"
 5187      41525F49 
 5187      73456E64 
 5187      436F6E76 
 5187      65727369 
 5188              	.LASF186:
 5189 1d52 49414252 		.ascii	"IABR\000"
 5189      00
 5190              	.LASF357:
 5191 1d57 6374726C 		.ascii	"ctrl\000"
 5191      00
 5192              	.LASF346:
 5193 1d5c 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_DISABLE\000"
 5193      41525F53 
 5193      57495443 
 5193      485F5345 
 5193      515F4354 
 5194              	.LASF433:
 5195 1d7b 43795F53 		.ascii	"Cy_SAR_Init\000"
 5195      41525F49 
 5195      6E697400 
 5196              	.LASF161:
 5197 1d87 5F5F7569 		.ascii	"__uint8_t\000"
 5197      6E74385F 
 5197      7400
 5198              	.LASF49:
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 215


 5199 1d91 63707573 		.ascii	"cpuss_interrupts_ipc_14_IRQn\000"
 5199      735F696E 
 5199      74657272 
 5199      75707473 
 5199      5F697063 
 5200              	.LASF0:
 5201 1dae 52657365 		.ascii	"Reset_IRQn\000"
 5201      745F4952 
 5201      516E00
 5202              	.LASF277:
 5203 1db9 666C6173 		.ascii	"flashRwwRequired\000"
 5203      68527777 
 5203      52657175 
 5203      69726564 
 5203      00
 5204              	.LASF306:
 5205 1dca 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 5205      50727443 
 5205      66674F66 
 5205      66736574 
 5205      00
 5206              	.LASF272:
 5207 1ddb 65704D6F 		.ascii	"epMonitorNr\000"
 5207      6E69746F 
 5207      724E7200 
 5208              	.LASF70:
 5209 1de7 63707573 		.ascii	"cpuss_interrupts_dw0_10_IRQn\000"
 5209      735F696E 
 5209      74657272 
 5209      75707473 
 5209      5F647730 
 5210              	.LASF2:
 5211 1e04 48617264 		.ascii	"HardFault_IRQn\000"
 5211      4661756C 
 5211      745F4952 
 5211      516E00
 5212              	.LASF159:
 5213 1e13 7369676E 		.ascii	"signed char\000"
 5213      65642063 
 5213      68617200 
 5214              	.LASF148:
 5215 1e1f 70617373 		.ascii	"pass_interrupt_sar_IRQn\000"
 5215      5F696E74 
 5215      65727275 
 5215      70745F73 
 5215      61725F49 
 5216              	.LASF132:
 5217 1e37 7564625F 		.ascii	"udb_interrupts_0_IRQn\000"
 5217      696E7465 
 5217      72727570 
 5217      74735F30 
 5217      5F495251 
 5218              	.LASF260:
 5219 1e4d 63707573 		.ascii	"cpussIpcIrqNr\000"
 5219      73497063 
 5219      4972714E 
 5219      7200
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 216


 5220              	.LASF290:
 5221 1e5b 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 5221      43746C50 
 5221      7265656D 
 5221      70746162 
 5221      6C65506F 
 5222              	.LASF231:
 5223 1e71 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 5223      53574954 
 5223      43485F44 
 5223      535F4354 
 5223      524C00
 5224              	.LASF312:
 5225 1e84 63707573 		.ascii	"cpussCm4StatusOffset\000"
 5225      73436D34 
 5225      53746174 
 5225      75734F66 
 5225      66736574 
 5226              	.LASF15:
 5227 1e99 696F7373 		.ascii	"ioss_interrupts_gpio_5_IRQn\000"
 5227      5F696E74 
 5227      65727275 
 5227      7074735F 
 5227      6770696F 
 5228              	.LASF44:
 5229 1eb5 63707573 		.ascii	"cpuss_interrupts_ipc_9_IRQn\000"
 5229      735F696E 
 5229      74657272 
 5229      75707473 
 5229      5F697063 
 5230              	.LASF233:
 5231 1ed1 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 5231      53574954 
 5231      43485F53 
 5231      54415455 
 5231      5300
 5232              	.LASF182:
 5233 1ee3 49535052 		.ascii	"ISPR\000"
 5233      00
 5234              	.LASF257:
 5235 1ee8 70657269 		.ascii	"periVersion\000"
 5235      56657273 
 5235      696F6E00 
 5236              	.LASF93:
 5237 1ef4 63707573 		.ascii	"cpuss_interrupts_fault_1_IRQn\000"
 5237      735F696E 
 5237      74657272 
 5237      75707473 
 5237      5F666175 
 5238              	.LASF403:
 5239 1f12 6465496E 		.ascii	"deInitRouting\000"
 5239      6974526F 
 5239      7574696E 
 5239      6700
 5240              	.LASF370:
 5241 1f20 636F6E66 		.ascii	"configRouting\000"
 5241      6967526F 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 217


 5241      7574696E 
 5241      6700
 5242              	.LASF247:
 5243 1f2e 70617373 		.ascii	"passBase\000"
 5243      42617365 
 5243      00
 5244              	.LASF284:
 5245 1f37 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 5245      6843746C 
 5245      4D61696E 
 5245      57733246 
 5245      72657100 
 5246              	.LASF10:
 5247 1f4b 696F7373 		.ascii	"ioss_interrupts_gpio_0_IRQn\000"
 5247      5F696E74 
 5247      65727275 
 5247      7074735F 
 5247      6770696F 
 5248              	.LASF118:
 5249 1f67 74637077 		.ascii	"tcpwm_1_interrupts_10_IRQn\000"
 5249      6D5F315F 
 5249      696E7465 
 5249      72727570 
 5249      74735F31 
 5250              	.LASF181:
 5251 1f82 52455345 		.ascii	"RESERVED1\000"
 5251      52564544 
 5251      3100
 5252              	.LASF71:
 5253 1f8c 63707573 		.ascii	"cpuss_interrupts_dw0_11_IRQn\000"
 5253      735F696E 
 5253      74657272 
 5253      75707473 
 5253      5F647730 
 5254              	.LASF225:
 5255 1fa9 53544154 		.ascii	"STATUS\000"
 5255      555300
 5256              	.LASF286:
 5257 1fb0 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 5257      6843746C 
 5257      4D61696E 
 5257      57733446 
 5257      72657100 
 5258              	.LASF79:
 5259 1fc4 63707573 		.ascii	"cpuss_interrupts_dw1_3_IRQn\000"
 5259      735F696E 
 5259      74657272 
 5259      75707473 
 5259      5F647731 
 5260              	.LASF367:
 5261 1fe0 72616E67 		.ascii	"rangeIntrMask\000"
 5261      65496E74 
 5261      724D6173 
 5261      6B00
 5262              	.LASF345:
 5263 1fee 43595F53 		.ascii	"CY_SAR_SWITCH_CLOSE\000"
 5263      41525F53 
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 218


 5263      57495443 
 5263      485F434C 
 5263      4F534500 
 5264              	.LASF404:
 5265 2002 696E7472 		.ascii	"intrMaskReg\000"
 5265      4D61736B 
 5265      52656700 
 5266              	.LASF429:
 5267 200e 44455445 		.ascii	"DETECTOR_ADC_IRQ_cfg\000"
 5267      43544F52 
 5267      5F414443 
 5267      5F495251 
 5267      5F636667 
 5268              	.LASF352:
 5269 2023 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 5269      6E5F7361 
 5269      725F7261 
 5269      6E67655F 
 5269      64657465 
 5270              	.LASF230:
 5271 2046 52455345 		.ascii	"RESERVED9\000"
 5271      52564544 
 5271      3900
 5272              	.LASF137:
 5273 2050 7564625F 		.ascii	"udb_interrupts_5_IRQn\000"
 5273      696E7465 
 5273      72727570 
 5273      74735F35 
 5273      5F495251 
 5274              	.LASF339:
 5275 2066 43595F53 		.ascii	"CY_SAR_START_CONVERT_CONTINUOUS\000"
 5275      41525F53 
 5275      54415254 
 5275      5F434F4E 
 5275      56455254 
 5276              	.LASF94:
 5277 2086 63707573 		.ascii	"cpuss_interrupt_crypto_IRQn\000"
 5277      735F696E 
 5277      74657272 
 5277      7570745F 
 5277      63727970 
 5278              	.LASF100:
 5279 20a2 74637077 		.ascii	"tcpwm_0_interrupts_0_IRQn\000"
 5279      6D5F305F 
 5279      696E7465 
 5279      72727570 
 5279      74735F30 
 5280              	.LASF430:
 5281 20bc 64657374 		.ascii	"dest\000"
 5281      00
 5282              	.LASF399:
 5283 20c1 44455445 		.ascii	"DETECTOR_ADC_IRQ_Enable\000"
 5283      43544F52 
 5283      5F414443 
 5283      5F495251 
 5283      5F456E61 
 5284              	.LASF256:
ARM GAS  C:\Users\Ramon\AppData\Local\Temp\cc2qoQyP.s 			page 219


 5285 20d9 69706356 		.ascii	"ipcVersion\000"
 5285      65727369 
 5285      6F6E00
 5286              	.LASF38:
 5287 20e4 63707573 		.ascii	"cpuss_interrupts_ipc_3_IRQn\000"
 5287      735F696E 
 5287      74657272 
 5287      75707473 
 5287      5F697063 
 5288              	.LASF365:
 5289 2100 696E7472 		.ascii	"intrMask\000"
 5289      4D61736B 
 5289      00
 5290              	.LASF293:
 5291 2109 70657269 		.ascii	"periTrCmdOffset\000"
 5291      5472436D 
 5291      644F6666 
 5291      73657400 
 5292              	.LASF58:
 5293 2119 7363625F 		.ascii	"scb_7_interrupt_IRQn\000"
 5293      375F696E 
 5293      74657272 
 5293      7570745F 
 5293      4952516E 
 5294              	.LASF192:
 5295 212e 4354524C 		.ascii	"CTRL\000"
 5295      00
 5296              	.LASF98:
 5297 2133 63707573 		.ascii	"cpuss_interrupts_cm4_cti_0_IRQn\000"
 5297      735F696E 
 5297      74657272 
 5297      75707473 
 5297      5F636D34 
 5298              	.LASF110:
 5299 2153 74637077 		.ascii	"tcpwm_1_interrupts_2_IRQn\000"
 5299      6D5F315F 
 5299      696E7465 
 5299      72727570 
 5299      74735F32 
 5300              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
